{"ast":null,"code":"import _toConsumableArray from\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _regeneratorRuntime from\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _slicedToArray from\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React,{useState,useEffect}from'react';import'./App.css';import{useSession,useSupabaseClient,useSessionContext}from'@supabase/auth-helpers-react';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function createGoogleCalendarEvent(_x,_x2,_x3,_x4,_x5,_x6){return _createGoogleCalendarEvent.apply(this,arguments);}function _createGoogleCalendarEvent(){_createGoogleCalendarEvent=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event,calendarId,session,signOut,setRateLimitInfo,setRateLimitHit){var existingGoogleEventId,url,updatedEvent,response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:console.log(\"Attempting to create a new Google Calendar event for calendar: \".concat(calendarId),event);// Final duplicate check before creating\n_context.next=3;return checkForDuplicateEvent(event,calendarId,session);case 3:existingGoogleEventId=_context.sent;if(!existingGoogleEventId){_context.next=7;break;}console.log('Duplicate event detected in final check, skipping creation:',existingGoogleEventId);return _context.abrupt(\"return\",existingGoogleEventId);case 7:// Proceed with event creation\nurl=\"https://www.googleapis.com/calendar/v3/calendars/\".concat(calendarId,\"/events\");updatedEvent={summary:event.title,description:\"\\n      \".concat(event.description,\"\\n      \\nlocation: \").concat(event.location,\"\\n      \\nHomeowner Name: \").concat(event.homeownerName,\"\\n      \\nMaterials Needed: \").concat(event.materialsNeeded||'Not specified',\"\\n    \"),start:{dateTime:event.start.toISOString()},end:{dateTime:event.end.toISOString()},location:\"\".concat(event.streetAddress,\", \").concat(event.city,\", \").concat(event.state,\", \").concat(event.zipCode)};console.log('Event data being sent to Google Calendar API:',updatedEvent);_context.prev=10;_context.next=13;return fetch(url,{method:'POST',headers:{Authorization:'Bearer '+session.provider_token,'Content-Type':'application/json'},body:JSON.stringify(updatedEvent)});case 13:response=_context.sent;if(!(response.status===429)){_context.next=18;break;}console.error('Rate limit reached. Stopping further requests.');setRateLimitHit(true);return _context.abrupt(\"return\",null);case 18:_context.next=20;return response.json();case 20:data=_context.sent;if(!response.ok){_context.next=28;break;}console.log('Event successfully created in Google Calendar with ID:',data.id);// Update Airtable with the Google Event ID\n_context.next=25;return updateAirtableWithGoogleEventIdAndProcessed(event.id,data.id);case 25:return _context.abrupt(\"return\",data.id);case 28:console.error('Failed to create event:',data);return _context.abrupt(\"return\",null);case 30:_context.next=36;break;case 32:_context.prev=32;_context.t0=_context[\"catch\"](10);console.error('Error during Google Calendar API request:',_context.t0);return _context.abrupt(\"return\",null);case 36:case\"end\":return _context.stop();}},_callee,null,[[10,32]]);}));return _createGoogleCalendarEvent.apply(this,arguments);}function updateGoogleCalendarEvent(_x7,_x8,_x9,_x10,_x11){return _updateGoogleCalendarEvent.apply(this,arguments);}function _updateGoogleCalendarEvent(){_updateGoogleCalendarEvent=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(event,calendarId,eventId,session,signOut){var setRateLimitInfo,setRateLimitHit,url,updatedEvent,response,data,remaining,limit,reset,_args2=arguments;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:setRateLimitInfo=_args2.length>5&&_args2[5]!==undefined?_args2[5]:function(){};setRateLimitHit=_args2.length>6&&_args2[6]!==undefined?_args2[6]:function(){};console.log(\"Updating Google Calendar event for ID: \".concat(eventId));url=\"https://www.googleapis.com/calendar/v3/calendars/\".concat(calendarId,\"/events/\").concat(eventId);updatedEvent={summary:event.title,description:\"\\n      \".concat(event.description,\"\\n      \\nlocation: \").concat(event.location,\"\\n      \\nHomeowner Name: \").concat(event.homeownerName,\"\\n      \\nMaterials Needed: \").concat(event.materialsNeeded||'Not specified',\"\\n    \"),start:{dateTime:event.start.toISOString()},end:{dateTime:event.end.toISOString()},location:\"\".concat(event.streetAddress,\", \").concat(event.city,\", \").concat(event.state,\", \").concat(event.zipCode)};_context2.prev=5;_context2.next=8;return fetch(url,{method:'PATCH',headers:{Authorization:'Bearer '+session.provider_token,'Content-Type':'application/json'},body:JSON.stringify(updatedEvent)});case 8:response=_context2.sent;if(!(response.status===429)){_context2.next=13;break;}console.error('Rate limit reached. Stopping further requests.');setRateLimitHit(true);// Stop further requests\nreturn _context2.abrupt(\"return\",null);case 13:_context2.next=15;return response.json();case 15:data=_context2.sent;remaining=response.headers.get('X-RateLimit-Remaining');limit=response.headers.get('X-RateLimit-Limit');reset=response.headers.get('X-RateLimit-Reset');setRateLimitInfo({remaining:remaining,limit:limit,reset:reset});if(!response.ok){_context2.next=25;break;}console.log('Event successfully updated in Google Calendar with ID:',data.id);return _context2.abrupt(\"return\",data.id);case 25:console.error('Failed to update event:',data);if(data.error&&data.error.code===401){signOut();// Handle invalid token by signing out\n}return _context2.abrupt(\"return\",null);case 28:_context2.next=34;break;case 30:_context2.prev=30;_context2.t0=_context2[\"catch\"](5);console.error('Error during Google Calendar API request in updateGoogleCalendarEvent:',_context2.t0);return _context2.abrupt(\"return\",null);case 34:case\"end\":return _context2.stop();}},_callee2,null,[[5,30]]);}));return _updateGoogleCalendarEvent.apply(this,arguments);}function updateAirtableWithGoogleEventIdAndProcessed(_x12,_x13){return _updateAirtableWithGoogleEventIdAndProcessed.apply(this,arguments);}function _updateAirtableWithGoogleEventIdAndProcessed(){_updateAirtableWithGoogleEventIdAndProcessed=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(airtableRecordId,googleEventId){var url,updateData,response,data;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:console.log(\"Updating Airtable record \".concat(airtableRecordId,\" with Google Event ID: \").concat(googleEventId,\" and marking as processed\"));url=\"https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/\".concat(airtableRecordId);// Ensure data matches Airtable fields exactly\nupdateData={fields:{GoogleEventId:googleEventId,// Ensure this matches the Airtable field name exactly\nProcessed:true,// Ensure this is a boolean if Airtable expects a checkbox\nLastUpdated:new Date().toISOString()// Ensure this is in proper date format\n}};console.log('Data being sent to Airtable:',updateData);// Debug the data being sent\n_context3.prev=4;_context3.next=7;return fetch(url,{method:'PATCH',headers:{Authorization:'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',// Replace with your actual API key\n'Content-Type':'application/json'},body:JSON.stringify(updateData)});case 7:response=_context3.sent;_context3.next=10;return response.json();case 10:data=_context3.sent;if(!response.ok){console.error('Error updating Airtable:',data.error);// Inspect the error\n}else{console.log('Airtable record successfully updated:',data);}_context3.next=17;break;case 14:_context3.prev=14;_context3.t0=_context3[\"catch\"](4);console.error('Error during Airtable API request:',_context3.t0);case 17:case\"end\":return _context3.stop();}},_callee3,null,[[4,14]]);}));return _updateAirtableWithGoogleEventIdAndProcessed.apply(this,arguments);}function lockAirtableRecord(_x14){return _lockAirtableRecord.apply(this,arguments);}function _lockAirtableRecord(){_lockAirtableRecord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(airtableRecordId){var url,updateData;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:url=\"https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/\".concat(airtableRecordId);updateData={fields:{Processing:true// Mark record as being processed\n}};_context4.prev=2;_context4.next=5;return fetch(url,{method:'PATCH',headers:{'Authorization':'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238','Content-Type':'application/json'},body:JSON.stringify(updateData)});case 5:console.log(\"Locked record \".concat(airtableRecordId,\" for Processed\"));_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](2);console.error(\"Failed to lock record \".concat(airtableRecordId),_context4.t0);case 11:case\"end\":return _context4.stop();}},_callee4,null,[[2,8]]);}));return _lockAirtableRecord.apply(this,arguments);}function unlockAirtableRecord(_x15){return _unlockAirtableRecord.apply(this,arguments);}function _unlockAirtableRecord(){_unlockAirtableRecord=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(airtableRecordId){var url,response,data;return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:url=\"https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/\".concat(airtableRecordId);_context5.prev=1;_context5.next=4;return fetch(url,{method:'PATCH',headers:{'Authorization':'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238','Content-Type':'application/json'},body:JSON.stringify({fields:{}})// Empty body if you are no longer updating any fields\n});case 4:response=_context5.sent;_context5.next=7;return response.json();case 7:data=_context5.sent;if(response.ok){_context5.next=11;break;}console.error('Error unlocking Airtable record:',data.error||data);throw new Error(data.error||'Unknown error');case 11:console.log(\"Unlocked record \".concat(airtableRecordId,\" after processing\"));_context5.next=17;break;case 14:_context5.prev=14;_context5.t0=_context5[\"catch\"](1);console.error(\"Failed to unlock record \".concat(airtableRecordId),_context5.t0);case 17:case\"end\":return _context5.stop();}},_callee5,null,[[1,14]]);}));return _unlockAirtableRecord.apply(this,arguments);}function updateAirtableWithProcessed(_x16){return _updateAirtableWithProcessed.apply(this,arguments);}function _updateAirtableWithProcessed(){_updateAirtableWithProcessed=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(airtableRecordId){var url,updateData,response,data;return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:console.log(\"Marking Airtable record \".concat(airtableRecordId,\" as processed\"));url=\"https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/\".concat(airtableRecordId);updateData={fields:{Processed:true// Mark as processed\n}};_context6.prev=3;_context6.next=6;return fetch(url,{method:'PATCH',headers:{'Authorization':'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238','Content-Type':'application/json'},body:JSON.stringify(updateData)});case 6:response=_context6.sent;_context6.next=9;return response.json();case 9:data=_context6.sent;console.log('Airtable update response:',data);if(data.error){console.error('Error updating Airtable with processed status:',data.error);}else{console.log('Airtable record successfully marked as processed:',data);}_context6.next=17;break;case 14:_context6.prev=14;_context6.t0=_context6[\"catch\"](3);console.error('Error during Airtable API request:',_context6.t0);case 17:case\"end\":return _context6.stop();}},_callee6,null,[[3,14]]);}));return _updateAirtableWithProcessed.apply(this,arguments);}function fetchAirtableEvents(){return _fetchAirtableEvents.apply(this,arguments);}function _fetchAirtableEvents(){_fetchAirtableEvents=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(){var retryCount,url,response,data,filteredRecords,_args7=arguments;return _regeneratorRuntime().wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:retryCount=_args7.length>0&&_args7[0]!==undefined?_args7[0]:0;console.log('Fetching unprocessed events from Airtable...');url=\"https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ?filterByFormula=OR(NOT({Processed}), {GoogleEventId} != BLANK())\";_context7.prev=3;_context7.next=6;return fetch(url,{headers:{'Authorization':'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238','Content-Type':'application/json'}});case 6:response=_context7.sent;if(response.ok){_context7.next=10;break;}console.error(\"Error fetching events from Airtable: HTTP \".concat(response.status));return _context7.abrupt(\"return\",[]);case 10:_context7.next=12;return response.json();case 12:data=_context7.sent;console.log('Raw Airtable data fetched:',data);filteredRecords=data.records.filter(function(record){// Ensure event has a name, start and end dates\nreturn record.fields['Calendar Event Name']&&record.fields['StartDate']&&record.fields['EndDate'];}).map(function(record){return{id:record.id,title:record.fields['Calendar Event Name']||'Untitled Event',start:new Date(record.fields['StartDate']),end:new Date(record.fields['EndDate']),description:record.fields['Billable Reason (If Billable)']||'',branch:record.fields['b']||'Unknown',homeownerName:record.fields['Homeowner Name']||'Unknown',materialsNeeded:record.fields['Materials Needed']||'Not specified',streetAddress:record.fields['Street Address']||'Unknown',city:record.fields['City']||'Unknown',state:record.fields['State']||'Unknown',zipCode:record.fields['Zip Code']||'Unknown',googleEventId:record.fields['GoogleEventId']||null,processed:record.fields['Processed']||false// Track the Processed field\n};});console.log(\"Airtable events to process: \".concat(filteredRecords.length),filteredRecords);return _context7.abrupt(\"return\",filteredRecords);case 19:_context7.prev=19;_context7.t0=_context7[\"catch\"](3);console.error('Error fetching events from Airtable:',_context7.t0);return _context7.abrupt(\"return\",[]);case 23:case\"end\":return _context7.stop();}},_callee7,null,[[3,19]]);}));return _fetchAirtableEvents.apply(this,arguments);}function checkForDuplicateEvent(_x17,_x18,_x19){return _checkForDuplicateEvent.apply(this,arguments);}function _checkForDuplicateEvent(){_checkForDuplicateEvent=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(event,calendarId,session){var url,response,data,existingEvent,fieldsToCheck,isDifferent;return _regeneratorRuntime().wrap(function _callee8$(_context8){while(1)switch(_context8.prev=_context8.next){case 0:url=\"https://www.googleapis.com/calendar/v3/calendars/\".concat(calendarId,\"/events?timeMin=\").concat(event.start.toISOString(),\"&timeMax=\").concat(event.end.toISOString());_context8.prev=1;_context8.next=4;return fetch(url,{headers:{Authorization:'Bearer '+session.provider_token}});case 4:response=_context8.sent;_context8.next=7;return response.json();case 7:data=_context8.sent;if(!(data.items&&data.items.length>0)){_context8.next=14;break;}existingEvent=data.items.find(function(existingEvent){return existingEvent.summary===event.title&&// Match title\nexistingEvent.location===\"\".concat(event.streetAddress,\", \").concat(event.city,\", \").concat(event.state,\", \").concat(event.zipCode);}// Match location\n);if(!existingEvent){_context8.next=14;break;}// Check for field differences\nfieldsToCheck=['summary','description','start','end','location'];isDifferent=fieldsToCheck.some(function(field){var eventField=field==='start'||field==='end'?event[field].toISOString():event[field];var existingEventField=field==='start'||field==='end'?existingEvent[field].dateTime:existingEvent[field];return eventField!==existingEventField;});// If there's a difference, trigger an update\nreturn _context8.abrupt(\"return\",isDifferent?existingEvent.id:null);case 14:_context8.next=20;break;case 16:_context8.prev=16;_context8.t0=_context8[\"catch\"](1);console.error('Error checking for duplicate events in Google Calendar:',_context8.t0);return _context8.abrupt(\"return\",null);case 20:return _context8.abrupt(\"return\",null);case 21:case\"end\":return _context8.stop();}},_callee8,null,[[1,16]]);}));return _checkForDuplicateEvent.apply(this,arguments);}function sleep(ms){return new Promise(function(resolve){return setTimeout(resolve,ms);});}function populateGoogleCalendarWithAirtableRecords(_x20,_x21,_x22,_x23,_x24,_x25,_x26,_x27,_x28){return _populateGoogleCalendarWithAirtableRecords.apply(this,arguments);}function _populateGoogleCalendarWithAirtableRecords(){_populateGoogleCalendarWithAirtableRecords=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(calendarId,calendarName,session,signOut,setAddedRecords,setFailedRecords,setRateLimitInfo,rateLimitHit,setRateLimitHit){var airtableEvents,added,failed,_iterator,_step,event,googleEventId,existingGoogleEventId;return _regeneratorRuntime().wrap(function _callee9$(_context9){while(1)switch(_context9.prev=_context9.next){case 0:console.log(\"Starting to populate Google Calendar \\\"\".concat(calendarName,\"\\\" with Airtable records...\"));_context9.next=3;return fetchAirtableEvents();case 3:airtableEvents=_context9.sent;console.log(\"Processing \".concat(airtableEvents.length,\" Airtable events for Google Calendar sync...\"));// Define `added` and `failed` arrays here\nadded=[];failed=[];_iterator=_createForOfIteratorHelper(airtableEvents);_context9.prev=8;_iterator.s();case 10:if((_step=_iterator.n()).done){_context9.next=60;break;}event=_step.value;if(!rateLimitHit){_context9.next=15;break;}console.log(\"Rate limit hit. Stopping further processing.\");return _context9.abrupt(\"break\",60);case 15:console.log(\"Processing event \\\"\".concat(event.title,\"\\\"...\"));if(!(event.branch.toLowerCase()==='unknown'||event.branch.toLowerCase()!==calendarName.toLowerCase())){_context9.next=19;break;}console.log(\"Skipping event \\\"\".concat(event.title,\"\\\" due to branch mismatch.\"));return _context9.abrupt(\"continue\",58);case 19:_context9.next=21;return lockAirtableRecord(event.id);case 21:_context9.prev=21;googleEventId=void 0;if(!event.googleEventId){_context9.next=37;break;}console.log(\"Event \\\"\".concat(event.title,\"\\\" already has a GoogleEventId: \").concat(event.googleEventId,\". Verifying in Google Calendar...\"));_context9.next=27;return checkForDuplicateEvent(event,calendarId,session);case 27:existingGoogleEventId=_context9.sent;if(!existingGoogleEventId){_context9.next=34;break;}_context9.next=31;return updateGoogleCalendarEvent(event,calendarId,existingGoogleEventId,session,signOut,setRateLimitInfo,setRateLimitHit);case 31:googleEventId=_context9.sent;_context9.next=35;break;case 34:console.log(\"No duplicate found for event \\\"\".concat(event.title,\"\\\". Skipping update.\"));case 35:_context9.next=40;break;case 37:_context9.next=39;return createGoogleCalendarEvent(event,calendarId,session,signOut,setRateLimitInfo,setRateLimitHit);case 39:googleEventId=_context9.sent;case 40:if(!googleEventId){_context9.next=47;break;}console.log('Updating Airtable with Google Event ID:',googleEventId);// Update Airtable with the Google Event ID and mark as processed\n_context9.next=44;return updateAirtableWithGoogleEventIdAndProcessed(event.id,googleEventId);case 44:added.push(event.title);_context9.next=48;break;case 47:failed.push(event.title);case 48:_context9.next=54;break;case 50:_context9.prev=50;_context9.t0=_context9[\"catch\"](21);console.error(\"Error processing event \\\"\".concat(event.title,\"\\\":\"),_context9.t0);failed.push(event.title);case 54:_context9.next=56;return unlockAirtableRecord(event.id);case 56:_context9.next=58;return sleep(1000);case 58:_context9.next=10;break;case 60:_context9.next=65;break;case 62:_context9.prev=62;_context9.t1=_context9[\"catch\"](8);_iterator.e(_context9.t1);case 65:_context9.prev=65;_iterator.f();return _context9.finish(65);case 68:setAddedRecords(function(prev){return[].concat(_toConsumableArray(prev),added);});setFailedRecords(function(prev){return[].concat(_toConsumableArray(prev),failed);});console.log(\"Finished populating Google Calendar \\\"\".concat(calendarName,\"\\\" with Airtable records.\"));case 71:case\"end\":return _context9.stop();}},_callee9,null,[[8,62,65,68],[21,50]]);}));return _populateGoogleCalendarWithAirtableRecords.apply(this,arguments);}function CalendarSection(_ref){var calendarId=_ref.calendarId,calendarName=_ref.calendarName,session=_ref.session,signOut=_ref.signOut,setAddedRecords=_ref.setAddedRecords,setFailedRecords=_ref.setFailedRecords,setRateLimitInfo=_ref.setRateLimitInfo,triggerSync=_ref.triggerSync,setTriggerSync=_ref.setTriggerSync;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),lastSyncTime=_useState2[0],setLastSyncTime=_useState2[1];useEffect(function(){var syncEvents=function syncEvents(){var now=new Date();console.log('Attempting to sync events...');if(session&&triggerSync){if(!session.provider_token){console.error('No valid session token found. Logging out.');signOut();return;}console.log('Session valid. Initiating sync...');populateGoogleCalendarWithAirtableRecords(calendarId,calendarName,session,signOut,setAddedRecords,setFailedRecords,setRateLimitInfo).then(function(){console.log(\"Finished syncing events to Google Calendar \\\"\".concat(calendarName,\"\\\"\"));setLastSyncTime(new Date());// Update last sync time\nsetTriggerSync(false);// Reset the triggerSync after sync\n}).catch(function(error){return console.error(\"Error syncing Airtable to Google Calendar \\\"\".concat(calendarName,\"\\\":\"),error);});}};if(triggerSync){console.log(\"Manual sync triggered for calendar: \".concat(calendarName));syncEvents();// Call syncEvents once here, no recursion\n}},[session,signOut,calendarId,calendarName,setAddedRecords,setFailedRecords,setRateLimitInfo,lastSyncTime,triggerSync,setTriggerSync]);return/*#__PURE__*/_jsx(\"div\",{className:\"calendar-item\",children:/*#__PURE__*/_jsx(\"h2\",{children:calendarName})});}function App(){var session=useSession();var supabase=useSupabaseClient();var _useSessionContext=useSessionContext(),isLoading=_useSessionContext.isLoading;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),addedRecords=_useState4[0],setAddedRecords=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),failedRecords=_useState6[0],setFailedRecords=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),triggerSync=_useState8[0],setTriggerSync=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),rateLimitHit=_useState10[0],setRateLimitHit=_useState10[1];// Move this here\nvar calendarInfo=[{id:'c_ebe1fcbce1be361c641591a6c389d4311df7a97961af0020c889686ae059d20a@group.calendar.google.com',name:'Savannah'}].sort(function(a,b){return a.name.localeCompare(b.name);});var handleSyncNow=function handleSyncNow(){console.log('Manual sync button clicked.');setTriggerSync(true);// Trigger manual sync\n};var getGreeting=function getGreeting(){var currentHour=new Date().getHours();if(currentHour<12){return'Good morning';}else if(currentHour<18){return'Good afternoon';}else{return'Good evening';}};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Warranty Calendar\"}),/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',margin:'0 auto'},children:session?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[getGreeting(),\" \",session.user.email]}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSyncNow,children:\"Sync Now\"}),\" \",/*#__PURE__*/_jsx(\"div\",{className:\"calendar-grid\",children:calendarInfo.map(function(calendar){return/*#__PURE__*/_jsx(CalendarSection,{calendarId:calendar.id,calendarName:calendar.name,session:session,signOut:function signOut(){return supabase.auth.signOut();},setAddedRecords:setAddedRecords,setFailedRecords:setFailedRecords,triggerSync:triggerSync,setTriggerSync:setTriggerSync,rateLimitHit:rateLimitHit// Pass rateLimitHit as prop\n,setRateLimitHit:setRateLimitHit// Pass setter as prop\n},calendar.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"records-summary\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Records Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"added-records\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Successfully Added Records:\"}),addedRecords.length>0?/*#__PURE__*/_jsx(\"ul\",{children:addedRecords.map(function(record,index){return/*#__PURE__*/_jsx(\"li\",{children:record},index);})}):/*#__PURE__*/_jsx(\"p\",{children:\"No records added.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"failed-records\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Failed to Add Records:\"}),failedRecords.length>0?/*#__PURE__*/_jsx(\"ul\",{children:failedRecords.map(function(record,index){return/*#__PURE__*/_jsx(\"li\",{children:record},index);})}):/*#__PURE__*/_jsx(\"p\",{children:\"No records failed.\"})]})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return supabase.auth.signOut();},children:\"Sign Out\"})]}):/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return supabase.auth.signInWithOAuth({provider:'google',options:{scopes:'https://www.googleapis.com/auth/calendar'}});},children:\"Sign In With Google\"})})})]})});}export default App;// Ensure default export","map":{"version":3,"names":["React","useState","useEffect","useSession","useSupabaseClient","useSessionContext","createGoogleCalendarEvent","event","calendarId","session","signOut","setRateLimitInfo","setRateLimitHit","console","log","checkForDuplicateEvent","existingGoogleEventId","url","updatedEvent","summary","title","description","location","homeownerName","materialsNeeded","start","dateTime","toISOString","end","streetAddress","city","state","zipCode","fetch","method","headers","Authorization","provider_token","body","JSON","stringify","response","status","error","json","data","ok","id","updateAirtableWithGoogleEventIdAndProcessed","updateGoogleCalendarEvent","eventId","remaining","get","limit","reset","code","airtableRecordId","googleEventId","updateData","fields","GoogleEventId","Processed","LastUpdated","Date","lockAirtableRecord","Processing","unlockAirtableRecord","Error","updateAirtableWithProcessed","fetchAirtableEvents","retryCount","filteredRecords","records","filter","record","map","branch","processed","length","items","existingEvent","find","fieldsToCheck","isDifferent","some","field","eventField","existingEventField","sleep","ms","Promise","resolve","setTimeout","populateGoogleCalendarWithAirtableRecords","calendarName","setAddedRecords","setFailedRecords","rateLimitHit","airtableEvents","added","failed","toLowerCase","push","prev","CalendarSection","triggerSync","setTriggerSync","lastSyncTime","setLastSyncTime","syncEvents","now","then","catch","App","supabase","isLoading","addedRecords","failedRecords","calendarInfo","name","sort","a","b","localeCompare","handleSyncNow","getGreeting","currentHour","getHours","width","margin","user","email","calendar","auth","index","signInWithOAuth","provider","options","scopes"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\n\n\n\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut, setRateLimitInfo, setRateLimitHit) {\n  console.log(`Attempting to create a new Google Calendar event for calendar: ${calendarId}`, event);\n\n  // Final duplicate check before creating\n  const existingGoogleEventId = await checkForDuplicateEvent(event, calendarId, session);\n  if (existingGoogleEventId) {\n    console.log('Duplicate event detected in final check, skipping creation:', existingGoogleEventId);\n    return existingGoogleEventId;\n  }\n\n  // Proceed with event creation\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n\n  const updatedEvent = {\n    summary: event.title,\n    description: `\n      ${event.description}\n      \\nlocation: ${event.location}\n      \\nHomeowner Name: ${event.homeownerName}\n      \\nMaterials Needed: ${event.materialsNeeded || 'Not specified'}\n    `,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  console.log('Event data being sent to Google Calendar API:', updatedEvent);\n\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedEvent),\n    });\n\n    if (response.status === 429) {\n      console.error('Rate limit reached. Stopping further requests.');\n      setRateLimitHit(true);\n      return null;\n    }\n\n    const data = await response.json();\n    if (response.ok) {\n      console.log('Event successfully created in Google Calendar with ID:', data.id);\n\n      // Update Airtable with the Google Event ID\n      await updateAirtableWithGoogleEventIdAndProcessed(event.id, data.id);\n\n      return data.id;\n    } else {\n      console.error('Failed to create event:', data);\n      return null;\n    }\n  } catch (error) {\n    console.error('Error during Google Calendar API request:', error);\n    return null;\n  }\n}\n\n\nasync function updateGoogleCalendarEvent(\n  event,\n  calendarId,\n  eventId,\n  session,\n  signOut,\n  setRateLimitInfo = () => {}, // Default empty function\n  setRateLimitHit = () => {} // Default empty function\n) {\n  console.log(`Updating Google Calendar event for ID: ${eventId}`);\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${eventId}`;\n\n  const updatedEvent = {\n    summary: event.title,\n    description: `\n      ${event.description}\n      \\nlocation: ${event.location}\n      \\nHomeowner Name: ${event.homeownerName}\n      \\nMaterials Needed: ${event.materialsNeeded || 'Not specified'}\n    `,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  try {\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Authorization: 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedEvent),\n    });\n\n    // Check for rate limit and handle it\n    if (response.status === 429) {\n      console.error('Rate limit reached. Stopping further requests.');\n      setRateLimitHit(true); // Stop further requests\n      return null;\n    }\n\n    const data = await response.json();\n    const remaining = response.headers.get('X-RateLimit-Remaining');\n    const limit = response.headers.get('X-RateLimit-Limit');\n    const reset = response.headers.get('X-RateLimit-Reset');\n    setRateLimitInfo({ remaining, limit, reset });\n\n    if (response.ok) {\n      console.log('Event successfully updated in Google Calendar with ID:', data.id);\n      return data.id;\n    } else {\n      console.error('Failed to update event:', data);\n      if (data.error && data.error.code === 401) {\n        signOut(); // Handle invalid token by signing out\n      }\n      return null;\n    }\n  } catch (error) {\n    console.error('Error during Google Calendar API request in updateGoogleCalendarEvent:', error);\n    return null;\n  }\n}\n\n\n\n\nasync function updateAirtableWithGoogleEventIdAndProcessed(airtableRecordId, googleEventId) {\n  console.log(`Updating Airtable record ${airtableRecordId} with Google Event ID: ${googleEventId} and marking as processed`);\n  \n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n\n  // Ensure data matches Airtable fields exactly\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId,  // Ensure this matches the Airtable field name exactly\n      Processed: true,               // Ensure this is a boolean if Airtable expects a checkbox\n      LastUpdated: new Date().toISOString(),  // Ensure this is in proper date format\n    },\n  };\n\n  console.log('Data being sent to Airtable:', updateData);  // Debug the data being sent\n\n  try {\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        Authorization: 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',  // Replace with your actual API key\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updateData),\n    });\n\n    const data = await response.json();\nif (!response.ok) {\n  console.error('Error updating Airtable:', data.error);  // Inspect the error\n} else {\n      console.log('Airtable record successfully updated:', data);\n    }\n  } catch (error) {\n    console.error('Error during Airtable API request:', error);\n  }\n}\n\n\n\nasync function lockAirtableRecord(airtableRecordId) {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      Processing: true, // Mark record as being processed\n    },\n  };\n\n  try {\n    await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updateData),\n    });\n    console.log(`Locked record ${airtableRecordId} for Processed`);\n  } catch (error) {\n    console.error(`Failed to lock record ${airtableRecordId}`, error);\n  }\n}\n\nasync function unlockAirtableRecord(airtableRecordId) {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n\n  try {\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ fields: {} }), // Empty body if you are no longer updating any fields\n    });\n\n    const data = await response.json();\n\n    if (!response.ok) {\n      console.error('Error unlocking Airtable record:', data.error || data);\n      throw new Error(data.error || 'Unknown error');\n    }\n\n    console.log(`Unlocked record ${airtableRecordId} after processing`);\n  } catch (error) {\n    console.error(`Failed to unlock record ${airtableRecordId}`, error);\n  }\n}\n\nasync function updateAirtableWithProcessed(airtableRecordId) {\n  console.log(`Marking Airtable record ${airtableRecordId} as processed`);\n\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      Processed: true,  // Mark as processed\n    },\n  };\n\n  try {\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updateData),\n    });\n\n    const data = await response.json();\n    console.log('Airtable update response:', data);\n\n    if (data.error) {\n      console.error('Error updating Airtable with processed status:', data.error);\n    } else {\n      console.log('Airtable record successfully marked as processed:', data);\n    }\n  } catch (error) {\n    console.error('Error during Airtable API request:', error);\n  }\n}\n\nasync function fetchAirtableEvents(retryCount = 0) {\n  console.log('Fetching unprocessed events from Airtable...');\n\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ?filterByFormula=OR(NOT({Processed}), {GoogleEventId} != BLANK())`;\n\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      console.error(`Error fetching events from Airtable: HTTP ${response.status}`);\n      return [];\n    }\n\n    const data = await response.json();\n    console.log('Raw Airtable data fetched:', data);\n\n    const filteredRecords = data.records\n      .filter((record) => {\n        // Ensure event has a name, start and end dates\n        return record.fields['Calendar Event Name'] && record.fields['StartDate'] && record.fields['EndDate'];\n      })\n      .map((record) => ({\n        id: record.id,\n        title: record.fields['Calendar Event Name'] || 'Untitled Event',\n        start: new Date(record.fields['StartDate']),\n        end: new Date(record.fields['EndDate']),\n        description: record.fields['Billable Reason (If Billable)'] || '',\n        branch: record.fields['b'] || 'Unknown',\n        homeownerName: record.fields['Homeowner Name'] || 'Unknown',\n        materialsNeeded: record.fields['Materials Needed'] || 'Not specified',\n        streetAddress: record.fields['Street Address'] || 'Unknown',\n        city: record.fields['City'] || 'Unknown',\n        state: record.fields['State'] || 'Unknown',\n        zipCode: record.fields['Zip Code'] || 'Unknown',\n        googleEventId: record.fields['GoogleEventId'] || null,\n        processed: record.fields['Processed'] || false,  // Track the Processed field\n      }));\n\n    console.log(`Airtable events to process: ${filteredRecords.length}`, filteredRecords);\n    return filteredRecords;\n\n  } catch (error) {\n    console.error('Error fetching events from Airtable:', error);\n    return [];\n  }\n}\n\nasync function checkForDuplicateEvent(event, calendarId, session) {\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?timeMin=${event.start.toISOString()}&timeMax=${event.end.toISOString()}`;\n\n  try {\n    const response = await fetch(url, {\n      headers: {\n        Authorization: 'Bearer ' + session.provider_token,\n      },\n    });\n\n    const data = await response.json();\n\n    if (data.items && data.items.length > 0) {\n      const existingEvent = data.items.find(\n        (existingEvent) =>\n          existingEvent.summary === event.title && // Match title\n          existingEvent.location === `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}` // Match location\n      );\n\n      if (existingEvent) {\n        // Check for field differences\n        const fieldsToCheck = ['summary', 'description', 'start', 'end', 'location'];\n        const isDifferent = fieldsToCheck.some((field) => {\n          const eventField = field === 'start' || field === 'end' ? event[field].toISOString() : event[field];\n          const existingEventField = field === 'start' || field === 'end' ? existingEvent[field].dateTime : existingEvent[field];\n          return eventField !== existingEventField;\n        });\n\n        // If there's a difference, trigger an update\n        return isDifferent ? existingEvent.id : null;\n      }\n    }\n  } catch (error) {\n    console.error('Error checking for duplicate events in Google Calendar:', error);\n    return null;\n  }\n\n  return null;\n}\n\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nasync function populateGoogleCalendarWithAirtableRecords(\n  calendarId,\n  calendarName,\n  session,\n  signOut,\n  setAddedRecords,\n  setFailedRecords,\n  setRateLimitInfo,\n  rateLimitHit,\n  setRateLimitHit\n) {\n  console.log(`Starting to populate Google Calendar \"${calendarName}\" with Airtable records...`);\n\n  const airtableEvents = await fetchAirtableEvents();\n  console.log(`Processing ${airtableEvents.length} Airtable events for Google Calendar sync...`);\n\n  // Define `added` and `failed` arrays here\n  const added = [];\n  const failed = [];\n\n  for (const event of airtableEvents) {\n    if (rateLimitHit) {\n      console.log(`Rate limit hit. Stopping further processing.`);\n      break;\n    }\n\n    console.log(`Processing event \"${event.title}\"...`);\n\n    if (event.branch.toLowerCase() === 'unknown' || event.branch.toLowerCase() !== calendarName.toLowerCase()) {\n      console.log(`Skipping event \"${event.title}\" due to branch mismatch.`);\n      continue;\n    }\n\n    // Lock the record to prevent it from being processed by another process\n    await lockAirtableRecord(event.id);\n\n    try {\n      let googleEventId;\n\n      if (event.googleEventId) {\n        console.log(`Event \"${event.title}\" already has a GoogleEventId: ${event.googleEventId}. Verifying in Google Calendar...`);\n\n        const existingGoogleEventId = await checkForDuplicateEvent(event, calendarId, session);\n\n        // Only proceed if existingGoogleEventId is not null\n        if (existingGoogleEventId) {\n          googleEventId = await updateGoogleCalendarEvent(\n            event,\n            calendarId,\n            existingGoogleEventId,\n            session,\n            signOut,\n            setRateLimitInfo,\n            setRateLimitHit\n          );\n        } else {\n          console.log(`No duplicate found for event \"${event.title}\". Skipping update.`);\n        }\n      } else {\n        // Check Google Calendar for an existing event to avoid duplicates\n        googleEventId = await createGoogleCalendarEvent(\n          event,\n          calendarId,\n          session,\n          signOut,\n          setRateLimitInfo,\n          setRateLimitHit\n        );\n      }\n\n      if (googleEventId) {\n        console.log('Updating Airtable with Google Event ID:', googleEventId);\n\n        // Update Airtable with the Google Event ID and mark as processed\n        await updateAirtableWithGoogleEventIdAndProcessed(event.id, googleEventId);\n        added.push(event.title);\n      } else {\n        failed.push(event.title);\n      }\n    } catch (error) {\n      console.error(`Error processing event \"${event.title}\":`, error);\n      failed.push(event.title);\n    }\n\n    await unlockAirtableRecord(event.id); // Unlock the record after processing\n    await sleep(1000); // Adding delay between requests\n  }\n\n  setAddedRecords((prev) => [...prev, ...added]);\n  setFailedRecords((prev) => [...prev, ...failed]);\n\n  console.log(`Finished populating Google Calendar \"${calendarName}\" with Airtable records.`);\n}\n\n\n\n\n\nfunction CalendarSection({\n  calendarId,\n  calendarName,\n  session,\n  signOut,\n  setAddedRecords,\n  setFailedRecords,\n  setRateLimitInfo,\n  triggerSync,\n  setTriggerSync\n}) {\n  const [lastSyncTime, setLastSyncTime] = useState(null);\n\n  useEffect(() => {\n    const syncEvents = () => {\n      const now = new Date();\n      console.log('Attempting to sync events...');\n  \n      if (session && triggerSync) {\n        if (!session.provider_token) {\n          console.error('No valid session token found. Logging out.');\n          signOut();\n          return;\n        }\n  \n        console.log('Session valid. Initiating sync...');\n        populateGoogleCalendarWithAirtableRecords(\n          calendarId,\n          calendarName,\n          session,\n          signOut,\n          setAddedRecords,\n          setFailedRecords,\n          setRateLimitInfo\n        )\n          .then(() => {\n            console.log(`Finished syncing events to Google Calendar \"${calendarName}\"`);\n            setLastSyncTime(new Date()); // Update last sync time\n            setTriggerSync(false); // Reset the triggerSync after sync\n          })\n          .catch((error) =>\n            console.error(`Error syncing Airtable to Google Calendar \"${calendarName}\":`, error)\n          );\n      }\n    };\n  \n    if (triggerSync) {\n      console.log(`Manual sync triggered for calendar: ${calendarName}`);\n      syncEvents(); // Call syncEvents once here, no recursion\n    }\n  }, [session, signOut, calendarId, calendarName, setAddedRecords, setFailedRecords, setRateLimitInfo, lastSyncTime, triggerSync, setTriggerSync]);\n  \n\n  return (\n    <div className=\"calendar-item\">\n      <h2>{calendarName}</h2>\n    </div>\n  );\n}\n\nfunction App() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const [addedRecords, setAddedRecords] = useState([]);\n  const [failedRecords, setFailedRecords] = useState([]);\n  const [triggerSync, setTriggerSync] = useState(false);\n  const [rateLimitHit, setRateLimitHit] = useState(false); // Move this here\n\n  const calendarInfo = [\n    { id: 'c_ebe1fcbce1be361c641591a6c389d4311df7a97961af0020c889686ae059d20a@group.calendar.google.com', name: 'Savannah' }\n  ].sort((a, b) => a.name.localeCompare(b.name));\n\n  const handleSyncNow = () => {\n    console.log('Manual sync button clicked.');\n    setTriggerSync(true); // Trigger manual sync\n  };\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return 'Good morning';\n    } else if (currentHour < 18) {\n      return 'Good afternoon';\n    } else {\n      return 'Good evening';\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Warranty Calendar</h1>\n        <div style={{ width: '100%', margin: '0 auto' }}>\n          {session ? (\n            <>\n              <h2>{getGreeting()} {session.user.email}</h2>\n              <hr />\n              <button onClick={handleSyncNow}>Sync Now</button> {/* Manual Sync Button */}\n              <div className=\"calendar-grid\">\n                {calendarInfo.map((calendar) => (\n                  <CalendarSection\n                  key={calendar.id}\n                  calendarId={calendar.id}\n                  calendarName={calendar.name}\n                  session={session}\n                  signOut={() => supabase.auth.signOut()}\n                  setAddedRecords={setAddedRecords}\n                  setFailedRecords={setFailedRecords}\n                  triggerSync={triggerSync}\n                  setTriggerSync={setTriggerSync}\n                  rateLimitHit={rateLimitHit} // Pass rateLimitHit as prop\n                  setRateLimitHit={setRateLimitHit} // Pass setter as prop\n                />\n                \n                ))}\n              </div>\n              <div className=\"records-summary\">\n                <h3>Records Summary</h3>\n                <div className=\"summary-container\">\n                  <div className=\"added-records\">\n                    <h4>Successfully Added Records:</h4>\n                    {addedRecords.length > 0 ? (\n                      <ul>\n                        {addedRecords.map((record, index) => (\n                          <li key={index}>{record}</li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <p>No records added.</p>\n                    )}\n                  </div>\n                  <div className=\"failed-records\">\n                    <h4>Failed to Add Records:</h4>\n                    {failedRecords.length > 0 ? (\n                      <ul>\n                        {failedRecords.map((record, index) => (\n                          <li key={index}>{record}</li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <p>No records failed.</p>\n                    )}\n                  </div>\n                </div>\n              </div>\n             \n              <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n            </>\n          ) : (\n            <>\n             <button onClick={() => supabase.auth.signInWithOAuth({\n  provider: 'google',\n  options: {\n    scopes: 'https://www.googleapis.com/auth/calendar'\n  }\n})}>\n  Sign In With Google\n</button>\n\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; // Ensure default export"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}