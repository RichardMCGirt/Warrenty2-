{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function patchGoogleCalendarEvent(event, calendarId, session) {\n  if (!event.googleEventId) {\n    console.error('No googleEventId found for event:', event);\n    // Optionally create a new event if googleEventId is not found\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session);\n    // We no longer update Airtable with the new googleEventId\n    return; // Skip further processing if googleEventId was not found\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n  console.log('Patching event:', event);\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n  };\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedEvent)\n  }).then(response => response.json()).then(async data => {\n    if (data.error) {\n      console.error('Error updating event:', data.error);\n      if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n        console.log('Rate limit exceeded, retrying after delay...');\n        await delay(10000); // Wait for 10 seconds\n        return patchGoogleCalendarEvent(event, calendarId, session); // Retry the request\n      }\n    } else {\n      console.log('Event updated:', data);\n    }\n  });\n}\nasync function createGoogleCalendarEvent(event, calendarId, session) {\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n  };\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      console.error('Error creating event:', data.error);\n      return null; // Return null if event creation failed\n    } else {\n      console.log('New event created:', data);\n      return data.id; // Return the new GoogleEventId\n    }\n  });\n}\n\nfunction CalendarSection(_ref) {\n  _s();\n  let {\n    calendarId,\n    calendarName,\n    session\n  } = _ref;\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n      fetchAirtableEvents().then(airtableEvents => {\n        airtableEvents.forEach(event => {\n          patchGoogleCalendarEvent(event, calendarId, session);\n        });\n      });\n    }\n  }, [session]);\n  async function fetchEvents() {\n    let pageToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?${pageToken && `pageToken=${pageToken}`}`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching events:', data.error);\n      return;\n    }\n    const fetchedEvents = data.items.map(event => {\n      // Check if the event has time specified; otherwise, set default time\n      const start = event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date);\n      const end = event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date);\n      if (!event.start.dateTime) {\n        start.setHours(8, 0, 0); // Set start time to 8 AM\n      }\n\n      if (!event.end.dateTime) {\n        end.setHours(20, 0, 0); // Set end time to 8 PM\n      }\n\n      return {\n        id: event.id,\n        title: event.summary,\n        start: start,\n        end: end,\n        description: event.description || ''\n      };\n    });\n    setEvents(prevEvents => [...prevEvents, ...fetchedEvents]);\n\n    // Handle pagination by checking if there's a nextPageToken\n    if (data.nextPageToken) {\n      fetchEvents(data.nextPageToken);\n    }\n  }\n  async function fetchAirtableEvents() {\n    const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    return data.records.map(record => ({\n      id: record.id,\n      title: record.fields['Status'],\n      start: new Date(record.fields['startDate']),\n      end: new Date(record.fields['endDate']),\n      description: record.fields['Billable Reason (If Billable)'],\n      branch: record.fields['b'],\n      homeownerName: record.fields['Homeowner Name'],\n      streetAddress: record.fields['Street Address'],\n      city: record.fields['City'],\n      state: record.fields['State'],\n      zipCode: record.fields['Zip Code'],\n      picturesOfIssue: record.fields['Picture(s) of Issue'],\n      calendarLink: record.fields['Calendar Link'],\n      vendorEmail: record.fields['Vendor Email'],\n      googleEventId: record.fields['GoogleEventId'] || null // Ensure googleEventId is properly handled\n    }));\n  }\n\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      // If the same day is clicked, toggle the inputs\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true); // Show inputs when a new date is clicked\n    }\n  }\n\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true); // Ensure inputs are shown when an event is selected\n  }\n\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: {\n        dateTime: start.toISOString()\n      },\n      end: {\n        dateTime: end.toISOString()\n      }\n    };\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n    if (editingEvent) {\n      // If editing an event, update it\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then(data => data.json()).then(() => {\n      alert(\"Event saved!\");\n      fetchEvents(); // Refresh events after saving\n      resetForm();\n    });\n  }\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n  function tileContent(_ref2) {\n    let {\n      date,\n      view\n    } = _ref2;\n    if (view === 'month') {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      return dayEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 37\n      }, this) : null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: calendarName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      value: selectedDate || new Date(),\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), selectedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Events on \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleEventClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 47\n          }, this), event.description && /*#__PURE__*/_jsxDEV(\"em\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 68\n          }, this), event.start.toLocaleTimeString(), \" - \", event.end.toLocaleTimeString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), showInputs && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setStart,\n        value: start\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setEnd,\n        value: end\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveEvent,\n        children: [editingEvent ? \"Update Event\" : \"Create Event\", \" in \", calendarName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), editingEvent && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        children: \"Cancel Editing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarSection, \"g9/wNLaRktVIZrINrO/OWY2BW8c=\");\n_c = CalendarSection;\nfunction App() {\n  _s2();\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const calendarInfo = [{\n    id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com',\n    name: 'Charleston'\n  }, {\n    id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com',\n    name: 'Greensboro'\n  }, {\n    id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com',\n    name: 'Myrtle Beach'\n  }, {\n    id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com',\n    name: 'Wilmington'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Grenville'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Columbia'\n  }, {\n    id: 'warranty@vanirinstalledsales.com',\n    name: 'Warranty'\n  }];\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Warranty Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          margin: \"0 auto\"\n        },\n        children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [getGreeting(), \" \", session.user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-grid\",\n            children: calendarInfo.map(calendar => /*#__PURE__*/_jsxDEV(CalendarSection, {\n              calendarId: calendar.id,\n              calendarName: calendar.name,\n              session: session\n            }, calendar.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signOut(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signInWithOAuth({\n              provider: 'google',\n              options: {\n                scopes: 'https://www.googleapis.com/auth/calendar'\n              }\n            }),\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"y3mU2SfEIp/ejdXuqsHfvPLyb8I=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarSection\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useSession","useSupabaseClient","useSessionContext","DateTimePicker","Calendar","delay","ms","Promise","resolve","setTimeout","patchGoogleCalendarEvent","event","calendarId","session","googleEventId","console","error","createGoogleCalendarEvent","url","log","updatedEvent","summary","title","description","start","dateTime","toISOString","end","location","streetAddress","city","state","zipCode","fetch","method","headers","provider_token","body","JSON","stringify","then","response","json","data","status","message","includes","newEvent","id","CalendarSection","calendarName","setStart","Date","setEnd","eventName","setEventName","eventDescription","setEventDescription","events","setEvents","selectedDate","setSelectedDate","selectedEvents","setSelectedEvents","editingEvent","setEditingEvent","showInputs","setShowInputs","fetchEvents","fetchAirtableEvents","airtableEvents","forEach","pageToken","fetchedEvents","items","map","date","setHours","prevEvents","nextPageToken","records","record","fields","branch","homeownerName","picturesOfIssue","calendarLink","vendorEmail","handleDateClick","toDateString","dayEvents","filter","handleEventClick","saveEvent","alert","resetForm","tileContent","view","length","index","toLocaleTimeString","e","target","value","App","supabase","isLoading","calendarInfo","name","getGreeting","currentHour","getHours","width","margin","user","email","calendar","auth","signOut","signInWithOAuth","provider","options","scopes"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function patchGoogleCalendarEvent(event, calendarId, session) {\n  if (!event.googleEventId) {\n    console.error('No googleEventId found for event:', event);\n    // Optionally create a new event if googleEventId is not found\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session);\n    // We no longer update Airtable with the new googleEventId\n    return; // Skip further processing if googleEventId was not found\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n  console.log('Patching event:', event);\n\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedEvent)\n  }).then(response => response.json())\n    .then(async data => {\n      if (data.error) {\n        console.error('Error updating event:', data.error);\n        if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n          console.log('Rate limit exceeded, retrying after delay...');\n          await delay(10000); // Wait for 10 seconds\n          return patchGoogleCalendarEvent(event, calendarId, session); // Retry the request\n        }\n      } else {\n        console.log('Event updated:', data);\n      }\n    });\n}\n\nasync function createGoogleCalendarEvent(event, calendarId, session) {\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json())\n    .then(data => {\n      if (data.error) {\n        console.error('Error creating event:', data.error);\n        return null; // Return null if event creation failed\n      } else {\n        console.log('New event created:', data);\n        return data.id; // Return the new GoogleEventId\n      }\n    });\n}\n\nfunction CalendarSection({ calendarId, calendarName, session }) {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n      fetchAirtableEvents().then(airtableEvents => {\n        airtableEvents.forEach(event => {\n          patchGoogleCalendarEvent(event, calendarId, session);\n        });\n      });\n    }\n  }, [session]);\n\n  async function fetchEvents(pageToken = '') {\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?${pageToken && `pageToken=${pageToken}`}`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching events:', data.error);\n      return;\n    }\n\n    const fetchedEvents = data.items.map(event => {\n      // Check if the event has time specified; otherwise, set default time\n      const start = event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date);\n      const end = event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date);\n\n      if (!event.start.dateTime) {\n        start.setHours(8, 0, 0); // Set start time to 8 AM\n      }\n\n      if (!event.end.dateTime) {\n        end.setHours(20, 0, 0); // Set end time to 8 PM\n      }\n\n      return {\n        id: event.id,\n        title: event.summary,\n        start: start,\n        end: end,\n        description: event.description || '',\n      };\n    });\n\n    setEvents(prevEvents => [...prevEvents, ...fetchedEvents]);\n\n    // Handle pagination by checking if there's a nextPageToken\n    if (data.nextPageToken) {\n      fetchEvents(data.nextPageToken);\n    }\n  }\n\n  async function fetchAirtableEvents() {\n    const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json'\n      }\n    });\n  \n    const data = await response.json();\n    return data.records.map(record => ({\n      id: record.id,\n      title: record.fields['Status'],\n      start: new Date(record.fields['startDate']),\n      end: new Date(record.fields['endDate']),\n      description: record.fields['Billable Reason (If Billable)'],\n      branch: record.fields['b'],\n      homeownerName: record.fields['Homeowner Name'],\n      streetAddress: record.fields['Street Address'],\n      city: record.fields['City'],\n      state: record.fields['State'],\n      zipCode: record.fields['Zip Code'],\n      picturesOfIssue: record.fields['Picture(s) of Issue'],\n      calendarLink: record.fields['Calendar Link'],\n      vendorEmail: record.fields['Vendor Email'],\n      googleEventId: record.fields['GoogleEventId'] || null // Ensure googleEventId is properly handled\n    }));\n  }\n\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      // If the same day is clicked, toggle the inputs\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true); // Show inputs when a new date is clicked\n    }\n  }\n\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true); // Ensure inputs are shown when an event is selected\n  }\n\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: { dateTime: start.toISOString() },\n      end: { dateTime: end.toISOString() },\n    };\n\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n\n    if (editingEvent) {\n      // If editing an event, update it\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n\n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then((data) => data.json())\n      .then(() => {\n        alert(\"Event saved!\");\n        fetchEvents(); // Refresh events after saving\n        resetForm();\n      });\n  }\n\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n\n  function tileContent({ date, view }) {\n    if (view === 'month') {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      return dayEvents.length > 0 ? <div className=\"event-dot\"></div> : null;\n    }\n  }\n\n  return (\n    <div className=\"calendar-item\">\n      <h2>{calendarName}</h2>\n      <Calendar\n        onClickDay={handleDateClick}\n        value={selectedDate || new Date()}\n        tileContent={tileContent}\n      />\n      {selectedEvents.length > 0 && (\n        <div>\n          <h3>Events on {selectedDate?.toDateString()}</h3>\n          <ul>\n            {selectedEvents.map((event, index) => (\n              <li key={index} onClick={() => handleEventClick(event)}>\n                <strong>{event.title}</strong><br />\n                {event.description && <em>{event.description}</em>}<br />\n                {event.start.toLocaleTimeString()} - {event.end.toLocaleTimeString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showInputs && (\n        <>\n          <p>Start of your event</p>\n          <DateTimePicker onChange={setStart} value={start} />\n          <p>End of your event</p>\n          <DateTimePicker onChange={setEnd} value={end} />\n          <p>Event name</p>\n          <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n          <p>Event description</p>\n          <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n          <hr />\n          <button onClick={saveEvent}>\n            {editingEvent ? \"Update Event\" : \"Create Event\"} in {calendarName}\n          </button>\n          {editingEvent && <button onClick={resetForm}>Cancel Editing</button>}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const calendarInfo = [\n    { id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com', name: 'Charleston' },\n    { id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com', name: 'Greensboro' },\n    { id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com', name: 'Myrtle Beach' },\n    { id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com', name: 'Wilmington' },\n    { id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto', name: 'Grenville'},\n    { id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto', name: 'Columbia'},\n    { id: 'warranty@vanirinstalledsales.com', name: 'Warranty' }\n  ];\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Warranty Calendar</h1>\n        <div style={{ width: \"100%\", margin: \"0 auto\" }}>\n          {session ?\n            <>\n              <h2>{getGreeting()} {session.user.email}</h2>\n              <hr />\n              <div className=\"calendar-grid\">\n                {calendarInfo.map(calendar => (\n                  <CalendarSection\n                    key={calendar.id}\n                    calendarId={calendar.id}\n                    calendarName={calendar.name}\n                    session={session}\n                  />\n                ))}\n              </div>\n              <p></p>\n              <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n            </>\n            :\n            <>\n              <button onClick={() => supabase.auth.signInWithOAuth({ provider: 'google', options: { scopes: 'https://www.googleapis.com/auth/calendar' } })}>\n                Sign In With Google\n              </button>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,UAAU,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,8BAA8B;AAC/F,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC;AAAA;AAE1C,SAASC,KAAK,CAACC,EAAE,EAAE;EACjB,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AACxD;AAEA,eAAeI,wBAAwB,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAE;EAClE,IAAI,CAACF,KAAK,CAACG,aAAa,EAAE;IACxBC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEL,KAAK,CAAC;IACzD;IACA,MAAMG,aAAa,GAAG,MAAMG,yBAAyB,CAACN,KAAK,EAAEC,UAAU,EAAEC,OAAO,CAAC;IACjF;IACA,OAAO,CAAC;EACV;;EAEA,MAAMK,GAAG,GAAI,oDAAmDN,UAAW,WAAUD,KAAK,CAACG,aAAc,EAAC;EAC1GC,OAAO,CAACI,GAAG,CAAC,iBAAiB,EAAER,KAAK,CAAC;EAErC,MAAMS,YAAY,GAAG;IACnBC,OAAO,EAAEV,KAAK,CAACW,KAAK;IACpBC,WAAW,EAAEZ,KAAK,CAACY,WAAW;IAC9BC,KAAK,EAAE;MAAEC,QAAQ,EAAEd,KAAK,CAACa,KAAK,CAACE,WAAW;IAAG,CAAC;IAC9CC,GAAG,EAAE;MAAEF,QAAQ,EAAEd,KAAK,CAACgB,GAAG,CAACD,WAAW;IAAG,CAAC;IAC1CE,QAAQ,EAAG,GAAEjB,KAAK,CAACkB,aAAc,KAAIlB,KAAK,CAACmB,IAAK,KAAInB,KAAK,CAACoB,KAAM,KAAIpB,KAAK,CAACqB,OAAQ;EACpF,CAAC;EAED,MAAMC,KAAK,CAACf,GAAG,EAAE;IACfgB,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,eAAe,EAAE,SAAS,GAAGtB,OAAO,CAACuB,cAAc;MACnD,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,YAAY;EACnC,CAAC,CAAC,CAACoB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAC,MAAMG,IAAI,IAAI;IAClB,IAAIA,IAAI,CAAC3B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE2B,IAAI,CAAC3B,KAAK,CAAC;MAClD,IAAI2B,IAAI,CAAC3B,KAAK,CAAC4B,MAAM,KAAK,mBAAmB,IAAID,IAAI,CAAC3B,KAAK,CAAC6B,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QAC9F/B,OAAO,CAACI,GAAG,CAAC,8CAA8C,CAAC;QAC3D,MAAMd,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;QACpB,OAAOK,wBAAwB,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC;MAC/D;IACF,CAAC,MAAM;MACLE,OAAO,CAACI,GAAG,CAAC,gBAAgB,EAAEwB,IAAI,CAAC;IACrC;EACF,CAAC,CAAC;AACN;AAEA,eAAe1B,yBAAyB,CAACN,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAE;EACnE,MAAMK,GAAG,GAAI,oDAAmDN,UAAW,SAAQ;EAEnF,MAAMmC,QAAQ,GAAG;IACf1B,OAAO,EAAEV,KAAK,CAACW,KAAK;IACpBC,WAAW,EAAEZ,KAAK,CAACY,WAAW;IAC9BC,KAAK,EAAE;MAAEC,QAAQ,EAAEd,KAAK,CAACa,KAAK,CAACE,WAAW;IAAG,CAAC;IAC9CC,GAAG,EAAE;MAAEF,QAAQ,EAAEd,KAAK,CAACgB,GAAG,CAACD,WAAW;IAAG,CAAC;IAC1CE,QAAQ,EAAG,GAAEjB,KAAK,CAACkB,aAAc,KAAIlB,KAAK,CAACmB,IAAK,KAAInB,KAAK,CAACoB,KAAM,KAAIpB,KAAK,CAACqB,OAAQ;EACpF,CAAC;EAED,OAAO,MAAMC,KAAK,CAACf,GAAG,EAAE;IACtBgB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,eAAe,EAAE,SAAS,GAAGtB,OAAO,CAACuB,cAAc;MACnD,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,QAAQ;EAC/B,CAAC,CAAC,CAACP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZ,IAAIA,IAAI,CAAC3B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE2B,IAAI,CAAC3B,KAAK,CAAC;MAClD,OAAO,IAAI,CAAC,CAAC;IACf,CAAC,MAAM;MACLD,OAAO,CAACI,GAAG,CAAC,oBAAoB,EAAEwB,IAAI,CAAC;MACvC,OAAOA,IAAI,CAACK,EAAE,CAAC,CAAC;IAClB;EACF,CAAC,CAAC;AACN;;AAEA,SAASC,eAAe,OAAwC;EAAA;EAAA,IAAvC;IAAErC,UAAU;IAAEsC,YAAY;IAAErC;EAAQ,CAAC;EAC5D,MAAM,CAACW,KAAK,EAAE2B,QAAQ,CAAC,GAAGrD,QAAQ,CAAC,IAAIsD,IAAI,EAAE,CAAC;EAC9C,MAAM,CAACzB,GAAG,EAAE0B,MAAM,CAAC,GAAGvD,QAAQ,CAAC,IAAIsD,IAAI,EAAE,CAAC;EAC1C,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC4D,MAAM,EAAEC,SAAS,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8D,YAAY,EAAEC,eAAe,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgE,cAAc,EAAEC,iBAAiB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkE,YAAY,EAAEC,eAAe,CAAC,GAAGnE,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoE,UAAU,EAAEC,aAAa,CAAC,GAAGrE,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,IAAIc,OAAO,EAAE;MACXuD,WAAW,EAAE;MACbC,mBAAmB,EAAE,CAAC7B,IAAI,CAAC8B,cAAc,IAAI;QAC3CA,cAAc,CAACC,OAAO,CAAC5D,KAAK,IAAI;UAC9BD,wBAAwB,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,CAAC;QACtD,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,eAAeuD,WAAW,GAAiB;IAAA,IAAhBI,SAAS,uEAAG,EAAE;IACvC,MAAMtD,GAAG,GAAI,oDAAmDN,UAAW,WAAU4D,SAAS,IAAK,aAAYA,SAAU,EAAE,EAAC;IAC5H,MAAM/B,QAAQ,GAAG,MAAMR,KAAK,CAACf,GAAG,EAAE;MAChCiB,OAAO,EAAE;QACP,eAAe,EAAE,SAAS,GAAGtB,OAAO,CAACuB;MACvC;IACF,CAAC,CAAC;IAEF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,EAAE;IAClC,IAAIC,IAAI,CAAC3B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAE2B,IAAI,CAAC3B,KAAK,CAAC;MACnD;IACF;IAEA,MAAMyD,aAAa,GAAG9B,IAAI,CAAC+B,KAAK,CAACC,GAAG,CAAChE,KAAK,IAAI;MAC5C;MACA,MAAMa,KAAK,GAAGb,KAAK,CAACa,KAAK,CAACC,QAAQ,GAAG,IAAI2B,IAAI,CAACzC,KAAK,CAACa,KAAK,CAACC,QAAQ,CAAC,GAAG,IAAI2B,IAAI,CAACzC,KAAK,CAACa,KAAK,CAACoD,IAAI,CAAC;MAChG,MAAMjD,GAAG,GAAGhB,KAAK,CAACgB,GAAG,CAACF,QAAQ,GAAG,IAAI2B,IAAI,CAACzC,KAAK,CAACgB,GAAG,CAACF,QAAQ,CAAC,GAAG,IAAI2B,IAAI,CAACzC,KAAK,CAACgB,GAAG,CAACiD,IAAI,CAAC;MAExF,IAAI,CAACjE,KAAK,CAACa,KAAK,CAACC,QAAQ,EAAE;QACzBD,KAAK,CAACqD,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3B;;MAEA,IAAI,CAAClE,KAAK,CAACgB,GAAG,CAACF,QAAQ,EAAE;QACvBE,GAAG,CAACkD,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAC1B;;MAEA,OAAO;QACL7B,EAAE,EAAErC,KAAK,CAACqC,EAAE;QACZ1B,KAAK,EAAEX,KAAK,CAACU,OAAO;QACpBG,KAAK,EAAEA,KAAK;QACZG,GAAG,EAAEA,GAAG;QACRJ,WAAW,EAAEZ,KAAK,CAACY,WAAW,IAAI;MACpC,CAAC;IACH,CAAC,CAAC;IAEFoC,SAAS,CAACmB,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAE,GAAGL,aAAa,CAAC,CAAC;;IAE1D;IACA,IAAI9B,IAAI,CAACoC,aAAa,EAAE;MACtBX,WAAW,CAACzB,IAAI,CAACoC,aAAa,CAAC;IACjC;EACF;EAEA,eAAeV,mBAAmB,GAAG;IACnC,MAAMnD,GAAG,GAAI,iEAAgE;IAC7E,MAAMuB,QAAQ,GAAG,MAAMR,KAAK,CAACf,GAAG,EAAE;MAChCiB,OAAO,EAAE;QACP,eAAe,EAAE,2FAA2F;QAC5G,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,EAAE;IAClC,OAAOC,IAAI,CAACqC,OAAO,CAACL,GAAG,CAACM,MAAM,KAAK;MACjCjC,EAAE,EAAEiC,MAAM,CAACjC,EAAE;MACb1B,KAAK,EAAE2D,MAAM,CAACC,MAAM,CAAC,QAAQ,CAAC;MAC9B1D,KAAK,EAAE,IAAI4B,IAAI,CAAC6B,MAAM,CAACC,MAAM,CAAC,WAAW,CAAC,CAAC;MAC3CvD,GAAG,EAAE,IAAIyB,IAAI,CAAC6B,MAAM,CAACC,MAAM,CAAC,SAAS,CAAC,CAAC;MACvC3D,WAAW,EAAE0D,MAAM,CAACC,MAAM,CAAC,+BAA+B,CAAC;MAC3DC,MAAM,EAAEF,MAAM,CAACC,MAAM,CAAC,GAAG,CAAC;MAC1BE,aAAa,EAAEH,MAAM,CAACC,MAAM,CAAC,gBAAgB,CAAC;MAC9CrD,aAAa,EAAEoD,MAAM,CAACC,MAAM,CAAC,gBAAgB,CAAC;MAC9CpD,IAAI,EAAEmD,MAAM,CAACC,MAAM,CAAC,MAAM,CAAC;MAC3BnD,KAAK,EAAEkD,MAAM,CAACC,MAAM,CAAC,OAAO,CAAC;MAC7BlD,OAAO,EAAEiD,MAAM,CAACC,MAAM,CAAC,UAAU,CAAC;MAClCG,eAAe,EAAEJ,MAAM,CAACC,MAAM,CAAC,qBAAqB,CAAC;MACrDI,YAAY,EAAEL,MAAM,CAACC,MAAM,CAAC,eAAe,CAAC;MAC5CK,WAAW,EAAEN,MAAM,CAACC,MAAM,CAAC,cAAc,CAAC;MAC1CpE,aAAa,EAAEmE,MAAM,CAACC,MAAM,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC;IACxD,CAAC,CAAC,CAAC;EACL;;EAEA,SAASM,eAAe,CAACZ,IAAI,EAAE;IAC7B,IAAIhB,YAAY,IAAIA,YAAY,CAAC6B,YAAY,EAAE,KAAKb,IAAI,CAACa,YAAY,EAAE,EAAE;MACvE;MACAtB,aAAa,CAAC,CAACD,UAAU,CAAC;MAC1BL,eAAe,CAACK,UAAU,GAAG,IAAI,GAAGU,IAAI,CAAC;IAC3C,CAAC,MAAM;MACL,MAAMc,SAAS,GAAGhC,MAAM,CAACiC,MAAM,CAC7BhF,KAAK,IAAIA,KAAK,CAACa,KAAK,CAACiE,YAAY,EAAE,KAAKb,IAAI,CAACa,YAAY,EAAE,CAC5D;MACD5B,eAAe,CAACe,IAAI,CAAC;MACrBzB,QAAQ,CAACyB,IAAI,CAAC;MACdvB,MAAM,CAACuB,IAAI,CAAC;MACZb,iBAAiB,CAAC2B,SAAS,IAAI,EAAE,CAAC;MAClCzB,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;IACvB;EACF;;EAEA,SAASyB,gBAAgB,CAACjF,KAAK,EAAE;IAC/BsD,eAAe,CAACtD,KAAK,CAAC;IACtBwC,QAAQ,CAACxC,KAAK,CAACa,KAAK,CAAC;IACrB6B,MAAM,CAAC1C,KAAK,CAACgB,GAAG,CAAC;IACjB4B,YAAY,CAAC5C,KAAK,CAACW,KAAK,CAAC;IACzBmC,mBAAmB,CAAC9C,KAAK,CAACY,WAAW,CAAC;IACtC4C,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;EACvB;;EAEA,eAAe0B,SAAS,GAAG;IACzB,MAAMlF,KAAK,GAAG;MACZU,OAAO,EAAEiC,SAAS;MAClB/B,WAAW,EAAEiC,gBAAgB;MAC7BhC,KAAK,EAAE;QAAEC,QAAQ,EAAED,KAAK,CAACE,WAAW;MAAG,CAAC;MACxCC,GAAG,EAAE;QAAEF,QAAQ,EAAEE,GAAG,CAACD,WAAW;MAAG;IACrC,CAAC;IAED,IAAIR,GAAG,GAAI,oDAAmDN,UAAW,SAAQ;IACjF,IAAIsB,MAAM,GAAG,MAAM;IAEnB,IAAI8B,YAAY,EAAE;MAChB;MACA9C,GAAG,IAAK,IAAG8C,YAAY,CAAChB,EAAG,EAAC;MAC5Bd,MAAM,GAAG,KAAK;IAChB;IAEA,MAAMD,KAAK,CAACf,GAAG,EAAE;MACfgB,MAAM,EAAEA,MAAM;MACdC,OAAO,EAAE;QACP,eAAe,EAAE,SAAS,GAAGtB,OAAO,CAACuB,cAAc;QACnD,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC5B,KAAK;IAC5B,CAAC,CAAC,CAAC6B,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAACD,IAAI,EAAE,CAAC,CAC3BF,IAAI,CAAC,MAAM;MACVsD,KAAK,CAAC,cAAc,CAAC;MACrB1B,WAAW,EAAE,CAAC,CAAC;MACf2B,SAAS,EAAE;IACb,CAAC,CAAC;EACN;EAEA,SAASA,SAAS,GAAG;IACnBxC,YAAY,CAAC,EAAE,CAAC;IAChBE,mBAAmB,CAAC,EAAE,CAAC;IACvBN,QAAQ,CAAC,IAAIC,IAAI,EAAE,CAAC;IACpBC,MAAM,CAAC,IAAID,IAAI,EAAE,CAAC;IAClBa,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;EACtB;EAEA,SAAS6B,WAAW,QAAiB;IAAA,IAAhB;MAAEpB,IAAI;MAAEqB;IAAK,CAAC;IACjC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMP,SAAS,GAAGhC,MAAM,CAACiC,MAAM,CAC7BhF,KAAK,IAAIA,KAAK,CAACa,KAAK,CAACiE,YAAY,EAAE,KAAKb,IAAI,CAACa,YAAY,EAAE,CAC5D;MACD,OAAOC,SAAS,CAACQ,MAAM,GAAG,CAAC,gBAAG;QAAK,SAAS,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI;IACxE;EACF;EAEA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAA,UAAKhD;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,eACvB,QAAC,QAAQ;MACP,UAAU,EAAEsC,eAAgB;MAC5B,KAAK,EAAE5B,YAAY,IAAI,IAAIR,IAAI,EAAG;MAClC,WAAW,EAAE4C;IAAY;MAAA;MAAA;MAAA;IAAA,QACzB,EACDlC,cAAc,CAACoC,MAAM,GAAG,CAAC,iBACxB;MAAA,wBACE;QAAA,WAAI,YAAU,EAACtC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE6B,YAAY,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACjD;QAAA,UACG3B,cAAc,CAACa,GAAG,CAAC,CAAChE,KAAK,EAAEwF,KAAK,kBAC/B;UAAgB,OAAO,EAAE,MAAMP,gBAAgB,CAACjF,KAAK,CAAE;UAAA,wBACrD;YAAA,UAASA,KAAK,CAACW;UAAK;YAAA;YAAA;YAAA;UAAA,QAAU;YAAA;YAAA;YAAA;UAAA,QAAM,EACnCX,KAAK,CAACY,WAAW,iBAAI;YAAA,UAAKZ,KAAK,CAACY;UAAW;YAAA;YAAA;YAAA;UAAA,QAAM,eAAC;YAAA;YAAA;YAAA;UAAA,QAAM,EACxDZ,KAAK,CAACa,KAAK,CAAC4E,kBAAkB,EAAE,EAAC,KAAG,EAACzF,KAAK,CAACgB,GAAG,CAACyE,kBAAkB,EAAE;QAAA,GAH7DD,KAAK;UAAA;UAAA;UAAA;QAAA,QAKf;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QAER,EACAjC,UAAU,iBACT;MAAA,wBACE;QAAA,UAAG;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAI,eAC1B,QAAC,cAAc;QAAC,QAAQ,EAAEf,QAAS;QAAC,KAAK,EAAE3B;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACpD;QAAA,UAAG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAI,eACxB,QAAC,cAAc;QAAC,QAAQ,EAAE6B,MAAO;QAAC,KAAK,EAAE1B;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAChD;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,eACjB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAE2B,SAAU;QAAC,QAAQ,EAAG+C,CAAC,IAAK9C,YAAY,CAAC8C,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACtF;QAAA,UAAG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAI,eACxB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAE/C,gBAAiB;QAAC,QAAQ,EAAG6C,CAAC,IAAK5C,mBAAmB,CAAC4C,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACpG;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,OAAO,EAAEV,SAAU;QAAA,WACxB7B,YAAY,GAAG,cAAc,GAAG,cAAc,EAAC,MAAI,EAACd,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,EACRc,YAAY,iBAAI;QAAQ,OAAO,EAAE+B,SAAU;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBAEvE;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GArNQ9C,eAAe;AAAA,KAAfA,eAAe;AAuNxB,SAASuD,GAAG,GAAG;EAAA;EACb,MAAM3F,OAAO,GAAGb,UAAU,EAAE;EAC5B,MAAMyG,QAAQ,GAAGxG,iBAAiB,EAAE;EACpC,MAAM;IAAEyG;EAAU,CAAC,GAAGxG,iBAAiB,EAAE;EAEzC,MAAMyG,YAAY,GAAG,CACnB;IAAE3D,EAAE,EAAE,8FAA8F;IAAE4D,IAAI,EAAE;EAAa,CAAC,EAC1H;IAAE5D,EAAE,EAAE,8FAA8F;IAAE4D,IAAI,EAAE;EAAa,CAAC,EAC1H;IAAE5D,EAAE,EAAE,8FAA8F;IAAE4D,IAAI,EAAE;EAAe,CAAC,EAC5H;IAAE5D,EAAE,EAAE,8FAA8F;IAAE4D,IAAI,EAAE;EAAa,CAAC,EAC1H;IAAE5D,EAAE,EAAE,qKAAqK;IAAE4D,IAAI,EAAE;EAAW,CAAC,EAC/L;IAAE5D,EAAE,EAAE,qKAAqK;IAAE4D,IAAI,EAAE;EAAU,CAAC,EAC9L;IAAE5D,EAAE,EAAE,kCAAkC;IAAE4D,IAAI,EAAE;EAAW,CAAC,CAC7D;EAED,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,WAAW,GAAG,IAAI1D,IAAI,EAAE,CAAC2D,QAAQ,EAAE;IACzC,IAAID,WAAW,GAAG,EAAE,EAAE;MACpB,OAAO,cAAc;IACvB,CAAC,MAAM,IAAIA,WAAW,GAAG,EAAE,EAAE;MAC3B,OAAO,gBAAgB;IACzB,CAAC,MAAM;MACL,OAAO,cAAc;IACvB;EACF,CAAC;EAED,IAAIJ,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAK,KAAK,EAAE;UAAEM,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAS,CAAE;QAAA,UAC7CpG,OAAO,gBACN;UAAA,wBACE;YAAA,WAAKgG,WAAW,EAAE,EAAC,GAAC,EAAChG,OAAO,CAACqG,IAAI,CAACC,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,eAC7C;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YAAK,SAAS,EAAC,eAAe;YAAA,UAC3BR,YAAY,CAAChC,GAAG,CAACyC,QAAQ,iBACxB,QAAC,eAAe;cAEd,UAAU,EAAEA,QAAQ,CAACpE,EAAG;cACxB,YAAY,EAAEoE,QAAQ,CAACR,IAAK;cAC5B,OAAO,EAAE/F;YAAQ,GAHZuG,QAAQ,CAACpE,EAAE;cAAA;cAAA;cAAA;YAAA,QAKnB;UAAC;YAAA;YAAA;YAAA;UAAA,QACE,eACN;YAAA;YAAA;YAAA;UAAA,QAAO,eACP;YAAQ,OAAO,EAAE,MAAMyD,QAAQ,CAACY,IAAI,CAACC,OAAO,EAAG;YAAA,UAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,gBAChE,gBAEH;UAAA,uBACE;YAAQ,OAAO,EAAE,MAAMb,QAAQ,CAACY,IAAI,CAACE,eAAe,CAAC;cAAEC,QAAQ,EAAE,QAAQ;cAAEC,OAAO,EAAE;gBAAEC,MAAM,EAAE;cAA2C;YAAE,CAAC,CAAE;YAAA,UAAC;UAE/I;YAAA;YAAA;YAAA;UAAA;QAAS;MACR;QAAA;QAAA;QAAA;MAAA,QAED;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,IA/DQlB,GAAG;EAAA,QACMxG,UAAU,EACTC,iBAAiB,EACZC,iBAAiB;AAAA;AAAA,MAHhCsG,GAAG;AAiEZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}