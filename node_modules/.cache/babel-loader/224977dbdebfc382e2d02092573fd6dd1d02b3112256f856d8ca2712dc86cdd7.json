{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  console.log('Attempting to create a new Google Calendar event:', event);\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n  };\n  console.log('New event data:', newEvent);\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json()).then(data => {\n    console.log('Google Calendar creation response:', data);\n    if (data.error) {\n      console.error('Error creating event:', data.error);\n      return null;\n    } else {\n      console.log('New event successfully created:', data);\n      return data.id;\n    }\n  }).catch(error => console.error('Error during fetch request:', error));\n}\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  console.log('Updating Airtable with new Google Event ID:', googleEventId);\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId\n    }\n  };\n  console.log('Airtable update data:', updateData);\n  return await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json()).then(data => {\n    console.log('Airtable API response for update:', data);\n    if (data.error) {\n      console.error('Error updating Airtable with Google Event ID:', data.error);\n    } else {\n      console.log('Airtable record successfully updated:', data);\n    }\n  }).catch(error => console.error('Error during fetch request:', error));\n}\nasync function fetchAirtableEvents() {\n  console.log('Fetching events from Airtable');\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(url, {\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  console.log('Fetched data from Airtable:', data);\n  return data.records.filter(record => record.fields['Calendar Event Name'] && record.fields['startDate'] && record.fields['endDate']) // Skip empty records\n  .map(record => ({\n    id: record.id,\n    title: record.fields['Calendar Event Name'] || \"Untitled Event\",\n    start: new Date(record.fields['startDate']),\n    end: new Date(record.fields['endDate']),\n    description: record.fields['Billable Reason (If Billable)'] || '',\n    branch: record.fields['b'] || 'Unknown',\n    homeownerName: record.fields['Homeowner Name'] || 'Unknown',\n    streetAddress: record.fields['Street Address'] || 'Unknown',\n    city: record.fields['City'] || 'Unknown',\n    state: record.fields['State'] || 'Unknown',\n    zipCode: record.fields['Zip Code'] || 'Unknown',\n    googleEventId: record.fields['GoogleEventId'] || null\n  }));\n}\nasync function populateGoogleCalendarWithAirtableRecords(calendarId, calendarName, session, signOut) {\n  console.log(`Populating Google Calendar (${calendarName}) with Airtable records...`);\n  const airtableEvents = await fetchAirtableEvents();\n  for (const event of airtableEvents) {\n    // Check if the event's branch (b field) matches the calendar name\n    if (event.branch.toLowerCase() !== calendarName.toLowerCase()) {\n      console.log(`Skipping event \"${event.title}\" as its branch \"${event.branch}\" does not match the calendar \"${calendarName}\"`);\n      continue;\n    }\n    if (event.googleEventId) {\n      console.log(`Skipping already synced event: ${event.title}`);\n      continue;\n    }\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      console.log('New Google Event ID created:', googleEventId);\n      await updateAirtableWithGoogleEventId(event.id, googleEventId);\n    }\n  }\n  console.log(`Finished populating Google Calendar (${calendarName}) with Airtable records.`);\n}\nfunction CalendarSection(_ref) {\n  _s();\n  let {\n    calendarId,\n    calendarName,\n    session,\n    signOut\n  } = _ref;\n  useEffect(() => {\n    console.log('Session state:', session);\n    const syncEvents = () => {\n      if (session) {\n        if (!session.provider_token) {\n          console.error('No valid session token found. Logging out.');\n          signOut();\n          return;\n        }\n        populateGoogleCalendarWithAirtableRecords(calendarId, calendarName, session, signOut).then(() => console.log(`Finished syncing Airtable events to Google Calendar (${calendarName})`)).catch(error => console.error(`Error syncing Airtable to Google Calendar (${calendarName}):`, error));\n      }\n    };\n\n    // Run syncEvents immediately when the component mounts\n    syncEvents();\n\n    // Set up an interval to run syncEvents every 30 minutes (1800000 ms)\n    const intervalId = setInterval(syncEvents, 180000);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [session, signOut, calendarId, calendarName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-item\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: calendarName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarSection, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CalendarSection;\nfunction App() {\n  _s2();\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const calendarInfo = [{\n    id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com',\n    name: 'Charleston'\n  }, {\n    id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com',\n    name: 'Greensboro'\n  }, {\n    id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com',\n    name: 'Myrtle Beach'\n  }, {\n    id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com',\n    name: 'Wilmington'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Grenville'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Columbia'\n  }, {\n    id: 'warranty@vanirinstalledsales.com',\n    name: 'Raleigh'\n  }];\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Warranty Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          margin: \"0 auto\"\n        },\n        children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [getGreeting(), \" \", session.user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-grid\",\n            children: calendarInfo.map(calendar => /*#__PURE__*/_jsxDEV(CalendarSection, {\n              calendarId: calendar.id,\n              calendarName: calendar.name,\n              session: session,\n              signOut: () => supabase.auth.signOut()\n            }, calendar.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signOut(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signInWithOAuth({\n              provider: 'google',\n              options: {\n                scopes: 'https://www.googleapis.com/auth/calendar'\n              }\n            }),\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"y3mU2SfEIp/ejdXuqsHfvPLyb8I=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarSection\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useSession","useSupabaseClient","useSessionContext","createGoogleCalendarEvent","event","calendarId","session","signOut","console","log","provider_token","error","url","newEvent","summary","title","description","start","dateTime","toISOString","end","location","streetAddress","city","state","zipCode","fetch","method","headers","body","JSON","stringify","then","response","json","data","id","catch","updateAirtableWithGoogleEventId","airtableRecordId","googleEventId","updateData","fields","GoogleEventId","fetchAirtableEvents","records","filter","record","map","Date","branch","homeownerName","populateGoogleCalendarWithAirtableRecords","calendarName","airtableEvents","toLowerCase","CalendarSection","syncEvents","intervalId","setInterval","clearInterval","App","supabase","isLoading","calendarInfo","name","getGreeting","currentHour","getHours","width","margin","user","email","calendar","auth","signInWithOAuth","provider","options","scopes"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\n\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  console.log('Attempting to create a new Google Calendar event:', event);\n\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  console.log('New event data:', newEvent);\n\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json())\n    .then(data => {\n      console.log('Google Calendar creation response:', data);\n      if (data.error) {\n        console.error('Error creating event:', data.error);\n        return null;\n      } else {\n        console.log('New event successfully created:', data);\n        return data.id;\n      }\n    }).catch(error => console.error('Error during fetch request:', error));\n}\n\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  console.log('Updating Airtable with new Google Event ID:', googleEventId);\n\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId\n    }\n  };\n\n  console.log('Airtable update data:', updateData);\n\n  return await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json())\n    .then(data => {\n      console.log('Airtable API response for update:', data);\n      if (data.error) {\n        console.error('Error updating Airtable with Google Event ID:', data.error);\n      } else {\n        console.log('Airtable record successfully updated:', data);\n      }\n    }).catch(error => console.error('Error during fetch request:', error));\n}\n\nasync function fetchAirtableEvents() {\n  console.log('Fetching events from Airtable');\n\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(url, {\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    }\n  });\n\n  const data = await response.json();\n  console.log('Fetched data from Airtable:', data);\n\n  return data.records\n    .filter(record => record.fields['Calendar Event Name'] && record.fields['startDate'] && record.fields['endDate']) // Skip empty records\n    .map(record => ({\n      id: record.id,\n      title: record.fields['Calendar Event Name'] || \"Untitled Event\",\n      start: new Date(record.fields['startDate']),\n      end: new Date(record.fields['endDate']),\n      description: record.fields['Billable Reason (If Billable)'] || '',\n      branch: record.fields['b'] || 'Unknown',\n      homeownerName: record.fields['Homeowner Name'] || 'Unknown',\n      streetAddress: record.fields['Street Address'] || 'Unknown',\n      city: record.fields['City'] || 'Unknown',\n      state: record.fields['State'] || 'Unknown',\n      zipCode: record.fields['Zip Code'] || 'Unknown',\n      googleEventId: record.fields['GoogleEventId'] || null,\n    }));\n}\n\nasync function populateGoogleCalendarWithAirtableRecords(calendarId, calendarName, session, signOut) {\n  console.log(`Populating Google Calendar (${calendarName}) with Airtable records...`);\n\n  const airtableEvents = await fetchAirtableEvents();\n\n  for (const event of airtableEvents) {\n    // Check if the event's branch (b field) matches the calendar name\n    if (event.branch.toLowerCase() !== calendarName.toLowerCase()) {\n      console.log(`Skipping event \"${event.title}\" as its branch \"${event.branch}\" does not match the calendar \"${calendarName}\"`);\n      continue;\n    }\n\n    if (event.googleEventId) {\n      console.log(`Skipping already synced event: ${event.title}`);\n      continue;\n    }\n\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      console.log('New Google Event ID created:', googleEventId);\n      await updateAirtableWithGoogleEventId(event.id, googleEventId);\n    }\n  }\n\n  console.log(`Finished populating Google Calendar (${calendarName}) with Airtable records.`);\n}\n\n\nfunction CalendarSection({ calendarId, calendarName, session, signOut }) {\n  useEffect(() => {\n    console.log('Session state:', session);\n\n    const syncEvents = () => {\n      if (session) {\n        if (!session.provider_token) {\n          console.error('No valid session token found. Logging out.');\n          signOut();\n          return;\n        }\n\n        populateGoogleCalendarWithAirtableRecords(calendarId, calendarName, session, signOut)\n          .then(() => console.log(`Finished syncing Airtable events to Google Calendar (${calendarName})`))\n          .catch(error => console.error(`Error syncing Airtable to Google Calendar (${calendarName}):`, error));\n      }\n    };\n\n    // Run syncEvents immediately when the component mounts\n    syncEvents();\n\n    // Set up an interval to run syncEvents every 30 minutes (1800000 ms)\n    const intervalId = setInterval(syncEvents, 180000);\n\n    // Clear the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, [session, signOut, calendarId, calendarName]);\n\n  return (\n    <div className=\"calendar-item\">\n      <h2>{calendarName}</h2>\n    </div>\n  );\n}\n\n\n\nfunction App() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const calendarInfo = [\n    { id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com', name: 'Charleston' },\n    { id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com', name: 'Greensboro' },\n    { id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com', name: 'Myrtle Beach' },\n    { id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com', name: 'Wilmington' },\n    { id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto', name: 'Grenville'},\n    { id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto', name: 'Columbia'},\n    { id: 'warranty@vanirinstalledsales.com', name: 'Raleigh' }\n  ];\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Warranty Calendar</h1>\n        <div style={{ width: \"100%\", margin: \"0 auto\" }}>\n          {session ?\n            <>\n              <h2>{getGreeting()} {session.user.email}</h2>\n              <hr />\n              <div className=\"calendar-grid\">\n                {calendarInfo.map(calendar => (\n                  <CalendarSection\n                    key={calendar.id}\n                    calendarId={calendar.id}\n                    calendarName={calendar.name}\n                    session={session}\n                    signOut={() => supabase.auth.signOut()}\n                  />\n                ))}\n              </div>\n              <p></p>\n              <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n            </>\n            :\n            <>\n              <button onClick={() => supabase.auth.signInWithOAuth({ provider: 'google', options: { scopes: 'https://www.googleapis.com/auth/calendar' } })}>\n                Sign In With Google\n              </button>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}