{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar _asyncToGenerator = require(\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar _slicedToArray = require(\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = function __export(target, all) {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = function __copyProps(to, from, except, desc) {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropNames(from)),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var key = _step.value;\n        if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n          get: function get() {\n            return from[key];\n          },\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return to;\n};\nvar __toESM = function __toESM(mod, isNodeMode, target) {\n  return target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n    value: mod,\n    enumerable: true\n  }) : target, mod);\n};\nvar __toCommonJS = function __toCommonJS(mod) {\n  return __copyProps(__defProp({}, \"__esModule\", {\n    value: true\n  }), mod);\n};\n\n// src/index.tsx\nvar src_exports = {};\n__export(src_exports, {\n  SessionContextProvider: function SessionContextProvider() {\n    return _SessionContextProvider;\n  },\n  useSession: function useSession() {\n    return _useSession;\n  },\n  useSessionContext: function useSessionContext() {\n    return _useSessionContext;\n  },\n  useSupabaseClient: function useSupabaseClient() {\n    return _useSupabaseClient;\n  },\n  useUser: function useUser() {\n    return _useUser;\n  }\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/components/SessionContext.tsx\nvar import_react = __toESM(require(\"react\"));\nvar SessionContext = (0, import_react.createContext)({\n  isLoading: true,\n  session: null,\n  error: null,\n  supabaseClient: {}\n});\nvar _SessionContextProvider = function _SessionContextProvider(_ref) {\n  var supabaseClient = _ref.supabaseClient,\n    _ref$initialSession = _ref.initialSession,\n    initialSession = _ref$initialSession === void 0 ? null : _ref$initialSession,\n    children = _ref.children;\n  var _ref2 = (0, import_react.useState)(initialSession),\n    _ref3 = _slicedToArray(_ref2, 2),\n    session = _ref3[0],\n    setSession = _ref3[1];\n  var _ref4 = (0, import_react.useState)(!initialSession),\n    _ref5 = _slicedToArray(_ref4, 2),\n    isLoading = _ref5[0],\n    setIsLoading = _ref5[1];\n  var _ref6 = (0, import_react.useState)(),\n    _ref7 = _slicedToArray(_ref6, 2),\n    error = _ref7[0],\n    setError = _ref7[1];\n  (0, import_react.useEffect)(function () {\n    var mounted = true;\n    function getSession() {\n      return _getSession.apply(this, arguments);\n    }\n    function _getSession() {\n      _getSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _yield$supabaseClient, session2, error2;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return supabaseClient.auth.getSession();\n            case 2:\n              _yield$supabaseClient = _context.sent;\n              session2 = _yield$supabaseClient.data.session;\n              error2 = _yield$supabaseClient.error;\n              if (!mounted) {\n                _context.next = 12;\n                break;\n              }\n              if (!error2) {\n                _context.next = 10;\n                break;\n              }\n              setError(error2);\n              setIsLoading(false);\n              return _context.abrupt(\"return\");\n            case 10:\n              setSession(session2);\n              setIsLoading(false);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _getSession.apply(this, arguments);\n    }\n    getSession();\n  }, []);\n  (0, import_react.useEffect)(function () {\n    var _supabaseClient$auth$ = supabaseClient.auth.onAuthStateChange(function (event, session2) {\n        if (session2 && (event === \"SIGNED_IN\" || event === \"TOKEN_REFRESHED\")) {\n          setSession(session2);\n        }\n        if (event === \"SIGNED_OUT\") {\n          setSession(null);\n        }\n      }),\n      subscription = _supabaseClient$auth$.data.subscription;\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, []);\n  var value = (0, import_react.useMemo)(function () {\n    if (isLoading) {\n      return {\n        isLoading: true,\n        session: null,\n        error: null,\n        supabaseClient: supabaseClient\n      };\n    }\n    if (error) {\n      return {\n        isLoading: false,\n        session: null,\n        error: error,\n        supabaseClient: supabaseClient\n      };\n    }\n    return {\n      isLoading: false,\n      session: session,\n      error: null,\n      supabaseClient: supabaseClient\n    };\n  }, [isLoading, session, error]);\n  return /* @__PURE__ */import_react.default.createElement(SessionContext.Provider, {\n    value: value\n  }, children);\n};\nvar _useSessionContext = function _useSessionContext() {\n  var context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(\"useSessionContext must be used within a SessionContextProvider.\");\n  }\n  return context;\n};\nfunction _useSupabaseClient() {\n  var context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(\"useSupabaseClient must be used within a SessionContextProvider.\");\n  }\n  return context.supabaseClient;\n}\nvar _useSession = function _useSession() {\n  var context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(\"useSession must be used within a SessionContextProvider.\");\n  }\n  return context.session;\n};\nvar _useUser = function _useUser() {\n  var _a, _b;\n  var context = (0, import_react.useContext)(SessionContext);\n  if (context === void 0) {\n    throw new Error(\"useUser must be used within a SessionContextProvider.\");\n  }\n  return (_b = (_a = context.session) == null ? void 0 : _a.user) != null ? _b : null;\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  SessionContextProvider: _SessionContextProvider,\n  useSession: _useSession,\n  useSessionContext: _useSessionContext,\n  useSupabaseClient: _useSupabaseClient,\n  useUser: _useUser\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAAA;EAAAC;IAAA;EAAA;EAAAC;IAAA;EAAA;EAAAC;IAAA;EAAA;EAAAC;IAAA;EAAA;EAAAC;IAAA;EAAA;AAAA;AAAAC;;;ACCA,mBAOOC;AA4BP,IAAMC,iBAAiB,gCAA8B;EACnDC,WAAW;EACXC,SAAS;EACTC,OAAO;EACPC,gBAAgB,CAAC;AACnB,CAAC;AAOM,IAAMX,0BAAyB,SAAzBA,8BAIyC;EAAA,IAHpDW;IAAA,2BACAC;IAAAA,kDAAiB;IACjBC;EAEA,YAA8B,2BAAyBD,cAAc;IAAA;IAA9DH;IAASK;EAChB,YAAkC,2BAAkB,CAACF,cAAc;IAAA;IAA5DJ;IAAWO;EAClB,YAA0B,4BAAoB;IAAA;IAAvCL;IAAOM;EAEd,4BAAU,YAAM;IACd,IAAIC,UAAU;IAAA,SAEdC;MAAA;IAAA;IAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAIYP,eAAeQ,KAAKD,YAAW;YAAA;cAAA;cAF/BE,iCAARC,KAAQZ;cACRa;cAAA,KAIEL;gBAAA;gBAAA;cAAA;cAAA,KACEK;gBAAA;gBAAA;cAAA;cACFN,SAASM,MAAK;cACdP,aAAa,KAAK;cAAA;YAAA;cAIpBD,WAAWM,QAAO;cAClBL,aAAa,KAAK;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA,CAEtB;MAAA;IAAA;IAEAG,YAAW;EACb,GAAG,EAAE;EAEL,4BAAU,YAAM;IACd,4BAEIP,eAAeQ,KAAKI,kBAAkB,UAACC,OAAOJ,UAAY;QAC5D,IAAIA,aAAYI,UAAU,eAAeA,UAAU,oBAAoB;UACrEV,WAAWM,QAAO;QACpB;QAEA,IAAII,UAAU,cAAc;UAC1BV,WAAW,IAAI;QACjB;MACF,CAAC;MATSW,qCAARJ,KAAQI;IAWV,OAAO,YAAM;MACXA,aAAaC,aAAY;IAC3B;EACF,GAAG,EAAE;EAEL,IAAMC,QAAwB,0BAAQ,YAAM;IAC1C,IAAInB,WAAW;MACb,OAAO;QACLA,WAAW;QACXC,SAAS;QACTC,OAAO;QACPC;MACF;IACF;IAEA,IAAID,OAAO;MACT,OAAO;QACLF,WAAW;QACXC,SAAS;QACTC;QACAC;MACF;IACF;IAEA,OAAO;MACLH,WAAW;MACXC;MACAC,OAAO;MACPC;IACF;EACF,GAAG,CAACH,WAAWC,SAASC,KAAK,CAAC;EAE9B,OACE,kDAACH,eAAeqB,UAAf;IAAwBD;EAAA,GAAed,QAAS;AAErD;AAEO,IAAMX,qBAAoB,SAApBA,qBAA0B;EACrC,IAAM2B,UAAU,6BAAWtB,cAAc;EACzC,IAAIsB,YAAY,QAAW;IACzB,MAAM,IAAIC,wEAEV;EACF;EAEA,OAAOD;AACT;AAEO,8BAKH;EACF,IAAMA,UAAU,6BAAWtB,cAAc;EACzC,IAAIsB,YAAY,QAAW;IACzB,MAAM,IAAIC,wEAEV;EACF;EAEA,OAAOD,QAAQlB;AACjB;AAEO,IAAMV,cAAa,SAAbA,cAAmB;EAC9B,IAAM4B,UAAU,6BAAWtB,cAAc;EACzC,IAAIsB,YAAY,QAAW;IACzB,MAAM,IAAIC,iEAAgE;EAC5E;EAEA,OAAOD,QAAQpB;AACjB;AAEO,IAAML,WAAU,SAAVA,WAAgB;EAxK7B;EAyKE,IAAMyB,UAAU,6BAAWtB,cAAc;EACzC,IAAIsB,YAAY,QAAW;IACzB,MAAM,IAAIC,8DAA6D;EACzE;EAEA,OAAO,oBAAQrB,YAAR,mBAAiBsB,SAAjB,YAAyB;AAClC","names":["__export","SessionContextProvider","useSession","useSessionContext","useSupabaseClient","useUser","module","__toESM","SessionContext","isLoading","session","error","supabaseClient","initialSession","children","setSession","setIsLoading","setError","mounted","getSession","auth","session2","data","error2","onAuthStateChange","event","subscription","unsubscribe","value","Provider","context","Error","user"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@supabase/auth-helpers-react/src/index.tsx","/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@supabase/auth-helpers-react/src/components/SessionContext.tsx"],"sourcesContent":["// Types\nexport type { Session, User, SupabaseClient } from '@supabase/supabase-js';\n\n// Methods & Components\nexport * from './components/SessionContext';\n","import { AuthError, Session, SupabaseClient } from '@supabase/supabase-js';\nimport React, {\n  createContext,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\n\nexport type SessionContext =\n  | {\n      isLoading: true;\n      session: null;\n      error: null;\n      supabaseClient: SupabaseClient;\n    }\n  | {\n      isLoading: false;\n      session: Session;\n      error: null;\n      supabaseClient: SupabaseClient;\n    }\n  | {\n      isLoading: false;\n      session: null;\n      error: AuthError;\n      supabaseClient: SupabaseClient;\n    }\n  | {\n      isLoading: false;\n      session: null;\n      error: null;\n      supabaseClient: SupabaseClient;\n    };\n\nconst SessionContext = createContext<SessionContext>({\n  isLoading: true,\n  session: null,\n  error: null,\n  supabaseClient: {} as any\n});\n\nexport interface SessionContextProviderProps {\n  supabaseClient: SupabaseClient;\n  initialSession?: Session | null;\n}\n\nexport const SessionContextProvider = ({\n  supabaseClient,\n  initialSession = null,\n  children\n}: PropsWithChildren<SessionContextProviderProps>) => {\n  const [session, setSession] = useState<Session | null>(initialSession);\n  const [isLoading, setIsLoading] = useState<boolean>(!initialSession);\n  const [error, setError] = useState<AuthError>();\n\n  useEffect(() => {\n    let mounted = true;\n\n    async function getSession() {\n      const {\n        data: { session },\n        error\n      } = await supabaseClient.auth.getSession();\n\n      // only update the react state if the component is still mounted\n      if (mounted) {\n        if (error) {\n          setError(error);\n          setIsLoading(false);\n          return;\n        }\n\n        setSession(session);\n        setIsLoading(false);\n      }\n    }\n\n    getSession();\n  }, []);\n\n  useEffect(() => {\n    const {\n      data: { subscription }\n    } = supabaseClient.auth.onAuthStateChange((event, session) => {\n      if (session && (event === 'SIGNED_IN' || event === 'TOKEN_REFRESHED')) {\n        setSession(session);\n      }\n\n      if (event === 'SIGNED_OUT') {\n        setSession(null);\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  const value: SessionContext = useMemo(() => {\n    if (isLoading) {\n      return {\n        isLoading: true,\n        session: null,\n        error: null,\n        supabaseClient\n      };\n    }\n\n    if (error) {\n      return {\n        isLoading: false,\n        session: null,\n        error,\n        supabaseClient\n      };\n    }\n\n    return {\n      isLoading: false,\n      session,\n      error: null,\n      supabaseClient\n    };\n  }, [isLoading, session, error]);\n\n  return (\n    <SessionContext.Provider value={value}>{children}</SessionContext.Provider>\n  );\n};\n\nexport const useSessionContext = () => {\n  const context = useContext(SessionContext);\n  if (context === undefined) {\n    throw new Error(\n      `useSessionContext must be used within a SessionContextProvider.`\n    );\n  }\n\n  return context;\n};\n\nexport function useSupabaseClient<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database\n>() {\n  const context = useContext(SessionContext);\n  if (context === undefined) {\n    throw new Error(\n      `useSupabaseClient must be used within a SessionContextProvider.`\n    );\n  }\n\n  return context.supabaseClient as SupabaseClient<Database, SchemaName>;\n}\n\nexport const useSession = () => {\n  const context = useContext(SessionContext);\n  if (context === undefined) {\n    throw new Error(`useSession must be used within a SessionContextProvider.`);\n  }\n\n  return context.session;\n};\n\nexport const useUser = () => {\n  const context = useContext(SessionContext);\n  if (context === undefined) {\n    throw new Error(`useUser must be used within a SessionContextProvider.`);\n  }\n\n  return context.session?.user ?? null;\n};\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}