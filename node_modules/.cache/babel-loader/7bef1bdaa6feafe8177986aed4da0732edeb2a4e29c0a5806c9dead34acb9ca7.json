{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const session = useSession(); // tokens, when session exists we have a user\n  const supabase = useSupabaseClient(); // talk to supabase!\n  const {\n    isLoading\n  } = useSessionContext();\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    }\n  }, [session]);\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert(\"Error logging in to Google provider with Supabase\");\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n  async function createCalendarEvent() {\n    console.log(\"Creating calendar event\");\n    const event = {\n      'summary': eventName,\n      'description': eventDescription,\n      'start': {\n        'dateTime': start.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      },\n      'end': {\n        'dateTime': end.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      }\n    };\n    const calendarId = 'warranty@vanirinstalledsales.com'; // Specify the correct calendar ID\n\n    await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      },\n      body: JSON.stringify(event)\n    }).then(data => data.json()).then(data => {\n      console.log(data);\n      alert(\"Event created, check your Google Calendar!\");\n      fetchEvents(); // Refresh events after creating a new one\n    });\n  }\n\n  async function fetchEvents() {\n    const calendarId = 'warranty@vanirinstalledsales.com';\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    const data = await response.json();\n    const events = data.items.map(event => ({\n      title: event.summary,\n      start: new Date(event.start.dateTime || event.start.date),\n      end: new Date(event.end.dateTime || event.end.date),\n      description: event.description || ''\n    }));\n    setEvents(events);\n  }\n  function handleDateClick(date) {\n    const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n    setSelectedDate(date);\n    setSelectedEvents(dayEvents);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        margin: \"30px auto\"\n      },\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hey there \", session.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start of your event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          onChange: setStart,\n          value: start\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"End of your event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n          onChange: setEnd,\n          value: end\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Event name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEventName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Event description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setEventDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => createCalendarEvent(),\n          children: \"Create Calendar Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => signOut(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Warr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n          onClickDay: handleDateClick,\n          value: selectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), selectedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Events on \", selectedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: selectedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: event.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 53\n              }, this), event.description && /*#__PURE__*/_jsxDEV(\"em\", {\n                children: event.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 74\n              }, this), event.start.toLocaleTimeString(), \" - \", event.end.toLocaleTimeString()]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => googleSignIn(),\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pw/ZkZRK4wGs5II1QB5PVvdg2Jo=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useSession","useSupabaseClient","useSessionContext","DateTimePicker","useState","useEffect","Calendar","App","start","setStart","Date","end","setEnd","eventName","setEventName","eventDescription","setEventDescription","events","setEvents","selectedDate","setSelectedDate","selectedEvents","setSelectedEvents","session","supabase","isLoading","fetchEvents","googleSignIn","error","auth","signInWithOAuth","provider","options","scopes","alert","console","log","signOut","createCalendarEvent","event","toISOString","Intl","DateTimeFormat","resolvedOptions","timeZone","calendarId","fetch","method","headers","provider_token","body","JSON","stringify","then","data","json","response","items","map","title","summary","dateTime","date","description","handleDateClick","dayEvents","filter","toDateString","width","margin","user","email","e","target","value","length","index","toLocaleTimeString"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction App() {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedEvents, setSelectedEvents] = useState([]);\n\n  const session = useSession(); // tokens, when session exists we have a user\n  const supabase = useSupabaseClient(); // talk to supabase!\n  const { isLoading } = useSessionContext();\n  \n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n    }\n  }, [session]);\n\n  async function googleSignIn() {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert(\"Error logging in to Google provider with Supabase\");\n      console.log(error);\n    }\n  }\n\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n\n  async function createCalendarEvent() {\n    console.log(\"Creating calendar event\");\n    const event = {\n      'summary': eventName,\n      'description': eventDescription,\n      'start': {\n        'dateTime': start.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      },\n      'end': {\n        'dateTime': end.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      }\n    };\n    \n    const calendarId = 'warranty@vanirinstalledsales.com'; // Specify the correct calendar ID\n    \n    await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      },\n      body: JSON.stringify(event)\n    }).then((data) => data.json())\n      .then((data) => {\n        console.log(data);\n        alert(\"Event created, check your Google Calendar!\");\n        fetchEvents(); // Refresh events after creating a new one\n      });\n  }\n\n  async function fetchEvents() {\n    const calendarId = 'warranty@vanirinstalledsales.com';\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    \n    const data = await response.json();\n    const events = data.items.map(event => ({\n      title: event.summary,\n      start: new Date(event.start.dateTime || event.start.date),\n      end: new Date(event.end.dateTime || event.end.date),\n      description: event.description || '',\n    }));\n    setEvents(events);\n  }\n\n  function handleDateClick(date) {\n    const dayEvents = events.filter(\n      event => event.start.toDateString() === date.toDateString()\n    );\n    setSelectedDate(date);\n    setSelectedEvents(dayEvents);\n  }\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ width: \"400px\", margin: \"30px auto\" }}>\n        {session ?\n          <>\n            <h2>Hey there {session.user.email}</h2>\n            <p>Start of your event</p>\n            <DateTimePicker onChange={setStart} value={start} />\n            <p>End of your event</p>\n            <DateTimePicker onChange={setEnd} value={end} />\n            <p>Event name</p>\n            <input type=\"text\" onChange={(e) => setEventName(e.target.value)} />\n            <p>Event description</p>\n            <input type=\"text\" onChange={(e) => setEventDescription(e.target.value)} />\n            <hr />\n            <button onClick={() => createCalendarEvent()}>Create Calendar Event</button>\n            <p></p>\n            <button onClick={() => signOut()}>Sign Out</button>\n            <hr />\n            <h2>Warr</h2>\n            <Calendar\n              onClickDay={handleDateClick}\n              value={selectedDate}\n            />\n            {selectedEvents.length > 0 && (\n              <div>\n                <h3>Events on {selectedDate.toDateString()}</h3>\n                <ul>\n                  {selectedEvents.map((event, index) => (\n                    <li key={index}>\n                      <strong>{event.title}</strong><br />\n                      {event.description && <em>{event.description}</em>}<br />\n                      {event.start.toLocaleTimeString()} - {event.end.toLocaleTimeString()}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </>\n          :\n          <>\n            <button onClick={() => googleSignIn()}>Sign In With Google</button>\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}