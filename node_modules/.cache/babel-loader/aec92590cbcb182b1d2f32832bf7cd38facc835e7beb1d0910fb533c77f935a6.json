{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function patchGoogleCalendarEvent(event, calendarId, session, signOut) {\n  console.log('Attempting to patch Google Calendar event:', event);\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return;\n  }\n  if (!event.googleEventId) {\n    console.log('No googleEventId found for event. Creating a new event:', event);\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      console.log('New Google Event ID created:', googleEventId);\n      await updateAirtableWithGoogleEventId(event.id, googleEventId);\n    }\n    return;\n  }\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n  console.log('Patching event at URL:', url);\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n  };\n  console.log('Updated event data:', updatedEvent);\n  try {\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedEvent)\n    });\n    const data = await response.json();\n    console.log('Google Calendar API response for patch:', data);\n    if (!response.ok) {\n      if (response.status === 404) {\n        console.error('Event not found (404). Trying to create a new event.');\n        const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n        if (googleEventId) {\n          console.log('New Google Event ID created:', googleEventId);\n          await updateAirtableWithGoogleEventId(event.id, googleEventId);\n        }\n      } else if (data.error) {\n        console.error('Error updating event:', data.error);\n        if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n          console.log('Rate limit exceeded, retrying after delay...');\n          await delay(10000);\n          return patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        }\n      }\n    } else {\n      console.log('Event successfully updated:', data);\n    }\n  } catch (error) {\n    console.error('Error during fetch request:', error);\n  }\n}\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  console.log('Attempting to create a new Google Calendar event:', event);\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n  };\n  console.log('New event data:', newEvent);\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json()).then(data => {\n    console.log('Google Calendar creation response:', data);\n    if (data.error) {\n      console.error('Error creating event:', data.error);\n      return null;\n    } else {\n      console.log('New event successfully created:', data);\n      return data.id;\n    }\n  }).catch(error => console.error('Error during fetch request:', error));\n}\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  console.log('Updating Airtable with new Google Event ID:', googleEventId);\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId\n    }\n  };\n  console.log('Airtable update data:', updateData);\n  return await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json()).then(data => {\n    console.log('Airtable API response for update:', data);\n    if (data.error) {\n      console.error('Error updating Airtable with Google Event ID:', data.error);\n    } else {\n      console.log('Airtable record successfully updated:', data);\n    }\n  }).catch(error => console.error('Error during fetch request:', error));\n}\nasync function fetchAirtableEvents() {\n  console.log('Fetching events from Airtable');\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(url, {\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  console.log('Fetched data from Airtable:', data);\n  return data.records.filter(record => record.fields['Calendar Event Name'] && record.fields['startDate'] && record.fields['endDate']) // Skip empty records\n  .map(record => ({\n    id: record.id,\n    title: record.fields['Calendar Event Name'] || \"Untitled Event\",\n    start: new Date(record.fields['startDate']),\n    end: new Date(record.fields['endDate']),\n    description: record.fields['Billable Reason (If Billable)'] || '',\n    branch: record.fields['b'] || 'Unknown',\n    homeownerName: record.fields['Homeowner Name'] || 'Unknown',\n    streetAddress: record.fields['Street Address'] || 'Unknown',\n    city: record.fields['City'] || 'Unknown',\n    state: record.fields['State'] || 'Unknown',\n    zipCode: record.fields['Zip Code'] || 'Unknown',\n    picturesOfIssue: record.fields['Picture(s) of Issue'] || '',\n    calendarLink: record.fields['Calendar Link'] || '',\n    vendorEmail: record.fields['Vendor Email'] || '',\n    googleEventId: record.fields['GoogleEventId'] || null\n  }));\n}\nasync function fetchFutureGoogleEvents(calendarId, session) {\n  const now = new Date().toISOString();\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?timeMin=${now}`;\n  console.log('Fetching future Google Calendar events:', url);\n  let allEvents = [];\n  let pageToken = '';\n  do {\n    const response = await fetch(`${url}&pageToken=${pageToken}`, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching Google Calendar events:', data.error);\n      return [];\n    }\n    const events = data.items.map(event => {\n      var _event$start, _event$start2, _event$end, _event$end2;\n      const start = (_event$start = event.start) !== null && _event$start !== void 0 && _event$start.dateTime ? new Date(event.start.dateTime) : (_event$start2 = event.start) !== null && _event$start2 !== void 0 && _event$start2.date ? new Date(event.start.date) : null;\n      const end = (_event$end = event.end) !== null && _event$end !== void 0 && _event$end.dateTime ? new Date(event.end.dateTime) : (_event$end2 = event.end) !== null && _event$end2 !== void 0 && _event$end2.date ? new Date(event.end.date) : null;\n      return {\n        googleEventId: event.id,\n        title: event.summary || \"Untitled Event\",\n        start: start,\n        end: end,\n        description: event.description || '',\n        location: event.location || ''\n      };\n    });\n    allEvents = [...allEvents, ...events];\n    pageToken = data.nextPageToken || '';\n  } while (pageToken);\n  return allEvents;\n}\nasync function populateAirtableWithGoogleEvents(googleEvents) {\n  for (const event of googleEvents) {\n    const searchUrl = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ?filterByFormula={Street Address}=\"${event.location}\"`;\n    const searchResponse = await fetch(searchUrl, {\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json'\n      }\n    });\n    const searchData = await searchResponse.json();\n    if (searchData.records && searchData.records.length > 0) {\n      const recordId = searchData.records[0].id;\n      const airtableRecord = {\n        fields: {\n          \"startDate\": event.start.toISOString(),\n          \"endDate\": event.end.toISOString(),\n          \"GoogleEventId\": event.googleEventId,\n          \"description\": event.description,\n          \"Address\": event.location\n        }\n      };\n      const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${recordId}`;\n      await fetch(url, {\n        method: 'PATCH',\n        headers: {\n          'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(airtableRecord)\n      }).then(response => response.json()).then(data => {\n        console.log('Airtable record successfully updated:', data);\n      }).catch(error => console.error('Error during fetch request:', error));\n    } else {\n      console.log(`No matching record found for Street Address: ${event.location}. No action taken.`);\n    }\n  }\n}\nasync function populateGoogleCalendarWithAirtableRecords(calendarId, session) {\n  console.log('Populating Google Calendar with Airtable records...');\n  const airtableEvents = await fetchAirtableEvents();\n  for (const event of airtableEvents) {\n    if (event.googleEventId) {\n      console.log(`Skipping already synced event: ${event.title}`);\n      continue;\n    }\n    const newEvent = {\n      summary: event.title,\n      description: event.description,\n      start: {\n        dateTime: event.start.toISOString()\n      },\n      end: {\n        dateTime: event.end.toISOString()\n      },\n      location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n    };\n    console.log('Creating new Google Calendar event:', newEvent);\n    await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newEvent)\n    }).then(response => response.json()).then(async data => {\n      console.log('Google Calendar API response:', data);\n      if (data.error) {\n        console.error('Error creating event:', data.error);\n      } else {\n        console.log('New event successfully created in Google Calendar:', data);\n        await updateAirtableWithGoogleEventId(event.id, data.id);\n      }\n    }).catch(error => console.error('Error during Google Calendar API call:', error));\n  }\n  console.log('Finished populating Google Calendar with Airtable records.');\n}\nfunction CalendarSection(_ref) {\n  _s();\n  let {\n    calendarId,\n    calendarName,\n    session,\n    signOut\n  } = _ref;\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n  useEffect(() => {\n    console.log('Session state:', session);\n    if (session) {\n      if (!session.provider_token) {\n        console.error('No valid session token found. Logging out.');\n        signOut();\n        return;\n      }\n      fetchFutureGoogleEvents(calendarId, session).then(googleEvents => {\n        console.log('Fetched Google Calendar future events:', googleEvents);\n        populateAirtableWithGoogleEvents(googleEvents).then(() => console.log('Finished populating Airtable with Google Events')).catch(error => console.error('Error populating Airtable:', error));\n      }).catch(error => console.error('Error fetching Google Calendar events:', error));\n      fetchAirtableEvents().then(airtableEvents => {\n        console.log(\"Fetched Airtable events:\", airtableEvents);\n        airtableEvents.forEach(event => {\n          console.log(\"Processing event:\", event);\n          patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        });\n      }).catch(error => console.error(\"Error fetching Airtable events:\", error));\n    }\n  }, [session, signOut]);\n  function handleDateClick(date) {\n    console.log('Date clicked:', date);\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      console.log('Events on selected date:', dayEvents);\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true);\n    }\n  }\n  function handleEventClick(event) {\n    console.log('Event clicked:', event);\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true);\n  }\n  async function saveEvent() {\n    console.log('Saving event:', {\n      eventName,\n      eventDescription,\n      start,\n      end\n    });\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: {\n        dateTime: start.toISOString()\n      },\n      end: {\n        dateTime: end.toISOString()\n      }\n    };\n    let calendarId = 'primary';\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n    if (editingEvent) {\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n    console.log('Google Calendar event save URL:', url);\n    console.log('Method:', method);\n    console.log('Event data to save:', event);\n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then(response => {\n      console.log('Google Calendar save response:', response);\n      if (!response.ok) {\n        console.error(`Error saving event: ${response.statusText}`);\n        throw new Error(`Error saving event: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(() => {\n      alert(\"Event saved!\");\n      fetchFutureGoogleEvents(calendarId, session).then(googleEvents => {\n        setEvents(googleEvents);\n      }).catch(error => console.error('Error fetching Google Calendar events:', error));\n      resetForm();\n    }).catch(error => console.error('Error during saveEvent:', error));\n  }\n  function resetForm() {\n    console.log('Resetting form');\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n  function tileContent(_ref2) {\n    let {\n      date,\n      view\n    } = _ref2;\n    if (view === 'month') {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      return dayEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 37\n      }, this) : null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: calendarName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      value: selectedDate || new Date(),\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), selectedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Events on \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleEventClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 47\n          }, this), event.description && /*#__PURE__*/_jsxDEV(\"em\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 68\n          }, this), event.start.toLocaleTimeString(), \" - \", event.end.toLocaleTimeString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this), showInputs && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setStart,\n        value: start\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setEnd,\n        value: end\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveEvent,\n        children: [editingEvent ? \"Update Event\" : \"Create Event\", \" in \", calendarName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this), editingEvent && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        children: \"Cancel Editing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 459,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarSection, \"g9/wNLaRktVIZrINrO/OWY2BW8c=\");\n_c = CalendarSection;\nfunction App() {\n  _s2();\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const calendarInfo = [{\n    id: 'rmcgirt55@gmail.com',\n    name: 'rmcgirt55@gmail.com'\n  }];\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Warranty Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          margin: \"0 auto\"\n        },\n        children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [getGreeting(), \" \", session.user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-grid\",\n            children: calendarInfo.map(calendar => /*#__PURE__*/_jsxDEV(CalendarSection, {\n              calendarId: calendar.id,\n              calendarName: calendar.name,\n              session: session,\n              signOut: () => supabase.auth.signOut()\n            }, calendar.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signOut(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signInWithOAuth({\n              provider: 'google',\n              options: {\n                scopes: 'https://www.googleapis.com/auth/calendar'\n              }\n            }),\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 526,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"y3mU2SfEIp/ejdXuqsHfvPLyb8I=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarSection\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useSession","useSupabaseClient","useSessionContext","DateTimePicker","Calendar","delay","ms","Promise","resolve","setTimeout","patchGoogleCalendarEvent","event","calendarId","session","signOut","console","log","provider_token","error","googleEventId","createGoogleCalendarEvent","updateAirtableWithGoogleEventId","id","url","updatedEvent","summary","title","description","start","dateTime","toISOString","end","location","streetAddress","city","state","zipCode","response","fetch","method","headers","body","JSON","stringify","data","json","ok","status","message","includes","newEvent","then","catch","airtableRecordId","updateData","fields","GoogleEventId","fetchAirtableEvents","records","filter","record","map","Date","branch","homeownerName","picturesOfIssue","calendarLink","vendorEmail","fetchFutureGoogleEvents","now","allEvents","pageToken","events","items","date","nextPageToken","populateAirtableWithGoogleEvents","googleEvents","searchUrl","searchResponse","searchData","length","recordId","airtableRecord","populateGoogleCalendarWithAirtableRecords","airtableEvents","CalendarSection","calendarName","setStart","setEnd","eventName","setEventName","eventDescription","setEventDescription","setEvents","selectedDate","setSelectedDate","selectedEvents","setSelectedEvents","editingEvent","setEditingEvent","showInputs","setShowInputs","forEach","handleDateClick","toDateString","dayEvents","handleEventClick","saveEvent","statusText","Error","alert","resetForm","tileContent","view","index","toLocaleTimeString","e","target","value","App","supabase","isLoading","calendarInfo","name","getGreeting","currentHour","getHours","width","margin","user","email","calendar","auth","signInWithOAuth","provider","options","scopes"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function patchGoogleCalendarEvent(event, calendarId, session, signOut) {\n  console.log('Attempting to patch Google Calendar event:', event);\n\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return;\n  }\n\n  if (!event.googleEventId) {\n    console.log('No googleEventId found for event. Creating a new event:', event);\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      console.log('New Google Event ID created:', googleEventId);\n      await updateAirtableWithGoogleEventId(event.id, googleEventId);\n    }\n    return;\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n  console.log('Patching event at URL:', url);\n\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  console.log('Updated event data:', updatedEvent);\n\n  try {\n    const response = await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedEvent)\n    });\n\n    const data = await response.json();\n    console.log('Google Calendar API response for patch:', data);\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        console.error('Event not found (404). Trying to create a new event.');\n        const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n        if (googleEventId) {\n          console.log('New Google Event ID created:', googleEventId);\n          await updateAirtableWithGoogleEventId(event.id, googleEventId);\n        }\n      } else if (data.error) {\n        console.error('Error updating event:', data.error);\n        if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n          console.log('Rate limit exceeded, retrying after delay...');\n          await delay(10000);\n          return patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        }\n      }\n    } else {\n      console.log('Event successfully updated:', data);\n    }\n  } catch (error) {\n    console.error('Error during fetch request:', error);\n  }\n}\n\n\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  console.log('Attempting to create a new Google Calendar event:', event);\n\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  console.log('New event data:', newEvent);\n\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json())\n    .then(data => {\n      console.log('Google Calendar creation response:', data);\n      if (data.error) {\n        console.error('Error creating event:', data.error);\n        return null;\n      } else {\n        console.log('New event successfully created:', data);\n        return data.id;\n      }\n    }).catch(error => console.error('Error during fetch request:', error));\n}\n\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  console.log('Updating Airtable with new Google Event ID:', googleEventId);\n\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId\n    }\n  };\n\n  console.log('Airtable update data:', updateData);\n\n  return await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json())\n    .then(data => {\n      console.log('Airtable API response for update:', data);\n      if (data.error) {\n        console.error('Error updating Airtable with Google Event ID:', data.error);\n      } else {\n        console.log('Airtable record successfully updated:', data);\n      }\n    }).catch(error => console.error('Error during fetch request:', error));\n}\n\nasync function fetchAirtableEvents() {\n  console.log('Fetching events from Airtable');\n\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(url, {\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    }\n  });\n\n  const data = await response.json();\n  console.log('Fetched data from Airtable:', data);\n\n  return data.records\n    .filter(record => record.fields['Calendar Event Name'] && record.fields['startDate'] && record.fields['endDate']) // Skip empty records\n    .map(record => ({\n      id: record.id,\n      title: record.fields['Calendar Event Name'] || \"Untitled Event\",\n      start: new Date(record.fields['startDate']),\n      end: new Date(record.fields['endDate']),\n      description: record.fields['Billable Reason (If Billable)'] || '',\n      branch: record.fields['b'] || 'Unknown',\n      homeownerName: record.fields['Homeowner Name'] || 'Unknown',\n      streetAddress: record.fields['Street Address'] || 'Unknown',\n      city: record.fields['City'] || 'Unknown',\n      state: record.fields['State'] || 'Unknown',\n      zipCode: record.fields['Zip Code'] || 'Unknown',\n      picturesOfIssue: record.fields['Picture(s) of Issue'] || '',\n      calendarLink: record.fields['Calendar Link'] || '',\n      vendorEmail: record.fields['Vendor Email'] || '',\n      googleEventId: record.fields['GoogleEventId'] || null,\n    }));\n}\n\nasync function fetchFutureGoogleEvents(calendarId, session) {\n  const now = new Date().toISOString();\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?timeMin=${now}`;\n  console.log('Fetching future Google Calendar events:', url);\n\n  let allEvents = [];\n  let pageToken = '';\n\n  do {\n    const response = await fetch(`${url}&pageToken=${pageToken}`, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching Google Calendar events:', data.error);\n      return [];\n    }\n\n    const events = data.items.map(event => {\n      const start = event.start?.dateTime ? new Date(event.start.dateTime) : event.start?.date ? new Date(event.start.date) : null;\n      const end = event.end?.dateTime ? new Date(event.end.dateTime) : event.end?.date ? new Date(event.end.date) : null;\n\n      return {\n        googleEventId: event.id,\n        title: event.summary || \"Untitled Event\",\n        start: start,\n        end: end,\n        description: event.description || '',\n        location: event.location || '',\n      };\n    });\n\n    allEvents = [...allEvents, ...events];\n    pageToken = data.nextPageToken || '';\n  } while (pageToken);\n\n  return allEvents;\n}\n\nasync function populateAirtableWithGoogleEvents(googleEvents) {\n  for (const event of googleEvents) {\n    const searchUrl = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ?filterByFormula={Street Address}=\"${event.location}\"`;\n\n    const searchResponse = await fetch(searchUrl, {\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    const searchData = await searchResponse.json();\n\n    if (searchData.records && searchData.records.length > 0) {\n      const recordId = searchData.records[0].id;\n\n      const airtableRecord = {\n        fields: {\n          \"startDate\": event.start.toISOString(),\n          \"endDate\": event.end.toISOString(),\n          \"GoogleEventId\": event.googleEventId,\n          \"description\": event.description,\n          \"Address\": event.location,\n        }\n      };\n\n      const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${recordId}`;\n\n      await fetch(url, {\n        method: 'PATCH',\n        headers: {\n          'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(airtableRecord)\n      }).then(response => response.json())\n        .then(data => {\n          console.log('Airtable record successfully updated:', data);\n        }).catch(error => console.error('Error during fetch request:', error));\n    } else {\n      console.log(`No matching record found for Street Address: ${event.location}. No action taken.`);\n    }\n  }\n}\n\nasync function populateGoogleCalendarWithAirtableRecords(calendarId, session) {\n  console.log('Populating Google Calendar with Airtable records...');\n\n  const airtableEvents = await fetchAirtableEvents();\n\n  for (const event of airtableEvents) {\n    if (event.googleEventId) {\n      console.log(`Skipping already synced event: ${event.title}`);\n      continue;\n    }\n\n    const newEvent = {\n      summary: event.title,\n      description: event.description,\n      start: { dateTime: event.start.toISOString() },\n      end: { dateTime: event.end.toISOString() },\n      location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n    };\n\n    console.log('Creating new Google Calendar event:', newEvent);\n\n    await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      method: 'POST',\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newEvent)\n    })\n    .then(response => response.json())\n    .then(async data => {\n      console.log('Google Calendar API response:', data);\n      if (data.error) {\n        console.error('Error creating event:', data.error);\n      } else {\n        console.log('New event successfully created in Google Calendar:', data);\n        await updateAirtableWithGoogleEventId(event.id, data.id);\n      }\n    })\n    .catch(error => console.error('Error during Google Calendar API call:', error));\n  }\n\n  console.log('Finished populating Google Calendar with Airtable records.');\n}\n\nfunction CalendarSection({ calendarId, calendarName, session, signOut }) {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n\n  useEffect(() => {\n    console.log('Session state:', session);\n    if (session) {\n      if (!session.provider_token) {\n        console.error('No valid session token found. Logging out.');\n        signOut();\n        return;\n      }\n\n      fetchFutureGoogleEvents(calendarId, session)\n        .then(googleEvents => {\n          console.log('Fetched Google Calendar future events:', googleEvents);\n\n          populateAirtableWithGoogleEvents(googleEvents)\n            .then(() => console.log('Finished populating Airtable with Google Events'))\n            .catch(error => console.error('Error populating Airtable:', error));\n        })\n        .catch(error => console.error('Error fetching Google Calendar events:', error));\n\n      fetchAirtableEvents().then(airtableEvents => {\n        console.log(\"Fetched Airtable events:\", airtableEvents);\n        airtableEvents.forEach(event => {\n          console.log(\"Processing event:\", event);\n          patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        });\n      }).catch(error => console.error(\"Error fetching Airtable events:\", error));\n    }\n  }, [session, signOut]);\n\n  function handleDateClick(date) {\n    console.log('Date clicked:', date);\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      console.log('Events on selected date:', dayEvents);\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true);\n    }\n  }\n\n  function handleEventClick(event) {\n    console.log('Event clicked:', event);\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true);\n  }\n\n  async function saveEvent() {\n    console.log('Saving event:', { eventName, eventDescription, start, end });\n\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: { dateTime: start.toISOString() },\n      end: { dateTime: end.toISOString() },\n    };\n  \n    let calendarId = 'primary';\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n  \n    if (editingEvent) {\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n\n    console.log('Google Calendar event save URL:', url);\n    console.log('Method:', method);\n    console.log('Event data to save:', event);\n  \n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then((response) => {\n      console.log('Google Calendar save response:', response);\n      if (!response.ok) {\n        console.error(`Error saving event: ${response.statusText}`);\n        throw new Error(`Error saving event: ${response.statusText}`);\n      }\n      return response.json();\n    })\n    .then(() => {\n      alert(\"Event saved!\");\n      fetchFutureGoogleEvents(calendarId, session)\n        .then(googleEvents => {\n          setEvents(googleEvents);\n        })\n        .catch(error => console.error('Error fetching Google Calendar events:', error));\n      resetForm();\n    })\n    .catch(error => console.error('Error during saveEvent:', error));\n  }\n\n  function resetForm() {\n    console.log('Resetting form');\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n\n  function tileContent({ date, view }) {\n    if (view === 'month') {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      return dayEvents.length > 0 ? <div className=\"event-dot\"></div> : null;\n    }\n  }\n\n  return (\n    <div className=\"calendar-item\">\n      <h2>{calendarName}</h2>\n      <Calendar\n        onClickDay={handleDateClick}\n        value={selectedDate || new Date()}\n        tileContent={tileContent}\n      />\n      {selectedEvents.length > 0 && (\n        <div>\n          <h3>Events on {selectedDate?.toDateString()}</h3>\n          <ul>\n            {selectedEvents.map((event, index) => (\n              <li key={index} onClick={() => handleEventClick(event)}>\n                <strong>{event.title}</strong><br />\n                {event.description && <em>{event.description}</em>}<br />\n                {event.start.toLocaleTimeString()} - {event.end.toLocaleTimeString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showInputs && (\n        <>\n          <p>Start of your event</p>\n          <DateTimePicker onChange={setStart} value={start} />\n          <p>End of your event</p>\n          <DateTimePicker onChange={setEnd} value={end} />\n          <p>Event name</p>\n          <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n          <p>Event description</p>\n          <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n          <hr />\n          <button onClick={saveEvent}>\n            {editingEvent ? \"Update Event\" : \"Create Event\"} in {calendarName}\n          </button>\n          {editingEvent && <button onClick={resetForm}>Cancel Editing</button>}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const calendarInfo = [\n    { id: 'rmcgirt55@gmail.com', name: 'rmcgirt55@gmail.com' }\n  ];\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Warranty Calendar</h1>\n        <div style={{ width: \"100%\", margin: \"0 auto\" }}>\n          {session ?\n            <>\n              <h2>{getGreeting()} {session.user.email}</h2>\n              <hr />\n              <div className=\"calendar-grid\">\n                {calendarInfo.map(calendar => (\n                  <CalendarSection\n                    key={calendar.id}\n                    calendarId={calendar.id}\n                    calendarName={calendar.name}\n                    session={session}\n                    signOut={() => supabase.auth.signOut()}\n                  />\n                ))}\n              </div>\n              <p></p>\n              <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n            </>\n            :\n            <>\n              <button onClick={() => supabase.auth.signInWithOAuth({ provider: 'google', options: { scopes: 'https://www.googleapis.com/auth/calendar' } })}>\n                Sign In With Google\n              </button>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}