{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _regeneratorRuntime = require(\"/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/@babel/runtime/helpers/regeneratorRuntime.js\").default;\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar p_defer_1 = __importDefault(require(\"p-defer\"));\nfunction mapAgeCleaner(map) {\n  var _this = this;\n  var property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'maxAge';\n  var processingKey;\n  var processingTimer;\n  var processingDeferred;\n  var cleanup = function cleanup() {\n    return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      var _this2 = this;\n      var setupTimer, _iterator, _step, entry;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(processingKey !== undefined)) {\n              _context2.next = 2;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 2:\n            setupTimer = function setupTimer(item) {\n              return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                var delay;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      processingDeferred = p_defer_1.default();\n                      delay = item[1][property] - Date.now();\n                      if (!(delay <= 0)) {\n                        _context.next = 6;\n                        break;\n                      }\n                      // Remove the item immediately if the delay is equal to or below 0\n                      map.delete(item[0]);\n                      processingDeferred.resolve();\n                      return _context.abrupt(\"return\");\n                    case 6:\n                      // Keep track of the current processed key\n                      processingKey = item[0];\n                      processingTimer = setTimeout(function () {\n                        // Remove the item when the timeout fires\n                        map.delete(item[0]);\n                        if (processingDeferred) {\n                          processingDeferred.resolve();\n                        }\n                      }, delay);\n                      // tslint:disable-next-line:strict-type-predicates\n                      if (typeof processingTimer.unref === 'function') {\n                        // Don't hold up the process from exiting\n                        processingTimer.unref();\n                      }\n                      return _context.abrupt(\"return\", processingDeferred.promise);\n                    case 10:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n            };\n            _context2.prev = 3;\n            _iterator = _createForOfIteratorHelper(map);\n            _context2.prev = 5;\n            _iterator.s();\n          case 7:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 13;\n              break;\n            }\n            entry = _step.value;\n            _context2.next = 11;\n            return setupTimer(entry);\n          case 11:\n            _context2.next = 7;\n            break;\n          case 13:\n            _context2.next = 18;\n            break;\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](5);\n            _iterator.e(_context2.t0);\n          case 18:\n            _context2.prev = 18;\n            _iterator.f();\n            return _context2.finish(18);\n          case 21:\n            _context2.next = 25;\n            break;\n          case 23:\n            _context2.prev = 23;\n            _context2.t1 = _context2[\"catch\"](3);\n          case 25:\n            processingKey = undefined;\n          case 26:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[3, 23], [5, 15, 18, 21]]);\n    }));\n  };\n  var reset = function reset() {\n    processingKey = undefined;\n    if (processingTimer !== undefined) {\n      clearTimeout(processingTimer);\n      processingTimer = undefined;\n    }\n    if (processingDeferred !== undefined) {\n      // tslint:disable-line:early-exit\n      processingDeferred.reject(undefined);\n      processingDeferred = undefined;\n    }\n  };\n  var originalSet = map.set.bind(map);\n  map.set = function (key, value) {\n    if (map.has(key)) {\n      // If the key already exist, remove it so we can add it back at the end of the map.\n      map.delete(key);\n    }\n    // Call the original `map.set`\n    var result = originalSet(key, value);\n    // If we are already processing a key and the key added is the current processed key, stop processing it\n    if (processingKey && processingKey === key) {\n      reset();\n    }\n    // Always run the cleanup method in case it wasn't started yet\n    cleanup(); // tslint:disable-line:no-floating-promises\n    return result;\n  };\n  cleanup(); // tslint:disable-line:no-floating-promises\n  return map;\n}\nexports.default = mapAgeCleaner;\n// Add support for CJS\nmodule.exports = mapAgeCleaner;\nmodule.exports.default = mapAgeCleaner;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","p_defer_1","require","mapAgeCleaner","map","property","processingKey","processingTimer","processingDeferred","cleanup","undefined","setupTimer","item","default","delay","Date","now","delete","setTimeout","unref","promise","entry","reset","clearTimeout","originalSet","set","bind","key","has","module"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/node_modules/map-age-cleaner/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst p_defer_1 = __importDefault(require(\"p-defer\"));\nfunction mapAgeCleaner(map, property = 'maxAge') {\n    let processingKey;\n    let processingTimer;\n    let processingDeferred;\n    const cleanup = () => __awaiter(this, void 0, void 0, function* () {\n        if (processingKey !== undefined) {\n            // If we are already processing an item, we can safely exit\n            return;\n        }\n        const setupTimer = (item) => __awaiter(this, void 0, void 0, function* () {\n            processingDeferred = p_defer_1.default();\n            const delay = item[1][property] - Date.now();\n            if (delay <= 0) {\n                // Remove the item immediately if the delay is equal to or below 0\n                map.delete(item[0]);\n                processingDeferred.resolve();\n                return;\n            }\n            // Keep track of the current processed key\n            processingKey = item[0];\n            processingTimer = setTimeout(() => {\n                // Remove the item when the timeout fires\n                map.delete(item[0]);\n                if (processingDeferred) {\n                    processingDeferred.resolve();\n                }\n            }, delay);\n            // tslint:disable-next-line:strict-type-predicates\n            if (typeof processingTimer.unref === 'function') {\n                // Don't hold up the process from exiting\n                processingTimer.unref();\n            }\n            return processingDeferred.promise;\n        });\n        try {\n            for (const entry of map) {\n                yield setupTimer(entry);\n            }\n        }\n        catch (_a) {\n            // Do nothing if an error occurs, this means the timer was cleaned up and we should stop processing\n        }\n        processingKey = undefined;\n    });\n    const reset = () => {\n        processingKey = undefined;\n        if (processingTimer !== undefined) {\n            clearTimeout(processingTimer);\n            processingTimer = undefined;\n        }\n        if (processingDeferred !== undefined) { // tslint:disable-line:early-exit\n            processingDeferred.reject(undefined);\n            processingDeferred = undefined;\n        }\n    };\n    const originalSet = map.set.bind(map);\n    map.set = (key, value) => {\n        if (map.has(key)) {\n            // If the key already exist, remove it so we can add it back at the end of the map.\n            map.delete(key);\n        }\n        // Call the original `map.set`\n        const result = originalSet(key, value);\n        // If we are already processing a key and the key added is the current processed key, stop processing it\n        if (processingKey && processingKey === key) {\n            reset();\n        }\n        // Always run the cleanup method in case it wasn't started yet\n        cleanup(); // tslint:disable-line:no-floating-promises\n        return result;\n    };\n    cleanup(); // tslint:disable-line:no-floating-promises\n    return map;\n}\nexports.default = mapAgeCleaner;\n// Add support for CJS\nmodule.exports = mapAgeCleaner;\nmodule.exports.default = mapAgeCleaner;\n"],"mappings":"AAAA,YAAY;;AAAC;AAAA;AACb,IAAIA,SAAS,GAAI,IAAI,IAAI,IAAI,CAACA,SAAS,IAAK,UAAUC,OAAO,EAAEC,UAAU,EAAEC,CAAC,EAAEC,SAAS,EAAE;EACrF,OAAO,KAAKD,CAAC,KAAKA,CAAC,GAAGE,OAAO,CAAC,EAAE,UAAUC,OAAO,EAAEC,MAAM,EAAE;IACvD,SAASC,SAAS,CAACC,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAACO,IAAI,CAACF,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC1F,SAASC,QAAQ,CAACJ,KAAK,EAAE;MAAE,IAAI;QAAEC,IAAI,CAACN,SAAS,CAAC,OAAO,CAAC,CAACK,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,OAAOG,CAAC,EAAE;QAAEL,MAAM,CAACK,CAAC,CAAC;MAAE;IAAE;IAC7F,SAASF,IAAI,CAACI,MAAM,EAAE;MAAEA,MAAM,CAACC,IAAI,GAAGT,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC,GAAG,IAAIN,CAAC,CAAC,UAAUG,OAAO,EAAE;QAAEA,OAAO,CAACQ,MAAM,CAACL,KAAK,CAAC;MAAE,CAAC,CAAC,CAACO,IAAI,CAACR,SAAS,EAAEK,QAAQ,CAAC;IAAE;IAC9IH,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACa,KAAK,CAAChB,OAAO,EAAEC,UAAU,IAAI,EAAE,CAAC,EAAES,IAAI,EAAE,CAAC;EACzE,CAAC,CAAC;AACN,CAAC;AACD,IAAIO,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEd,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,IAAMe,SAAS,GAAGN,eAAe,CAACO,OAAO,CAAC,SAAS,CAAC,CAAC;AACrD,SAASC,aAAa,CAACC,GAAG,EAAuB;EAAA;EAAA,IAArBC,QAAQ,uEAAG,QAAQ;EAC3C,IAAIC,aAAa;EACjB,IAAIC,eAAe;EACnB,IAAIC,kBAAkB;EACtB,IAAMC,OAAO,GAAG,SAAVA,OAAO;IAAA,OAAShC,SAAS,CAAC,KAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,0CAAE;MAAA;MAAA;MAAA;QAAA;UAAA;YAAA,MAC9C6B,aAAa,KAAKI,SAAS;cAAA;cAAA;YAAA;YAAA;UAAA;YAIzBC,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAI;cAAA,OAAKnC,SAAS,CAAC,MAAI,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,0CAAE;gBAAA;gBAAA;kBAAA;oBAAA;sBACzD+B,kBAAkB,GAAGP,SAAS,CAACY,OAAO,EAAE;sBAClCC,KAAK,GAAGF,IAAI,CAAC,CAAC,CAAC,CAACP,QAAQ,CAAC,GAAGU,IAAI,CAACC,GAAG,EAAE;sBAAA,MACxCF,KAAK,IAAI,CAAC;wBAAA;wBAAA;sBAAA;sBACV;sBACAV,GAAG,CAACa,MAAM,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;sBACnBJ,kBAAkB,CAACzB,OAAO,EAAE;sBAAC;oBAAA;sBAGjC;sBACAuB,aAAa,GAAGM,IAAI,CAAC,CAAC,CAAC;sBACvBL,eAAe,GAAGW,UAAU,CAAC,YAAM;wBAC/B;wBACAd,GAAG,CAACa,MAAM,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;wBACnB,IAAIJ,kBAAkB,EAAE;0BACpBA,kBAAkB,CAACzB,OAAO,EAAE;wBAChC;sBACJ,CAAC,EAAE+B,KAAK,CAAC;sBACT;sBACA,IAAI,OAAOP,eAAe,CAACY,KAAK,KAAK,UAAU,EAAE;wBAC7C;wBACAZ,eAAe,CAACY,KAAK,EAAE;sBAC3B;sBAAC,iCACMX,kBAAkB,CAACY,OAAO;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACpC,EAAC;YAAA;YAAA;YAAA,uCAEsBhB,GAAG;YAAA;YAAA;UAAA;YAAA;cAAA;cAAA;YAAA;YAAZiB,KAAK;YAAA;YACZ,OAAMV,UAAU,CAACU,KAAK,CAAC;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA;UAAA;YAM/Bf,aAAa,GAAGI,SAAS;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA,CAC7B,EAAC;EAAA;EACF,IAAMY,KAAK,GAAG,SAARA,KAAK,GAAS;IAChBhB,aAAa,GAAGI,SAAS;IACzB,IAAIH,eAAe,KAAKG,SAAS,EAAE;MAC/Ba,YAAY,CAAChB,eAAe,CAAC;MAC7BA,eAAe,GAAGG,SAAS;IAC/B;IACA,IAAIF,kBAAkB,KAAKE,SAAS,EAAE;MAAE;MACpCF,kBAAkB,CAACxB,MAAM,CAAC0B,SAAS,CAAC;MACpCF,kBAAkB,GAAGE,SAAS;IAClC;EACJ,CAAC;EACD,IAAMc,WAAW,GAAGpB,GAAG,CAACqB,GAAG,CAACC,IAAI,CAACtB,GAAG,CAAC;EACrCA,GAAG,CAACqB,GAAG,GAAG,UAACE,GAAG,EAAEzC,KAAK,EAAK;IACtB,IAAIkB,GAAG,CAACwB,GAAG,CAACD,GAAG,CAAC,EAAE;MACd;MACAvB,GAAG,CAACa,MAAM,CAACU,GAAG,CAAC;IACnB;IACA;IACA,IAAMpC,MAAM,GAAGiC,WAAW,CAACG,GAAG,EAAEzC,KAAK,CAAC;IACtC;IACA,IAAIoB,aAAa,IAAIA,aAAa,KAAKqB,GAAG,EAAE;MACxCL,KAAK,EAAE;IACX;IACA;IACAb,OAAO,EAAE,CAAC,CAAC;IACX,OAAOlB,MAAM;EACjB,CAAC;EACDkB,OAAO,EAAE,CAAC,CAAC;EACX,OAAOL,GAAG;AACd;AACAJ,OAAO,CAACa,OAAO,GAAGV,aAAa;AAC/B;AACA0B,MAAM,CAAC7B,OAAO,GAAGG,aAAa;AAC9B0B,MAAM,CAAC7B,OAAO,CAACa,OAAO,GAAGV,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}