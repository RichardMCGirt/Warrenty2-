{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function patchGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return;\n  }\n  if (!event.googleEventId) {\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      await updateAirtableWithGoogleEventId(event.id, googleEventId);\n    }\n    return;\n  }\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description !== \"Unknown\" ? event.description : undefined,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: event.streetAddress !== \"Unknown\" && event.city !== \"Unknown\" && event.state !== \"Unknown\" && event.zipCode !== \"Unknown\" ? `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}` : undefined\n  };\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedEvent)\n  }).then(response => response.json()).then(async data => {\n    if (data.error) {\n      console.error('Error updating event:', data.error);\n      if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n        await delay(10000);\n        return patchGoogleCalendarEvent(event, calendarId, session, signOut);\n      }\n    }\n  }).catch(error => console.error('Error during fetch request:', error));\n}\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n  const newEvent = {\n    summary: event.title,\n    description: event.description !== \"Unknown\" ? event.description : undefined,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: event.streetAddress !== \"Unknown\" && event.city !== \"Unknown\" && event.state !== \"Unknown\" && event.zipCode !== \"Unknown\" ? `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}` : undefined\n  };\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      console.error('Error creating event:', data.error);\n      return null;\n    } else {\n      return data.id;\n    }\n  }).catch(error => console.error('Error during fetch request:', error));\n}\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId\n    }\n  };\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      console.error('Error updating Airtable with Google Event ID:', data.error);\n    }\n  }).catch(error => console.error('Error during fetch request:', error));\n}\nasync function fetchAirtableEvents() {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(`${url}?filterByFormula=NOT({GoogleEventId}='')`, {\n    headers: {\n      'Authorization': 'Bearer YOUR_API_KEY',\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data.records.map(record => ({\n    id: record.id,\n    title: record.fields['Calendar Event Name'] || \"Untitled Event\",\n    start: new Date(record.fields['startDate']),\n    end: new Date(record.fields['endDate']),\n    description: record.fields['Billable Reason (If Billable)'] || '',\n    branch: record.fields['b'] || 'Unknown',\n    streetAddress: record.fields['Street Address'] || 'Unknown',\n    city: record.fields['City'] || 'Unknown',\n    state: record.fields['State'] || 'Unknown',\n    zipCode: record.fields['Zip Code'] || 'Unknown',\n    googleEventId: record.fields['GoogleEventId'] || null\n  }));\n}\nasync function fetchFutureGoogleEvents(calendarId, session) {\n  const now = new Date().toISOString();\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?timeMin=${now}`;\n  let allEvents = [];\n  let pageToken = '';\n  do {\n    const response = await fetch(`${url}&pageToken=${pageToken}`, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching Google Calendar events:', data.error);\n      return [];\n    }\n    const events = data.items.map(event => {\n      var _event$start, _event$start2, _event$end, _event$end2;\n      const start = (_event$start = event.start) !== null && _event$start !== void 0 && _event$start.dateTime ? new Date(event.start.dateTime) : (_event$start2 = event.start) !== null && _event$start2 !== void 0 && _event$start2.date ? new Date(event.start.date) : null;\n      const end = (_event$end = event.end) !== null && _event$end !== void 0 && _event$end.dateTime ? new Date(event.end.dateTime) : (_event$end2 = event.end) !== null && _event$end2 !== void 0 && _event$end2.date ? new Date(event.end.date) : null;\n      return {\n        googleEventId: event.id,\n        title: event.summary || \"Untitled Event\",\n        start: start,\n        end: end,\n        description: event.description || '',\n        location: event.location || ''\n      };\n    });\n    allEvents = [...allEvents, ...events];\n    pageToken = data.nextPageToken || '';\n  } while (pageToken);\n  return allEvents;\n}\nasync function populateAirtableWithGoogleEvents(googleEvents) {\n  const now = new Date();\n  for (const event of googleEvents) {\n    if (event.start > now) {\n      // Only future events\n      const searchUrl = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ?filterByFormula={GoogleEventId}=\"${event.googleEventId}\"`;\n      const searchResponse = await fetch(searchUrl, {\n        headers: {\n          'Authorization': 'Bearer YOUR_AIRTABLE_API_KEY',\n          'Content-Type': 'application/json'\n        }\n      });\n      const searchData = await searchResponse.json();\n\n      // If a record with the same GoogleEventId exists in Airtable, avoid overwriting the address\n      if (searchData.records && searchData.records.length > 0) {\n        const record = searchData.records[0];\n        const currentAddress = record.fields['Street Address'] || '';\n        if (currentAddress && currentAddress !== event.location) {\n          console.log(`Address exists for event ${event.title}. Skipping address update.`);\n          continue; // Skip to the next event if the address exists and differs from the Google Calendar event's location\n        } else {\n          const airtableRecord = {\n            fields: {\n              \"startDate\": event.start.toISOString(),\n              \"endDate\": event.end.toISOString(),\n              \"GoogleEventId\": event.googleEventId,\n              \"description\": event.description\n            }\n          };\n          const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${record.id}`;\n          await fetch(url, {\n            method: 'PATCH',\n            headers: {\n              'Authorization': 'Bearer YOUR_AIRTABLE_API_KEY',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(airtableRecord)\n          }).then(response => response.json()).then(data => {\n            console.log('Airtable record successfully updated:', data);\n          }).catch(error => console.error('Error during fetch request:', error));\n        }\n      } else {\n        // If no matching record is found, create a new one\n        const airtableRecord = {\n          fields: {\n            \"startDate\": event.start.toISOString(),\n            \"endDate\": event.end.toISOString(),\n            \"GoogleEventId\": event.googleEventId,\n            \"description\": event.description,\n            \"Street Address\": event.location // Only add this if it's a new record\n          }\n        };\n\n        const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n        await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer YOUR_AIRTABLE_API_KEY',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(airtableRecord)\n        }).then(response => response.json()).then(data => {\n          console.log('New Airtable record successfully created:', data);\n        }).catch(error => console.error('Error during fetch request:', error));\n      }\n    }\n  }\n}\nasync function populateGoogleCalendarWithAirtableRecords(calendarInfo, session) {\n  const airtableEvents = await fetchAirtableEvents();\n  const now = new Date();\n  for (const event of airtableEvents) {\n    if (event.googleEventId) {\n      console.log(`Skipping already synced event: ${event.title}`);\n      continue;\n    }\n    if (event.start > now) {\n      // Only future events\n      const calendar = calendarInfo.find(c => c.name === event.branch);\n      if (calendar) {\n        const newEvent = {\n          summary: event.title,\n          description: event.description !== \"Unknown\" ? event.description : undefined,\n          start: {\n            dateTime: event.start.toISOString()\n          },\n          end: {\n            dateTime: event.end.toISOString()\n          },\n          location: event.streetAddress !== \"Unknown\" && event.city !== \"Unknown\" && event.state !== \"Unknown\" && event.zipCode !== \"Unknown\" ? `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}` : undefined\n        };\n        await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendar.id}/events`, {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer ' + session.provider_token,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newEvent)\n        }).then(response => response.json()).then(async data => {\n          if (!data.error) {\n            await updateAirtableWithGoogleEventId(event.id, data.id);\n          } else {\n            console.error('Error creating event:', data.error);\n          }\n        }).catch(error => console.error('Error during Google Calendar API call:', error));\n      } else {\n        console.log(`No calendar found for branch: ${event.branch}`);\n      }\n    }\n  }\n}\nfunction CalendarSection(_ref) {\n  _s();\n  let {\n    calendarId,\n    calendarName,\n    session,\n    signOut\n  } = _ref;\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n  useEffect(() => {\n    if (session) {\n      if (!session.provider_token) {\n        signOut();\n        return;\n      }\n      fetchFutureGoogleEvents(calendarId, session).then(googleEvents => populateAirtableWithGoogleEvents(googleEvents)).then(() => fetchAirtableEvents()).then(airtableEvents => airtableEvents.forEach(event => patchGoogleCalendarEvent(event, calendarId, session, signOut))).then(() => fetchFutureGoogleEvents(calendarId, session)).then(setEvents).catch(error => console.error(\"Error fetching events:\", error));\n    }\n  }, [session, signOut, calendarId]);\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true);\n    }\n  }\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true);\n  }\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: {\n        dateTime: start.toISOString()\n      },\n      end: {\n        dateTime: end.toISOString()\n      }\n    };\n    let method = \"POST\";\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    if (editingEvent) {\n      url += `/${editingEvent.googleEventId}`;\n      method = \"PUT\";\n    }\n    await fetch(url, {\n      method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then(response => response.json()).then(() => fetchFutureGoogleEvents(calendarId, session)).then(setEvents).finally(resetForm);\n  }\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n  function tileContent(_ref2) {\n    let {\n      date,\n      view\n    } = _ref2;\n    if (view === 'month') {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      return dayEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 37\n      }, this) : null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: calendarName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      value: selectedDate || new Date(),\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), selectedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Events on \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleEventClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 47\n          }, this), event.description && /*#__PURE__*/_jsxDEV(\"em\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 68\n          }, this), event.start.toLocaleTimeString(), \" - \", event.end.toLocaleTimeString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 9\n    }, this), showInputs && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setStart,\n        value: start\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setEnd,\n        value: end\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveEvent,\n        children: [editingEvent ? \"Update Event\" : \"Create Event\", \" in \", calendarName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), editingEvent && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        children: \"Cancel Editing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarSection, \"g9/wNLaRktVIZrINrO/OWY2BW8c=\");\n_c = CalendarSection;\nfunction App() {\n  _s2();\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const calendarInfo = [{\n    id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com',\n    name: 'Charleston'\n  }, {\n    id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com',\n    name: 'Greensboro'\n  }, {\n    id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com',\n    name: 'Myrtle Beach'\n  }, {\n    id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com',\n    name: 'Wilmington'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Greenville'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Columbia'\n  }, {\n    id: 'warranty@vanirinstalledsales.com',\n    name: 'Raleigh'\n  }];\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  useEffect(() => {\n    if (session) {\n      populateGoogleCalendarWithAirtableRecords(calendarInfo, session);\n    }\n  }, [session]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Warranty Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          margin: \"0 auto\"\n        },\n        children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [getGreeting(), \" \", session.user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-grid\",\n            children: calendarInfo.map(calendar => /*#__PURE__*/_jsxDEV(CalendarSection, {\n              calendarId: calendar.id,\n              calendarName: calendar.name,\n              session: session,\n              signOut: () => supabase.auth.signOut()\n            }, calendar.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signOut(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => supabase.auth.signInWithOAuth({\n            provider: 'google',\n            options: {\n              scopes: 'https://www.googleapis.com/auth/calendar'\n            }\n          }),\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 484,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"L9ZQbLfolwSvp7uHH70kYpMcCW8=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarSection\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useSession","useSupabaseClient","useSessionContext","DateTimePicker","Calendar","delay","ms","Promise","resolve","setTimeout","patchGoogleCalendarEvent","event","calendarId","session","signOut","provider_token","console","error","googleEventId","createGoogleCalendarEvent","updateAirtableWithGoogleEventId","id","url","updatedEvent","summary","title","description","undefined","start","dateTime","toISOString","end","location","streetAddress","city","state","zipCode","fetch","method","headers","body","JSON","stringify","then","response","json","data","status","message","includes","catch","newEvent","airtableRecordId","updateData","fields","GoogleEventId","fetchAirtableEvents","records","map","record","Date","branch","fetchFutureGoogleEvents","now","allEvents","pageToken","events","items","date","nextPageToken","populateAirtableWithGoogleEvents","googleEvents","searchUrl","searchResponse","searchData","length","currentAddress","log","airtableRecord","populateGoogleCalendarWithAirtableRecords","calendarInfo","airtableEvents","calendar","find","c","name","CalendarSection","calendarName","setStart","setEnd","eventName","setEventName","eventDescription","setEventDescription","setEvents","selectedDate","setSelectedDate","selectedEvents","setSelectedEvents","editingEvent","setEditingEvent","showInputs","setShowInputs","forEach","handleDateClick","toDateString","dayEvents","filter","handleEventClick","saveEvent","finally","resetForm","tileContent","view","index","toLocaleTimeString","e","target","value","App","supabase","isLoading","getGreeting","currentHour","getHours","width","margin","user","email","auth","signInWithOAuth","provider","options","scopes"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function patchGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return;\n  }\n\n  if (!event.googleEventId) {\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      await updateAirtableWithGoogleEventId(event.id, googleEventId);\n    }\n    return;\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description !== \"Unknown\" ? event.description : undefined,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: (event.streetAddress !== \"Unknown\" && event.city !== \"Unknown\" &&\n               event.state !== \"Unknown\" && event.zipCode !== \"Unknown\") \n              ? `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n              : undefined,\n  };\n\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedEvent)\n  }).then(response => response.json())\n    .then(async data => {\n      if (data.error) {\n        console.error('Error updating event:', data.error);\n        if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n          await delay(10000);\n          return patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        }\n      }\n    }).catch(error => console.error('Error during fetch request:', error));\n}\n\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n\n  const newEvent = {\n    summary: event.title,\n    description: event.description !== \"Unknown\" ? event.description : undefined,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: (event.streetAddress !== \"Unknown\" && event.city !== \"Unknown\" &&\n               event.state !== \"Unknown\" && event.zipCode !== \"Unknown\")\n              ? `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n              : undefined,\n  };\n\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json())\n    .then(data => {\n      if (data.error) {\n        console.error('Error creating event:', data.error);\n        return null;\n      } else {\n        return data.id;\n      }\n    }).catch(error => console.error('Error during fetch request:', error));\n}\n\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = { fields: { GoogleEventId: googleEventId } };\n\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json())\n    .then(data => {\n      if (data.error) {\n        console.error('Error updating Airtable with Google Event ID:', data.error);\n      }\n    }).catch(error => console.error('Error during fetch request:', error));\n}\n\nasync function fetchAirtableEvents() {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(`${url}?filterByFormula=NOT({GoogleEventId}='')`, {\n    headers: {\n      'Authorization': 'Bearer YOUR_API_KEY',\n      'Content-Type': 'application/json'\n    }\n  });\n\n  const data = await response.json();\n  return data.records.map(record => ({\n    id: record.id,\n    title: record.fields['Calendar Event Name'] || \"Untitled Event\",\n    start: new Date(record.fields['startDate']),\n    end: new Date(record.fields['endDate']),\n    description: record.fields['Billable Reason (If Billable)'] || '',\n    branch: record.fields['b'] || 'Unknown',\n    streetAddress: record.fields['Street Address'] || 'Unknown',\n    city: record.fields['City'] || 'Unknown',\n    state: record.fields['State'] || 'Unknown',\n    zipCode: record.fields['Zip Code'] || 'Unknown',\n    googleEventId: record.fields['GoogleEventId'] || null,\n  }));\n}\n\nasync function fetchFutureGoogleEvents(calendarId, session) {\n  const now = new Date().toISOString();\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?timeMin=${now}`;\n\n  let allEvents = [];\n  let pageToken = '';\n\n  do {\n    const response = await fetch(`${url}&pageToken=${pageToken}`, {\n      headers: { 'Authorization': 'Bearer ' + session.provider_token }\n    });\n\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching Google Calendar events:', data.error);\n      return [];\n    }\n\n    const events = data.items.map(event => {\n      const start = event.start?.dateTime ? new Date(event.start.dateTime) : event.start?.date ? new Date(event.start.date) : null;\n      const end = event.end?.dateTime ? new Date(event.end.dateTime) : event.end?.date ? new Date(event.end.date) : null;\n\n      return {\n        googleEventId: event.id,\n        title: event.summary || \"Untitled Event\",\n        start: start,\n        end: end,\n        description: event.description || '',\n        location: event.location || '',\n      };\n    });\n\n    allEvents = [...allEvents, ...events];\n    pageToken = data.nextPageToken || '';\n  } while (pageToken);\n\n  return allEvents;\n}\n\nasync function populateAirtableWithGoogleEvents(googleEvents) {\n  const now = new Date();\n  for (const event of googleEvents) {\n    if (event.start > now) { // Only future events\n      const searchUrl = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ?filterByFormula={GoogleEventId}=\"${event.googleEventId}\"`;\n\n      const searchResponse = await fetch(searchUrl, {\n        headers: {\n          'Authorization': 'Bearer YOUR_AIRTABLE_API_KEY',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const searchData = await searchResponse.json();\n\n      // If a record with the same GoogleEventId exists in Airtable, avoid overwriting the address\n      if (searchData.records && searchData.records.length > 0) {\n        const record = searchData.records[0];\n        const currentAddress = record.fields['Street Address'] || '';\n\n        if (currentAddress && currentAddress !== event.location) {\n          console.log(`Address exists for event ${event.title}. Skipping address update.`);\n          continue; // Skip to the next event if the address exists and differs from the Google Calendar event's location\n        } else {\n          const airtableRecord = {\n            fields: {\n              \"startDate\": event.start.toISOString(),\n              \"endDate\": event.end.toISOString(),\n              \"GoogleEventId\": event.googleEventId,\n              \"description\": event.description,\n            }\n          };\n\n          const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${record.id}`;\n\n          await fetch(url, {\n            method: 'PATCH',\n            headers: {\n              'Authorization': 'Bearer YOUR_AIRTABLE_API_KEY',\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(airtableRecord)\n          }).then(response => response.json())\n            .then(data => {\n              console.log('Airtable record successfully updated:', data);\n            }).catch(error => console.error('Error during fetch request:', error));\n        }\n      } else {\n        // If no matching record is found, create a new one\n        const airtableRecord = {\n          fields: {\n            \"startDate\": event.start.toISOString(),\n            \"endDate\": event.end.toISOString(),\n            \"GoogleEventId\": event.googleEventId,\n            \"description\": event.description,\n            \"Street Address\": event.location, // Only add this if it's a new record\n          }\n        };\n\n        const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n\n        await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer YOUR_AIRTABLE_API_KEY',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(airtableRecord)\n        }).then(response => response.json())\n          .then(data => {\n            console.log('New Airtable record successfully created:', data);\n          }).catch(error => console.error('Error during fetch request:', error));\n      }\n    }\n  }\n}\n\n\nasync function populateGoogleCalendarWithAirtableRecords(calendarInfo, session) {\n  const airtableEvents = await fetchAirtableEvents();\n  const now = new Date();\n\n  for (const event of airtableEvents) {\n    if (event.googleEventId) {\n      console.log(`Skipping already synced event: ${event.title}`);\n      continue;\n    }\n\n    if (event.start > now) { // Only future events\n      const calendar = calendarInfo.find(c => c.name === event.branch);\n      if (calendar) {\n        const newEvent = {\n          summary: event.title,\n          description: event.description !== \"Unknown\" ? event.description : undefined,\n          start: { dateTime: event.start.toISOString() },\n          end: { dateTime: event.end.toISOString() },\n          location: (event.streetAddress !== \"Unknown\" && event.city !== \"Unknown\" &&\n                     event.state !== \"Unknown\" && event.zipCode !== \"Unknown\")\n                    ? `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n                    : undefined,\n        };\n\n        await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendar.id}/events`, {\n          method: 'POST',\n          headers: {\n            'Authorization': 'Bearer ' + session.provider_token,\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newEvent)\n        })\n          .then(response => response.json())\n          .then(async data => {\n            if (!data.error) {\n              await updateAirtableWithGoogleEventId(event.id, data.id);\n            } else {\n              console.error('Error creating event:', data.error);\n            }\n          })\n          .catch(error => console.error('Error during Google Calendar API call:', error));\n      } else {\n        console.log(`No calendar found for branch: ${event.branch}`);\n      }\n    }\n  }\n}\n\nfunction CalendarSection({ calendarId, calendarName, session, signOut }) {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n\n  useEffect(() => {\n    if (session) {\n      if (!session.provider_token) {\n        signOut();\n        return;\n      }\n\n      fetchFutureGoogleEvents(calendarId, session)\n        .then(googleEvents => populateAirtableWithGoogleEvents(googleEvents))\n        .then(() => fetchAirtableEvents())\n        .then(airtableEvents => airtableEvents.forEach(event => patchGoogleCalendarEvent(event, calendarId, session, signOut)))\n        .then(() => fetchFutureGoogleEvents(calendarId, session))\n        .then(setEvents)\n        .catch(error => console.error(\"Error fetching events:\", error));\n    }\n  }, [session, signOut, calendarId]);\n\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true);\n    }\n  }\n\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true);\n  }\n\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: { dateTime: start.toISOString() },\n      end: { dateTime: end.toISOString() },\n    };\n\n    let method = \"POST\";\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n\n    if (editingEvent) {\n      url += `/${editingEvent.googleEventId}`;\n      method = \"PUT\";\n    }\n\n    await fetch(url, {\n      method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    })\n      .then(response => response.json())\n      .then(() => fetchFutureGoogleEvents(calendarId, session))\n      .then(setEvents)\n      .finally(resetForm);\n  }\n\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n\n  function tileContent({ date, view }) {\n    if (view === 'month') {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      return dayEvents.length > 0 ? <div className=\"event-dot\"></div> : null;\n    }\n  }\n\n  return (\n    <div className=\"calendar-item\">\n      <h2>{calendarName}</h2>\n      <Calendar\n        onClickDay={handleDateClick}\n        value={selectedDate || new Date()}\n        tileContent={tileContent}\n      />\n      {selectedEvents.length > 0 && (\n        <div>\n          <h3>Events on {selectedDate?.toDateString()}</h3>\n          <ul>\n            {selectedEvents.map((event, index) => (\n              <li key={index} onClick={() => handleEventClick(event)}>\n                <strong>{event.title}</strong><br />\n                {event.description && <em>{event.description}</em>}<br />\n                {event.start.toLocaleTimeString()} - {event.end.toLocaleTimeString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showInputs && (\n        <>\n          <p>Start of your event</p>\n          <DateTimePicker onChange={setStart} value={start} />\n          <p>End of your event</p>\n          <DateTimePicker onChange={setEnd} value={end} />\n          <p>Event name</p>\n          <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n          <p>Event description</p>\n          <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n          <hr />\n          <button onClick={saveEvent}>\n            {editingEvent ? \"Update Event\" : \"Create Event\"} in {calendarName}\n          </button>\n          {editingEvent && <button onClick={resetForm}>Cancel Editing</button>}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const calendarInfo = [\n    { id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com', name: 'Charleston' },\n    { id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com', name: 'Greensboro' },\n    { id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com', name: 'Myrtle Beach' },\n    { id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com', name: 'Wilmington' },\n    { id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto', name: 'Greenville' },\n    { id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto', name: 'Columbia' },\n    { id: 'warranty@vanirinstalledsales.com', name: 'Raleigh' }\n  ];\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n\n  useEffect(() => {\n    if (session) {\n      populateGoogleCalendarWithAirtableRecords(calendarInfo, session);\n    }\n  }, [session]);\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Warranty Calendar</h1>\n        <div style={{ width: \"100%\", margin: \"0 auto\" }}>\n          {session ? (\n            <>\n              <h2>{getGreeting()} {session.user.email}</h2>\n              <hr />\n              <div className=\"calendar-grid\">\n                {calendarInfo.map(calendar => (\n                  <CalendarSection\n                    key={calendar.id}\n                    calendarId={calendar.id}\n                    calendarName={calendar.name}\n                    session={session}\n                    signOut={() => supabase.auth.signOut()}\n                  />\n                ))}\n              </div>\n              <p></p>\n              <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n            </>\n          ) : (\n            <button onClick={() => supabase.auth.signInWithOAuth({ provider: 'google', options: { scopes: 'https://www.googleapis.com/auth/calendar' } })}>\n              Sign In With Google\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}