{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CalendarSection(_ref) {\n  _s();\n  let {\n    calendarId,\n    calendarName,\n    session\n  } = _ref;\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n      fetchAirtableEvents().then(airtableEvents => {\n        airtableEvents.forEach(event => {\n          patchGoogleCalendarEvent(event);\n        });\n      });\n    }\n  }, [session]);\n  async function fetchEvents() {\n    let pageToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?${pageToken && `pageToken=${pageToken}`}`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching events:', data.error);\n      return;\n    }\n    const fetchedEvents = data.items.map(event => {\n      // Check if the event has time specified; otherwise, set default time\n      const start = event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date);\n      const end = event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date);\n      if (!event.start.dateTime) {\n        start.setHours(8, 0, 0); // Set start time to 8 AM\n      }\n\n      if (!event.end.dateTime) {\n        end.setHours(20, 0, 0); // Set end time to 8 PM\n      }\n\n      return {\n        id: event.id,\n        title: event.summary,\n        start: start,\n        end: end,\n        description: event.description || ''\n      };\n    });\n    setEvents(prevEvents => [...prevEvents, ...fetchedEvents]);\n\n    // Handle pagination by checking if there's a nextPageToken\n    if (data.nextPageToken) {\n      fetchEvents(data.nextPageToken);\n    }\n  }\n  async function fetchAirtableEvents() {\n    const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    return data.records.map(record => ({\n      id: record.id,\n      title: record.fields['Status'],\n      start: new Date(record.fields['startDate']),\n      end: new Date(record.fields['endDate']),\n      description: record.fields['Billable Reason (If Billable)'],\n      branch: record.fields['Branch'],\n      homeownerName: record.fields['Homeowner Name'],\n      streetAddress: record.fields['Street Address'],\n      city: record.fields['City'],\n      state: record.fields['State'],\n      zipCode: record.fields['Zip Code'],\n      picturesOfIssue: record.fields['Picture(s) of Issue'],\n      calendarLink: record.fields['Calendar Link'],\n      vendorEmail: record.fields['Vendor Email'],\n      googleEventId: record.fields['GoogleEventId'] // Assuming this is in Airtable\n    }));\n  }\n\n  async function patchGoogleCalendarEvent(event) {\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n    const updatedEvent = {\n      summary: event.title,\n      description: event.description,\n      start: {\n        dateTime: event.start.toISOString()\n      },\n      end: {\n        dateTime: event.end.toISOString()\n      },\n      location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}` // Example of setting location based on address\n    };\n\n    await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedEvent)\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        console.error('Error updating event:', data.error);\n      } else {\n        console.log('Event updated:', data);\n      }\n    });\n  }\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      // If the same day is clicked, toggle the inputs\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true); // Show inputs when a new date is clicked\n    }\n  }\n\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true); // Ensure inputs are shown when an event is selected\n  }\n\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: {\n        dateTime: start.toISOString()\n      },\n      end: {\n        dateTime: end.toISOString()\n      }\n    };\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n    if (editingEvent) {\n      // If editing an event, update it\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then(data => data.json()).then(() => {\n      alert(\"Event saved!\");\n      fetchEvents(); // Refresh events after saving\n      resetForm();\n    });\n  }\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n  function tileContent(_ref2) {\n    let {\n      date,\n      view\n    } = _ref2;\n    if (view === 'month') {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      return dayEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }, this) : null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: calendarName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      value: selectedDate || new Date(),\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), selectedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Events on \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleEventClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 47\n          }, this), event.description && /*#__PURE__*/_jsxDEV(\"em\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 68\n          }, this), event.start.toLocaleTimeString(), \" - \", event.end.toLocaleTimeString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), showInputs && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setStart,\n        value: start\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setEnd,\n        value: end\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveEvent,\n        children: [editingEvent ? \"Update Event\" : \"Create Event\", \" in \", calendarName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), editingEvent && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        children: \"Cancel Editing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarSection, \"g9/wNLaRktVIZrINrO/OWY2BW8c=\");\n_c = CalendarSection;\nfunction App() {\n  _s2();\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const calendarInfo = [{\n    id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com',\n    name: 'Charleston'\n  }, {\n    id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com',\n    name: 'Greensboro'\n  }, {\n    id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com',\n    name: 'Myrtle Beach'\n  }, {\n    id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com',\n    name: 'Wilmington'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Grenville'\n  }, {\n    id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto',\n    name: 'Columbia'\n  }, {\n    id: 'warranty@vanirinstalledsales.com',\n    name: 'Warranty'\n  }];\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Warranty Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          margin: \"0 auto\"\n        },\n        children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [getGreeting(), \" \", session.user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-grid\",\n            children: calendarInfo.map(calendar => /*#__PURE__*/_jsxDEV(CalendarSection, {\n              calendarId: calendar.id,\n              calendarName: calendar.name,\n              session: session\n            }, calendar.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signOut(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signInWithOAuth({\n              provider: 'google',\n              options: {\n                scopes: 'https://www.googleapis.com/auth/calendar'\n              }\n            }),\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"y3mU2SfEIp/ejdXuqsHfvPLyb8I=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarSection\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useSession","useSupabaseClient","useSessionContext","DateTimePicker","Calendar","CalendarSection","calendarId","calendarName","session","start","setStart","Date","end","setEnd","eventName","setEventName","eventDescription","setEventDescription","events","setEvents","selectedDate","setSelectedDate","selectedEvents","setSelectedEvents","editingEvent","setEditingEvent","showInputs","setShowInputs","fetchEvents","fetchAirtableEvents","then","airtableEvents","forEach","event","patchGoogleCalendarEvent","pageToken","url","response","fetch","headers","provider_token","data","json","error","console","fetchedEvents","items","map","dateTime","date","setHours","id","title","summary","description","prevEvents","nextPageToken","records","record","fields","branch","homeownerName","streetAddress","city","state","zipCode","picturesOfIssue","calendarLink","vendorEmail","googleEventId","updatedEvent","toISOString","location","method","body","JSON","stringify","log","handleDateClick","toDateString","dayEvents","filter","handleEventClick","saveEvent","alert","resetForm","tileContent","view","length","index","toLocaleTimeString","e","target","value","App","supabase","isLoading","calendarInfo","name","getGreeting","currentHour","getHours","width","margin","user","email","calendar","auth","signOut","signInWithOAuth","provider","options","scopes"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction CalendarSection({ calendarId, calendarName, session }) {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n\n  useEffect(() => {\n    if (session) {\n      fetchEvents();\n      fetchAirtableEvents().then(airtableEvents => {\n        airtableEvents.forEach(event => {\n          patchGoogleCalendarEvent(event);\n        });\n      });\n    }\n  }, [session]);\n\n  async function fetchEvents(pageToken = '') {\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?${pageToken && `pageToken=${pageToken}`}`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching events:', data.error);\n      return;\n    }\n\n    const fetchedEvents = data.items.map(event => {\n      // Check if the event has time specified; otherwise, set default time\n      const start = event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date);\n      const end = event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date);\n\n      if (!event.start.dateTime) {\n        start.setHours(8, 0, 0); // Set start time to 8 AM\n      }\n\n      if (!event.end.dateTime) {\n        end.setHours(20, 0, 0); // Set end time to 8 PM\n      }\n\n      return {\n        id: event.id,\n        title: event.summary,\n        start: start,\n        end: end,\n        description: event.description || '',\n      };\n    });\n\n    setEvents(prevEvents => [...prevEvents, ...fetchedEvents]);\n\n    // Handle pagination by checking if there's a nextPageToken\n    if (data.nextPageToken) {\n      fetchEvents(data.nextPageToken);\n    }\n  }\n\nasync function fetchAirtableEvents() { const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`; const response = await fetch(url, { headers: { 'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238', 'Content-Type': 'application/json' } });\n\n    const data = await response.json();\n    return data.records.map(record => ({\n      id: record.id,\n      title: record.fields['Status'],\n      start: new Date(record.fields['startDate']),\n      end: new Date(record.fields['endDate']),\n      description: record.fields['Billable Reason (If Billable)'],\n      branch: record.fields['Branch'],\n      homeownerName: record.fields['Homeowner Name'],\n      streetAddress: record.fields['Street Address'],\n      city: record.fields['City'],\n      state: record.fields['State'],\n      zipCode: record.fields['Zip Code'],\n      picturesOfIssue: record.fields['Picture(s) of Issue'],\n      calendarLink: record.fields['Calendar Link'],\n      vendorEmail: record.fields['Vendor Email'],\n      googleEventId: record.fields['GoogleEventId'] // Assuming this is in Airtable\n    }));\n  }\n\n  async function patchGoogleCalendarEvent(event) {\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n    \n    const updatedEvent = {\n      summary: event.title,\n      description: event.description,\n      start: { dateTime: event.start.toISOString() },\n      end: { dateTime: event.end.toISOString() },\n      location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`, // Example of setting location based on address\n    };\n\n    await fetch(url, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedEvent)\n    }).then(response => response.json())\n      .then(data => {\n        if (data.error) {\n          console.error('Error updating event:', data.error);\n        } else {\n          console.log('Event updated:', data);\n        }\n      });\n  }\n\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      // If the same day is clicked, toggle the inputs\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true); // Show inputs when a new date is clicked\n    }\n  }\n\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true); // Ensure inputs are shown when an event is selected\n  }\n\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: { dateTime: start.toISOString() },\n      end: { dateTime: end.toISOString() },\n    };\n\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n\n    if (editingEvent) {\n      // If editing an event, update it\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n\n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then((data) => data.json())\n      .then(() => {\n        alert(\"Event saved!\");\n        fetchEvents(); // Refresh events after saving\n        resetForm();\n      });\n  }\n\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n\n  function tileContent({ date, view }) {\n    if (view === 'month') {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      return dayEvents.length > 0 ? <div className=\"event-dot\"></div> : null;\n    }\n  }\n\n  return (\n    <div className=\"calendar-item\">\n      <h2>{calendarName}</h2>\n      <Calendar\n        onClickDay={handleDateClick}\n        value={selectedDate || new Date()}\n        tileContent={tileContent}\n      />\n      {selectedEvents.length > 0 && (\n        <div>\n          <h3>Events on {selectedDate?.toDateString()}</h3>\n          <ul>\n            {selectedEvents.map((event, index) => (\n              <li key={index} onClick={() => handleEventClick(event)}>\n                <strong>{event.title}</strong><br />\n                {event.description && <em>{event.description}</em>}<br />\n                {event.start.toLocaleTimeString()} - {event.end.toLocaleTimeString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showInputs && (\n        <>\n          <p>Start of your event</p>\n          <DateTimePicker onChange={setStart} value={start} />\n          <p>End of your event</p>\n          <DateTimePicker onChange={setEnd} value={end} />\n          <p>Event name</p>\n          <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n          <p>Event description</p>\n          <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n          <hr />\n          <button onClick={saveEvent}>\n            {editingEvent ? \"Update Event\" : \"Create Event\"} in {calendarName}\n          </button>\n          {editingEvent && <button onClick={resetForm}>Cancel Editing</button>}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const calendarInfo = [\n    { id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com', name: 'Charleston' },\n    { id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com', name: 'Greensboro' },\n    { id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com', name: 'Myrtle Beach' },\n    { id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com', name: 'Wilmington' },\n    { id: 'https://calendar.google.com/calendar/embed?src=c_0476130ac741b9c58b404c737a8068a8b1b06ba1de2a84cff08c5d15ced54edf%40group.calendar.google.com&ctz=America%2FToronto', name: 'Grenville'},\n    { id: 'https://calendar.google.com/calendar/embed?src=c_df033dd6c81bb3cbb5c6fdfd58dd2931e145e061b8a04ea0c13c79963cb6d515%40group.calendar.google.com&ctz=America%2FToronto', name: 'Columbia'},\n    { id: 'warranty@vanirinstalledsales.com', name: 'Warranty' }\n  ];\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Warranty Calendar</h1>\n        <div style={{ width: \"100%\", margin: \"0 auto\" }}>\n          {session ?\n            <>\n              <h2>{getGreeting()} {session.user.email}</h2>\n              <hr />\n              <div className=\"calendar-grid\">\n                {calendarInfo.map(calendar => (\n                  <CalendarSection\n                    key={calendar.id}\n                    calendarId={calendar.id}\n                    calendarName={calendar.name}\n                    session={session}\n                  />\n                ))}\n              </div>\n              <p></p>\n              <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n            </>\n            :\n            <>\n              <button onClick={() => supabase.auth.signInWithOAuth({ provider: 'google', options: { scopes: 'https://www.googleapis.com/auth/calendar' } })}>\n                Sign In With Google\n              </button>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}