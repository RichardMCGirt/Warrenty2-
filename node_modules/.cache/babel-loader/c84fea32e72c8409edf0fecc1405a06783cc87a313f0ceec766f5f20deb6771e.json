{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nasync function patchGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return;\n  }\n  if (!event.googleEventId) {\n    console.error('No googleEventId found for event:', event);\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      await updateAirtableWithGoogleEventId(event.id, googleEventId); // Update Airtable with the new Google Event ID\n    }\n\n    return;\n  }\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n  console.log('Patching event:', event);\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n  };\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedEvent)\n  }).then(response => response.json()).then(async data => {\n    console.log('Google Calendar response:', data); // Log Google Calendar API response\n    if (data.error) {\n      console.error('Error updating event:', data.error);\n      if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n        console.log('Rate limit exceeded, retrying after delay...');\n        await delay(10000);\n        return patchGoogleCalendarEvent(event, calendarId, session, signOut);\n      }\n    } else {\n      console.log('Event updated:', data);\n    }\n  });\n}\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: {\n      dateTime: event.start.toISOString()\n    },\n    end: {\n      dateTime: event.end.toISOString()\n    },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`\n  };\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json()).then(data => {\n    console.log('Google Calendar creation response:', data); // Log creation response\n    if (data.error) {\n      console.error('Error creating event:', data.error);\n      return null;\n    } else {\n      console.log('New event created:', data);\n      return data.id;\n    }\n  });\n}\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId\n    }\n  };\n  return await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json()).then(data => {\n    if (data.error) {\n      console.error('Error updating Airtable with Google Event ID:', data.error);\n    } else {\n      console.log('Airtable record updated with Google Event ID:', data);\n    }\n  });\n}\nasync function fetchAirtableEvents() {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(url, {\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n  return data.records.filter(record => record.fields['Calendar Event Name'] && record.fields['startDate'] && record.fields['endDate']) // Skip empty records\n  .map(record => ({\n    id: record.id,\n    title: record.fields['Calendar Event Name'] || \"Untitled Event\",\n    // Use 'Calendar Event Name' for the event title\n    start: new Date(record.fields['startDate']),\n    end: new Date(record.fields['endDate']),\n    description: record.fields['Billable Reason (If Billable)'] || '',\n    branch: record.fields['b'] || 'Unknown',\n    homeownerName: record.fields['Homeowner Name'] || 'Unknown',\n    streetAddress: record.fields['Street Address'] || 'Unknown',\n    city: record.fields['City'] || 'Unknown',\n    state: record.fields['State'] || 'Unknown',\n    zipCode: record.fields['Zip Code'] || 'Unknown',\n    picturesOfIssue: record.fields['Picture(s) of Issue'] || '',\n    calendarLink: record.fields['Calendar Link'] || '',\n    vendorEmail: record.fields['Vendor Email'] || '',\n    googleEventId: record.fields['GoogleEventId'] || null\n  }));\n}\nfunction CalendarSection(_ref) {\n  _s();\n  let {\n    calendarId,\n    calendarName,\n    session,\n    signOut\n  } = _ref;\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n  useEffect(() => {\n    if (session) {\n      if (!session.provider_token) {\n        console.error('No valid session token found. Logging out.');\n        signOut();\n        return;\n      }\n      fetchEvents();\n      fetchAirtableEvents().then(airtableEvents => {\n        console.log(\"Fetched Airtable events:\", airtableEvents); // Log fetched Airtable events\n        airtableEvents.forEach(event => {\n          console.log(\"Processing event:\", event); // Log each event before processing\n          patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        });\n      }).catch(error => console.error(\"Error fetching Airtable events:\", error));\n    }\n  }, [session, signOut]);\n  async function fetchEvents() {\n    let pageToken = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?${pageToken && `pageToken=${pageToken}`}`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching events:', data.error);\n      return;\n    }\n    const fetchedEvents = data.items.map(event => {\n      const start = event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date);\n      const end = event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date);\n      if (!event.start.dateTime) {\n        start.setHours(8, 0, 0);\n      }\n      if (!event.end.dateTime) {\n        end.setHours(20, 0, 0);\n      }\n      return {\n        id: event.id,\n        title: event.summary,\n        start: start,\n        end: end,\n        description: event.description || ''\n      };\n    });\n    setEvents(prevEvents => [...prevEvents, ...fetchedEvents]);\n    if (data.nextPageToken) {\n      fetchEvents(data.nextPageToken);\n    }\n  }\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true);\n    }\n  }\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true);\n  }\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: {\n        dateTime: start.toISOString()\n      },\n      end: {\n        dateTime: end.toISOString()\n      }\n    };\n    let calendarId = 'primary'; // Use 'primary' if referring to the signed-in user's primary calendar\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n    if (editingEvent) {\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then(response => {\n      if (!response.ok) {\n        console.error(`Error saving event: ${response.statusText}`);\n        throw new Error(`Error saving event: ${response.statusText}`);\n      }\n      return response.json();\n    }).then(() => {\n      alert(\"Event saved!\");\n      fetchEvents();\n      resetForm();\n    }).catch(error => console.error('Error:', error));\n  }\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n  function tileContent(_ref2) {\n    let {\n      date,\n      view\n    } = _ref2;\n    if (view === 'month') {\n      const dayEvents = events.filter(event => event.start.toDateString() === date.toDateString());\n      return dayEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 37\n      }, this) : null;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: calendarName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateClick,\n      value: selectedDate || new Date(),\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), selectedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Events on \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleEventClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 47\n          }, this), event.description && /*#__PURE__*/_jsxDEV(\"em\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 39\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 68\n          }, this), event.start.toLocaleTimeString(), \" - \", event.end.toLocaleTimeString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }, this), showInputs && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setStart,\n        value: start\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End of your event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n        onChange: setEnd,\n        value: end\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Event description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveEvent,\n        children: [editingEvent ? \"Update Event\" : \"Create Event\", \" in \", calendarName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }, this), editingEvent && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetForm,\n        children: \"Cancel Editing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarSection, \"g9/wNLaRktVIZrINrO/OWY2BW8c=\");\n_c = CalendarSection;\nfunction App() {\n  _s2();\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const {\n    isLoading\n  } = useSessionContext();\n  const calendarInfo = [{\n    id: 'rmcgirt55@gmail.com',\n    name: 'rmcgirt55@gmail.com'\n  }];\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Warranty Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\",\n          margin: \"0 auto\"\n        },\n        children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [getGreeting(), \" \", session.user.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-grid\",\n            children: calendarInfo.map(calendar => /*#__PURE__*/_jsxDEV(CalendarSection, {\n              calendarId: calendar.id,\n              calendarName: calendar.name,\n              session: session,\n              signOut: () => supabase.auth.signOut() // Pass the signOut function\n            }, calendar.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signOut(),\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => supabase.auth.signInWithOAuth({\n              provider: 'google',\n              options: {\n                scopes: 'https://www.googleapis.com/auth/calendar'\n              }\n            }),\n            children: \"Sign In With Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"y3mU2SfEIp/ejdXuqsHfvPLyb8I=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarSection\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useSession","useSupabaseClient","useSessionContext","DateTimePicker","Calendar","delay","ms","Promise","resolve","setTimeout","patchGoogleCalendarEvent","event","calendarId","session","signOut","provider_token","console","error","googleEventId","createGoogleCalendarEvent","updateAirtableWithGoogleEventId","id","url","log","updatedEvent","summary","title","description","start","dateTime","toISOString","end","location","streetAddress","city","state","zipCode","fetch","method","headers","body","JSON","stringify","then","response","json","data","status","message","includes","newEvent","airtableRecordId","updateData","fields","GoogleEventId","fetchAirtableEvents","records","filter","record","map","Date","branch","homeownerName","picturesOfIssue","calendarLink","vendorEmail","CalendarSection","calendarName","setStart","setEnd","eventName","setEventName","eventDescription","setEventDescription","events","setEvents","selectedDate","setSelectedDate","selectedEvents","setSelectedEvents","editingEvent","setEditingEvent","showInputs","setShowInputs","fetchEvents","airtableEvents","forEach","catch","pageToken","fetchedEvents","items","date","setHours","prevEvents","nextPageToken","handleDateClick","toDateString","dayEvents","handleEventClick","saveEvent","ok","statusText","Error","alert","resetForm","tileContent","view","length","index","toLocaleTimeString","e","target","value","App","supabase","isLoading","calendarInfo","name","getGreeting","currentHour","getHours","width","margin","user","email","calendar","auth","signInWithOAuth","provider","options","scopes"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction delay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function patchGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return;\n  }\n\n  if (!event.googleEventId) {\n    console.error('No googleEventId found for event:', event);\n    const googleEventId = await createGoogleCalendarEvent(event, calendarId, session, signOut);\n    if (googleEventId) {\n      await updateAirtableWithGoogleEventId(event.id, googleEventId);  // Update Airtable with the new Google Event ID\n    }\n    return;\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events/${event.googleEventId}`;\n  console.log('Patching event:', event);\n\n  const updatedEvent = {\n    summary: event.title,\n    description: event.description,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedEvent)\n  }).then(response => response.json())\n    .then(async data => {\n      console.log('Google Calendar response:', data);  // Log Google Calendar API response\n      if (data.error) {\n        console.error('Error updating event:', data.error);\n        if (data.error.status === \"PERMISSION_DENIED\" && data.error.message.includes('Quota exceeded')) {\n          console.log('Rate limit exceeded, retrying after delay...');\n          await delay(10000);\n          return patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        }\n      } else {\n        console.log('Event updated:', data);\n      }\n    });\n}\n\nasync function createGoogleCalendarEvent(event, calendarId, session, signOut) {\n  if (!session.provider_token) {\n    console.error('No valid session token available. Logging out.');\n    signOut();\n    return null;\n  }\n\n  const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n\n  const newEvent = {\n    summary: event.title,\n    description: event.description,\n    start: { dateTime: event.start.toISOString() },\n    end: { dateTime: event.end.toISOString() },\n    location: `${event.streetAddress}, ${event.city}, ${event.state}, ${event.zipCode}`,\n  };\n\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Authorization': 'Bearer ' + session.provider_token,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newEvent)\n  }).then(response => response.json())\n    .then(data => {\n      console.log('Google Calendar creation response:', data);  // Log creation response\n      if (data.error) {\n        console.error('Error creating event:', data.error);\n        return null;\n      } else {\n        console.log('New event created:', data);\n        return data.id;\n      }\n    });\n}\n\nasync function updateAirtableWithGoogleEventId(airtableRecordId, googleEventId) {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ/${airtableRecordId}`;\n  const updateData = {\n    fields: {\n      GoogleEventId: googleEventId\n    }\n  };\n\n  return await fetch(url, {\n    method: 'PATCH',\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updateData)\n  }).then(response => response.json())\n    .then(data => {\n      if (data.error) {\n        console.error('Error updating Airtable with Google Event ID:', data.error);\n      } else {\n        console.log('Airtable record updated with Google Event ID:', data);\n      }\n    });\n}\n\nasync function fetchAirtableEvents() {\n  const url = `https://api.airtable.com/v0/appO21PVRA4Qa087I/tbl6EeKPsNuEvt5yJ`;\n  const response = await fetch(url, {\n    headers: {\n      'Authorization': 'Bearer patXTUS9m8os14OO1.6a81b7bc4dd88871072fe71f28b568070cc79035bc988de3d4228d52239c8238',\n      'Content-Type': 'application/json'\n    }\n  });\n\n  const data = await response.json();\n  return data.records\n    .filter(record => record.fields['Calendar Event Name'] && record.fields['startDate'] && record.fields['endDate']) // Skip empty records\n    .map(record => ({\n      id: record.id,\n      title: record.fields['Calendar Event Name'] || \"Untitled Event\", // Use 'Calendar Event Name' for the event title\n      start: new Date(record.fields['startDate']),\n      end: new Date(record.fields['endDate']),\n      description: record.fields['Billable Reason (If Billable)'] || '',\n      branch: record.fields['b'] || 'Unknown',\n      homeownerName: record.fields['Homeowner Name'] || 'Unknown',\n      streetAddress: record.fields['Street Address'] || 'Unknown',\n      city: record.fields['City'] || 'Unknown',\n      state: record.fields['State'] || 'Unknown',\n      zipCode: record.fields['Zip Code'] || 'Unknown',\n      picturesOfIssue: record.fields['Picture(s) of Issue'] || '',\n      calendarLink: record.fields['Calendar Link'] || '',\n      vendorEmail: record.fields['Vendor Email'] || '',\n      googleEventId: record.fields['GoogleEventId'] || null,\n    }));\n}\n\nfunction CalendarSection({ calendarId, calendarName, session, signOut }) {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const [editingEvent, setEditingEvent] = useState(null);\n  const [showInputs, setShowInputs] = useState(false);\n\n  useEffect(() => {\n    if (session) {\n      if (!session.provider_token) {\n        console.error('No valid session token found. Logging out.');\n        signOut();\n        return;\n      }\n      fetchEvents();\n      fetchAirtableEvents().then(airtableEvents => {\n        console.log(\"Fetched Airtable events:\", airtableEvents);  // Log fetched Airtable events\n        airtableEvents.forEach(event => {\n          console.log(\"Processing event:\", event);  // Log each event before processing\n          patchGoogleCalendarEvent(event, calendarId, session, signOut);\n        });\n      }).catch(error => console.error(\"Error fetching Airtable events:\", error));\n    }\n  }, [session, signOut]);\n\n  async function fetchEvents(pageToken = '') {\n    const url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events?${pageToken && `pageToken=${pageToken}`}`;\n    const response = await fetch(url, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n\n    const data = await response.json();\n    if (data.error) {\n      console.error('Error fetching events:', data.error);\n      return;\n    }\n\n    const fetchedEvents = data.items.map(event => {\n      const start = event.start.dateTime ? new Date(event.start.dateTime) : new Date(event.start.date);\n      const end = event.end.dateTime ? new Date(event.end.dateTime) : new Date(event.end.date);\n\n      if (!event.start.dateTime) {\n        start.setHours(8, 0, 0);\n      }\n\n      if (!event.end.dateTime) {\n        end.setHours(20, 0, 0);\n      }\n\n      return {\n        id: event.id,\n        title: event.summary,\n        start: start,\n        end: end,\n        description: event.description || '',\n      };\n    });\n\n    setEvents(prevEvents => [...prevEvents, ...fetchedEvents]);\n\n    if (data.nextPageToken) {\n      fetchEvents(data.nextPageToken);\n    }\n  }\n\n  function handleDateClick(date) {\n    if (selectedDate && selectedDate.toDateString() === date.toDateString()) {\n      setShowInputs(!showInputs);\n      setSelectedDate(showInputs ? null : date);\n    } else {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      setSelectedDate(date);\n      setStart(date);\n      setEnd(date);\n      setSelectedEvents(dayEvents || []);\n      setEditingEvent(null);\n      setShowInputs(true);\n    }\n  }\n\n  function handleEventClick(event) {\n    setEditingEvent(event);\n    setStart(event.start);\n    setEnd(event.end);\n    setEventName(event.title);\n    setEventDescription(event.description);\n    setShowInputs(true);\n  }\n\n  async function saveEvent() {\n    const event = {\n      summary: eventName,\n      description: eventDescription,\n      start: { dateTime: start.toISOString() },\n      end: { dateTime: end.toISOString() },\n    };\n  \n    let calendarId = 'primary'; // Use 'primary' if referring to the signed-in user's primary calendar\n    let url = `https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`;\n    let method = \"POST\";\n  \n    if (editingEvent) {\n      url += `/${editingEvent.id}`;\n      method = \"PUT\";\n    }\n  \n    await fetch(url, {\n      method: method,\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(event)\n    }).then((response) => {\n      if (!response.ok) {\n        console.error(`Error saving event: ${response.statusText}`);\n        throw new Error(`Error saving event: ${response.statusText}`);\n      }\n      return response.json();\n    })\n    .then(() => {\n      alert(\"Event saved!\");\n      fetchEvents();\n      resetForm();\n    })\n    .catch(error => console.error('Error:', error));\n  }\n  \n\n  function resetForm() {\n    setEventName(\"\");\n    setEventDescription(\"\");\n    setStart(new Date());\n    setEnd(new Date());\n    setEditingEvent(null);\n    setShowInputs(false);\n  }\n\n  function tileContent({ date, view }) {\n    if (view === 'month') {\n      const dayEvents = events.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      return dayEvents.length > 0 ? <div className=\"event-dot\"></div> : null;\n    }\n  }\n\n  return (\n    <div className=\"calendar-item\">\n      <h2>{calendarName}</h2>\n      <Calendar\n        onClickDay={handleDateClick}\n        value={selectedDate || new Date()}\n        tileContent={tileContent}\n      />\n      {selectedEvents.length > 0 && (\n        <div>\n          <h3>Events on {selectedDate?.toDateString()}</h3>\n          <ul>\n            {selectedEvents.map((event, index) => (\n              <li key={index} onClick={() => handleEventClick(event)}>\n                <strong>{event.title}</strong><br />\n                {event.description && <em>{event.description}</em>}<br />\n                {event.start.toLocaleTimeString()} - {event.end.toLocaleTimeString()}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showInputs && (\n        <>\n          <p>Start of your event</p>\n          <DateTimePicker onChange={setStart} value={start} />\n          <p>End of your event</p>\n          <DateTimePicker onChange={setEnd} value={end} />\n          <p>Event name</p>\n          <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\n          <p>Event description</p>\n          <input type=\"text\" value={eventDescription} onChange={(e) => setEventDescription(e.target.value)} />\n          <hr />\n          <button onClick={saveEvent}>\n            {editingEvent ? \"Update Event\" : \"Create Event\"} in {calendarName}\n          </button>\n          {editingEvent && <button onClick={resetForm}>Cancel Editing</button>}\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction App() {\n  const session = useSession();\n  const supabase = useSupabaseClient();\n  const { isLoading } = useSessionContext();\n\n  const calendarInfo = [\n    { id: 'rmcgirt55@gmail.com', name: 'rmcgirt55@gmail.com' }\n  ];\n\n  const getGreeting = () => {\n    const currentHour = new Date().getHours();\n    if (currentHour < 12) {\n      return \"Good morning\";\n    } else if (currentHour < 18) {\n      return \"Good afternoon\";\n    } else {\n      return \"Good evening\";\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Warranty Calendar</h1>\n        <div style={{ width: \"100%\", margin: \"0 auto\" }}>\n          {session ?\n            <>\n              <h2>{getGreeting()} {session.user.email}</h2>\n              <hr />\n              <div className=\"calendar-grid\">\n                {calendarInfo.map(calendar => (\n                  <CalendarSection\n                    key={calendar.id}\n                    calendarId={calendar.id}\n                    calendarName={calendar.name}\n                    session={session}\n                    signOut={() => supabase.auth.signOut()}  // Pass the signOut function\n                  />\n                ))}\n              </div>\n              <p></p>\n              <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n            </>\n            :\n            <>\n              <button onClick={() => supabase.auth.signInWithOAuth({ provider: 'google', options: { scopes: 'https://www.googleapis.com/auth/calendar' } })}>\n                Sign In With Google\n              </button>\n            </>\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,UAAU,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,8BAA8B;AAC/F,OAAOC,cAAc,MAAM,uBAAuB;AAClD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,kCAAkC;AAAC;AAAA;AAE1C,SAASC,KAAK,CAACC,EAAE,EAAE;EACjB,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;AACxD;AAEA,eAAeI,wBAAwB,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC3E,IAAI,CAACD,OAAO,CAACE,cAAc,EAAE;IAC3BC,OAAO,CAACC,KAAK,CAAC,gDAAgD,CAAC;IAC/DH,OAAO,EAAE;IACT;EACF;EAEA,IAAI,CAACH,KAAK,CAACO,aAAa,EAAE;IACxBF,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEN,KAAK,CAAC;IACzD,MAAMO,aAAa,GAAG,MAAMC,yBAAyB,CAACR,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;IAC1F,IAAII,aAAa,EAAE;MACjB,MAAME,+BAA+B,CAACT,KAAK,CAACU,EAAE,EAAEH,aAAa,CAAC,CAAC,CAAE;IACnE;;IACA;EACF;EAEA,MAAMI,GAAG,GAAI,oDAAmDV,UAAW,WAAUD,KAAK,CAACO,aAAc,EAAC;EAC1GF,OAAO,CAACO,GAAG,CAAC,iBAAiB,EAAEZ,KAAK,CAAC;EAErC,MAAMa,YAAY,GAAG;IACnBC,OAAO,EAAEd,KAAK,CAACe,KAAK;IACpBC,WAAW,EAAEhB,KAAK,CAACgB,WAAW;IAC9BC,KAAK,EAAE;MAAEC,QAAQ,EAAElB,KAAK,CAACiB,KAAK,CAACE,WAAW;IAAG,CAAC;IAC9CC,GAAG,EAAE;MAAEF,QAAQ,EAAElB,KAAK,CAACoB,GAAG,CAACD,WAAW;IAAG,CAAC;IAC1CE,QAAQ,EAAG,GAAErB,KAAK,CAACsB,aAAc,KAAItB,KAAK,CAACuB,IAAK,KAAIvB,KAAK,CAACwB,KAAM,KAAIxB,KAAK,CAACyB,OAAQ;EACpF,CAAC;EAED,MAAMC,KAAK,CAACf,GAAG,EAAE;IACfgB,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,eAAe,EAAE,SAAS,GAAG1B,OAAO,CAACE,cAAc;MACnD,cAAc,EAAE;IAClB,CAAC;IACDyB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,YAAY;EACnC,CAAC,CAAC,CAACmB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAC,MAAMG,IAAI,IAAI;IAClB9B,OAAO,CAACO,GAAG,CAAC,2BAA2B,EAAEuB,IAAI,CAAC,CAAC,CAAE;IACjD,IAAIA,IAAI,CAAC7B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE6B,IAAI,CAAC7B,KAAK,CAAC;MAClD,IAAI6B,IAAI,CAAC7B,KAAK,CAAC8B,MAAM,KAAK,mBAAmB,IAAID,IAAI,CAAC7B,KAAK,CAAC+B,OAAO,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QAC9FjC,OAAO,CAACO,GAAG,CAAC,8CAA8C,CAAC;QAC3D,MAAMlB,KAAK,CAAC,KAAK,CAAC;QAClB,OAAOK,wBAAwB,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;MACtE;IACF,CAAC,MAAM;MACLE,OAAO,CAACO,GAAG,CAAC,gBAAgB,EAAEuB,IAAI,CAAC;IACrC;EACF,CAAC,CAAC;AACN;AAEA,eAAe3B,yBAAyB,CAACR,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC5E,IAAI,CAACD,OAAO,CAACE,cAAc,EAAE;IAC3BC,OAAO,CAACC,KAAK,CAAC,gDAAgD,CAAC;IAC/DH,OAAO,EAAE;IACT,OAAO,IAAI;EACb;EAEA,MAAMQ,GAAG,GAAI,oDAAmDV,UAAW,SAAQ;EAEnF,MAAMsC,QAAQ,GAAG;IACfzB,OAAO,EAAEd,KAAK,CAACe,KAAK;IACpBC,WAAW,EAAEhB,KAAK,CAACgB,WAAW;IAC9BC,KAAK,EAAE;MAAEC,QAAQ,EAAElB,KAAK,CAACiB,KAAK,CAACE,WAAW;IAAG,CAAC;IAC9CC,GAAG,EAAE;MAAEF,QAAQ,EAAElB,KAAK,CAACoB,GAAG,CAACD,WAAW;IAAG,CAAC;IAC1CE,QAAQ,EAAG,GAAErB,KAAK,CAACsB,aAAc,KAAItB,KAAK,CAACuB,IAAK,KAAIvB,KAAK,CAACwB,KAAM,KAAIxB,KAAK,CAACyB,OAAQ;EACpF,CAAC;EAED,OAAO,MAAMC,KAAK,CAACf,GAAG,EAAE;IACtBgB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,eAAe,EAAE,SAAS,GAAG1B,OAAO,CAACE,cAAc;MACnD,cAAc,EAAE;IAClB,CAAC;IACDyB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,QAAQ;EAC/B,CAAC,CAAC,CAACP,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZ9B,OAAO,CAACO,GAAG,CAAC,oCAAoC,EAAEuB,IAAI,CAAC,CAAC,CAAE;IAC1D,IAAIA,IAAI,CAAC7B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAE6B,IAAI,CAAC7B,KAAK,CAAC;MAClD,OAAO,IAAI;IACb,CAAC,MAAM;MACLD,OAAO,CAACO,GAAG,CAAC,oBAAoB,EAAEuB,IAAI,CAAC;MACvC,OAAOA,IAAI,CAACzB,EAAE;IAChB;EACF,CAAC,CAAC;AACN;AAEA,eAAeD,+BAA+B,CAAC+B,gBAAgB,EAAEjC,aAAa,EAAE;EAC9E,MAAMI,GAAG,GAAI,mEAAkE6B,gBAAiB,EAAC;EACjG,MAAMC,UAAU,GAAG;IACjBC,MAAM,EAAE;MACNC,aAAa,EAAEpC;IACjB;EACF,CAAC;EAED,OAAO,MAAMmB,KAAK,CAACf,GAAG,EAAE;IACtBgB,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MACP,eAAe,EAAE,2FAA2F;MAC5G,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACU,UAAU;EACjC,CAAC,CAAC,CAACT,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACZ,IAAIA,IAAI,CAAC7B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,+CAA+C,EAAE6B,IAAI,CAAC7B,KAAK,CAAC;IAC5E,CAAC,MAAM;MACLD,OAAO,CAACO,GAAG,CAAC,+CAA+C,EAAEuB,IAAI,CAAC;IACpE;EACF,CAAC,CAAC;AACN;AAEA,eAAeS,mBAAmB,GAAG;EACnC,MAAMjC,GAAG,GAAI,iEAAgE;EAC7E,MAAMsB,QAAQ,GAAG,MAAMP,KAAK,CAACf,GAAG,EAAE;IAChCiB,OAAO,EAAE;MACP,eAAe,EAAE,2FAA2F;MAC5G,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,EAAE;EAClC,OAAOC,IAAI,CAACU,OAAO,CAChBC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACL,MAAM,CAAC,qBAAqB,CAAC,IAAIK,MAAM,CAACL,MAAM,CAAC,WAAW,CAAC,IAAIK,MAAM,CAACL,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;EAAA,CACjHM,GAAG,CAACD,MAAM,KAAK;IACdrC,EAAE,EAAEqC,MAAM,CAACrC,EAAE;IACbK,KAAK,EAAEgC,MAAM,CAACL,MAAM,CAAC,qBAAqB,CAAC,IAAI,gBAAgB;IAAE;IACjEzB,KAAK,EAAE,IAAIgC,IAAI,CAACF,MAAM,CAACL,MAAM,CAAC,WAAW,CAAC,CAAC;IAC3CtB,GAAG,EAAE,IAAI6B,IAAI,CAACF,MAAM,CAACL,MAAM,CAAC,SAAS,CAAC,CAAC;IACvC1B,WAAW,EAAE+B,MAAM,CAACL,MAAM,CAAC,+BAA+B,CAAC,IAAI,EAAE;IACjEQ,MAAM,EAAEH,MAAM,CAACL,MAAM,CAAC,GAAG,CAAC,IAAI,SAAS;IACvCS,aAAa,EAAEJ,MAAM,CAACL,MAAM,CAAC,gBAAgB,CAAC,IAAI,SAAS;IAC3DpB,aAAa,EAAEyB,MAAM,CAACL,MAAM,CAAC,gBAAgB,CAAC,IAAI,SAAS;IAC3DnB,IAAI,EAAEwB,MAAM,CAACL,MAAM,CAAC,MAAM,CAAC,IAAI,SAAS;IACxClB,KAAK,EAAEuB,MAAM,CAACL,MAAM,CAAC,OAAO,CAAC,IAAI,SAAS;IAC1CjB,OAAO,EAAEsB,MAAM,CAACL,MAAM,CAAC,UAAU,CAAC,IAAI,SAAS;IAC/CU,eAAe,EAAEL,MAAM,CAACL,MAAM,CAAC,qBAAqB,CAAC,IAAI,EAAE;IAC3DW,YAAY,EAAEN,MAAM,CAACL,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE;IAClDY,WAAW,EAAEP,MAAM,CAACL,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE;IAChDnC,aAAa,EAAEwC,MAAM,CAACL,MAAM,CAAC,eAAe,CAAC,IAAI;EACnD,CAAC,CAAC,CAAC;AACP;AAEA,SAASa,eAAe,OAAiD;EAAA;EAAA,IAAhD;IAAEtD,UAAU;IAAEuD,YAAY;IAAEtD,OAAO;IAAEC;EAAQ,CAAC;EACrE,MAAM,CAACc,KAAK,EAAEwC,QAAQ,CAAC,GAAGtE,QAAQ,CAAC,IAAI8D,IAAI,EAAE,CAAC;EAC9C,MAAM,CAAC7B,GAAG,EAAEsC,MAAM,CAAC,GAAGvE,QAAQ,CAAC,IAAI8D,IAAI,EAAE,CAAC;EAC1C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGzE,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0E,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3E,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC4E,MAAM,EAAEC,SAAS,CAAC,GAAG7E,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8E,YAAY,EAAEC,eAAe,CAAC,GAAG/E,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACgF,cAAc,EAAEC,iBAAiB,CAAC,GAAGjF,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACkF,YAAY,EAAEC,eAAe,CAAC,GAAGnF,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACoF,UAAU,EAAEC,aAAa,CAAC,GAAGrF,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,IAAIc,OAAO,EAAE;MACX,IAAI,CAACA,OAAO,CAACE,cAAc,EAAE;QAC3BC,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;QAC3DH,OAAO,EAAE;QACT;MACF;MACAsE,WAAW,EAAE;MACb7B,mBAAmB,EAAE,CAACZ,IAAI,CAAC0C,cAAc,IAAI;QAC3CrE,OAAO,CAACO,GAAG,CAAC,0BAA0B,EAAE8D,cAAc,CAAC,CAAC,CAAE;QAC1DA,cAAc,CAACC,OAAO,CAAC3E,KAAK,IAAI;UAC9BK,OAAO,CAACO,GAAG,CAAC,mBAAmB,EAAEZ,KAAK,CAAC,CAAC,CAAE;UAC1CD,wBAAwB,CAACC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;QAC/D,CAAC,CAAC;MACJ,CAAC,CAAC,CAACyE,KAAK,CAACtE,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,CAACJ,OAAO,EAAEC,OAAO,CAAC,CAAC;EAEtB,eAAesE,WAAW,GAAiB;IAAA,IAAhBI,SAAS,uEAAG,EAAE;IACvC,MAAMlE,GAAG,GAAI,oDAAmDV,UAAW,WAAU4E,SAAS,IAAK,aAAYA,SAAU,EAAE,EAAC;IAC5H,MAAM5C,QAAQ,GAAG,MAAMP,KAAK,CAACf,GAAG,EAAE;MAChCiB,OAAO,EAAE;QACP,eAAe,EAAE,SAAS,GAAG1B,OAAO,CAACE;MACvC;IACF,CAAC,CAAC;IAEF,MAAM+B,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,EAAE;IAClC,IAAIC,IAAI,CAAC7B,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAE6B,IAAI,CAAC7B,KAAK,CAAC;MACnD;IACF;IAEA,MAAMwE,aAAa,GAAG3C,IAAI,CAAC4C,KAAK,CAAC/B,GAAG,CAAChD,KAAK,IAAI;MAC5C,MAAMiB,KAAK,GAAGjB,KAAK,CAACiB,KAAK,CAACC,QAAQ,GAAG,IAAI+B,IAAI,CAACjD,KAAK,CAACiB,KAAK,CAACC,QAAQ,CAAC,GAAG,IAAI+B,IAAI,CAACjD,KAAK,CAACiB,KAAK,CAAC+D,IAAI,CAAC;MAChG,MAAM5D,GAAG,GAAGpB,KAAK,CAACoB,GAAG,CAACF,QAAQ,GAAG,IAAI+B,IAAI,CAACjD,KAAK,CAACoB,GAAG,CAACF,QAAQ,CAAC,GAAG,IAAI+B,IAAI,CAACjD,KAAK,CAACoB,GAAG,CAAC4D,IAAI,CAAC;MAExF,IAAI,CAAChF,KAAK,CAACiB,KAAK,CAACC,QAAQ,EAAE;QACzBD,KAAK,CAACgE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzB;MAEA,IAAI,CAACjF,KAAK,CAACoB,GAAG,CAACF,QAAQ,EAAE;QACvBE,GAAG,CAAC6D,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;MACxB;MAEA,OAAO;QACLvE,EAAE,EAAEV,KAAK,CAACU,EAAE;QACZK,KAAK,EAAEf,KAAK,CAACc,OAAO;QACpBG,KAAK,EAAEA,KAAK;QACZG,GAAG,EAAEA,GAAG;QACRJ,WAAW,EAAEhB,KAAK,CAACgB,WAAW,IAAI;MACpC,CAAC;IACH,CAAC,CAAC;IAEFgD,SAAS,CAACkB,UAAU,IAAI,CAAC,GAAGA,UAAU,EAAE,GAAGJ,aAAa,CAAC,CAAC;IAE1D,IAAI3C,IAAI,CAACgD,aAAa,EAAE;MACtBV,WAAW,CAACtC,IAAI,CAACgD,aAAa,CAAC;IACjC;EACF;EAEA,SAASC,eAAe,CAACJ,IAAI,EAAE;IAC7B,IAAIf,YAAY,IAAIA,YAAY,CAACoB,YAAY,EAAE,KAAKL,IAAI,CAACK,YAAY,EAAE,EAAE;MACvEb,aAAa,CAAC,CAACD,UAAU,CAAC;MAC1BL,eAAe,CAACK,UAAU,GAAG,IAAI,GAAGS,IAAI,CAAC;IAC3C,CAAC,MAAM;MACL,MAAMM,SAAS,GAAGvB,MAAM,CAACjB,MAAM,CAC7B9C,KAAK,IAAIA,KAAK,CAACiB,KAAK,CAACoE,YAAY,EAAE,KAAKL,IAAI,CAACK,YAAY,EAAE,CAC5D;MACDnB,eAAe,CAACc,IAAI,CAAC;MACrBvB,QAAQ,CAACuB,IAAI,CAAC;MACdtB,MAAM,CAACsB,IAAI,CAAC;MACZZ,iBAAiB,CAACkB,SAAS,IAAI,EAAE,CAAC;MAClChB,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,IAAI,CAAC;IACrB;EACF;EAEA,SAASe,gBAAgB,CAACvF,KAAK,EAAE;IAC/BsE,eAAe,CAACtE,KAAK,CAAC;IACtByD,QAAQ,CAACzD,KAAK,CAACiB,KAAK,CAAC;IACrByC,MAAM,CAAC1D,KAAK,CAACoB,GAAG,CAAC;IACjBwC,YAAY,CAAC5D,KAAK,CAACe,KAAK,CAAC;IACzB+C,mBAAmB,CAAC9D,KAAK,CAACgB,WAAW,CAAC;IACtCwD,aAAa,CAAC,IAAI,CAAC;EACrB;EAEA,eAAegB,SAAS,GAAG;IACzB,MAAMxF,KAAK,GAAG;MACZc,OAAO,EAAE6C,SAAS;MAClB3C,WAAW,EAAE6C,gBAAgB;MAC7B5C,KAAK,EAAE;QAAEC,QAAQ,EAAED,KAAK,CAACE,WAAW;MAAG,CAAC;MACxCC,GAAG,EAAE;QAAEF,QAAQ,EAAEE,GAAG,CAACD,WAAW;MAAG;IACrC,CAAC;IAED,IAAIlB,UAAU,GAAG,SAAS,CAAC,CAAC;IAC5B,IAAIU,GAAG,GAAI,oDAAmDV,UAAW,SAAQ;IACjF,IAAI0B,MAAM,GAAG,MAAM;IAEnB,IAAI0C,YAAY,EAAE;MAChB1D,GAAG,IAAK,IAAG0D,YAAY,CAAC3D,EAAG,EAAC;MAC5BiB,MAAM,GAAG,KAAK;IAChB;IAEA,MAAMD,KAAK,CAACf,GAAG,EAAE;MACfgB,MAAM,EAAEA,MAAM;MACdC,OAAO,EAAE;QACP,eAAe,EAAE,SAAS,GAAG1B,OAAO,CAACE,cAAc;QACnD,cAAc,EAAE;MAClB,CAAC;MACDyB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC/B,KAAK;IAC5B,CAAC,CAAC,CAACgC,IAAI,CAAEC,QAAQ,IAAK;MACpB,IAAI,CAACA,QAAQ,CAACwD,EAAE,EAAE;QAChBpF,OAAO,CAACC,KAAK,CAAE,uBAAsB2B,QAAQ,CAACyD,UAAW,EAAC,CAAC;QAC3D,MAAM,IAAIC,KAAK,CAAE,uBAAsB1D,QAAQ,CAACyD,UAAW,EAAC,CAAC;MAC/D;MACA,OAAOzD,QAAQ,CAACC,IAAI,EAAE;IACxB,CAAC,CAAC,CACDF,IAAI,CAAC,MAAM;MACV4D,KAAK,CAAC,cAAc,CAAC;MACrBnB,WAAW,EAAE;MACboB,SAAS,EAAE;IACb,CAAC,CAAC,CACDjB,KAAK,CAACtE,KAAK,IAAID,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;EACjD;EAGA,SAASuF,SAAS,GAAG;IACnBjC,YAAY,CAAC,EAAE,CAAC;IAChBE,mBAAmB,CAAC,EAAE,CAAC;IACvBL,QAAQ,CAAC,IAAIR,IAAI,EAAE,CAAC;IACpBS,MAAM,CAAC,IAAIT,IAAI,EAAE,CAAC;IAClBqB,eAAe,CAAC,IAAI,CAAC;IACrBE,aAAa,CAAC,KAAK,CAAC;EACtB;EAEA,SAASsB,WAAW,QAAiB;IAAA,IAAhB;MAAEd,IAAI;MAAEe;IAAK,CAAC;IACjC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMT,SAAS,GAAGvB,MAAM,CAACjB,MAAM,CAC7B9C,KAAK,IAAIA,KAAK,CAACiB,KAAK,CAACoE,YAAY,EAAE,KAAKL,IAAI,CAACK,YAAY,EAAE,CAC5D;MACD,OAAOC,SAAS,CAACU,MAAM,GAAG,CAAC,gBAAG;QAAK,SAAS,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAO,GAAG,IAAI;IACxE;EACF;EAEA,oBACE;IAAK,SAAS,EAAC,eAAe;IAAA,wBAC5B;MAAA,UAAKxC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,eACvB,QAAC,QAAQ;MACP,UAAU,EAAE4B,eAAgB;MAC5B,KAAK,EAAEnB,YAAY,IAAI,IAAIhB,IAAI,EAAG;MAClC,WAAW,EAAE6C;IAAY;MAAA;MAAA;MAAA;IAAA,QACzB,EACD3B,cAAc,CAAC6B,MAAM,GAAG,CAAC,iBACxB;MAAA,wBACE;QAAA,WAAI,YAAU,EAAC/B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEoB,YAAY,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eACjD;QAAA,UACGlB,cAAc,CAACnB,GAAG,CAAC,CAAChD,KAAK,EAAEiG,KAAK,kBAC/B;UAAgB,OAAO,EAAE,MAAMV,gBAAgB,CAACvF,KAAK,CAAE;UAAA,wBACrD;YAAA,UAASA,KAAK,CAACe;UAAK;YAAA;YAAA;YAAA;UAAA,QAAU;YAAA;YAAA;YAAA;UAAA,QAAM,EACnCf,KAAK,CAACgB,WAAW,iBAAI;YAAA,UAAKhB,KAAK,CAACgB;UAAW;YAAA;YAAA;YAAA;UAAA,QAAM,eAAC;YAAA;YAAA;YAAA;UAAA,QAAM,EACxDhB,KAAK,CAACiB,KAAK,CAACiF,kBAAkB,EAAE,EAAC,KAAG,EAAClG,KAAK,CAACoB,GAAG,CAAC8E,kBAAkB,EAAE;QAAA,GAH7DD,KAAK;UAAA;UAAA;UAAA;QAAA,QAKf;MAAC;QAAA;QAAA;QAAA;MAAA,QACC;IAAA;MAAA;MAAA;MAAA;IAAA,QAER,EACA1B,UAAU,iBACT;MAAA,wBACE;QAAA,UAAG;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAI,eAC1B,QAAC,cAAc;QAAC,QAAQ,EAAEd,QAAS;QAAC,KAAK,EAAExC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACpD;QAAA,UAAG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAI,eACxB,QAAC,cAAc;QAAC,QAAQ,EAAEyC,MAAO;QAAC,KAAK,EAAEtC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAChD;QAAA,UAAG;MAAU;QAAA;QAAA;QAAA;MAAA,QAAI,eACjB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEuC,SAAU;QAAC,QAAQ,EAAGwC,CAAC,IAAKvC,YAAY,CAACuC,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACtF;QAAA,UAAG;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAI,eACxB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAExC,gBAAiB;QAAC,QAAQ,EAAGsC,CAAC,IAAKrC,mBAAmB,CAACqC,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACpG;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAQ,OAAO,EAAEb,SAAU;QAAA,WACxBnB,YAAY,GAAG,cAAc,GAAG,cAAc,EAAC,MAAI,EAACb,YAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D,EACRa,YAAY,iBAAI;QAAQ,OAAO,EAAEwB,SAAU;QAAA,UAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA,gBAEvE;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GApMQtC,eAAe;AAAA,KAAfA,eAAe;AAsMxB,SAAS+C,GAAG,GAAG;EAAA;EACb,MAAMpG,OAAO,GAAGb,UAAU,EAAE;EAC5B,MAAMkH,QAAQ,GAAGjH,iBAAiB,EAAE;EACpC,MAAM;IAAEkH;EAAU,CAAC,GAAGjH,iBAAiB,EAAE;EAEzC,MAAMkH,YAAY,GAAG,CACnB;IAAE/F,EAAE,EAAE,qBAAqB;IAAEgG,IAAI,EAAE;EAAsB,CAAC,CAC3D;EAED,MAAMC,WAAW,GAAG,MAAM;IACxB,MAAMC,WAAW,GAAG,IAAI3D,IAAI,EAAE,CAAC4D,QAAQ,EAAE;IACzC,IAAID,WAAW,GAAG,EAAE,EAAE;MACpB,OAAO,cAAc;IACvB,CAAC,MAAM,IAAIA,WAAW,GAAG,EAAE,EAAE;MAC3B,OAAO,gBAAgB;IACzB,CAAC,MAAM;MACL,OAAO,cAAc;IACvB;EACF,CAAC;EAED,IAAIJ,SAAS,EAAE;IACb,oBAAO;MAAA,UAAK;IAAU;MAAA;MAAA;MAAA;IAAA,QAAM;EAC9B;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB;MAAK,SAAS,EAAC,WAAW;MAAA,wBACxB;QAAA,UAAI;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAK,eAC1B;QAAK,KAAK,EAAE;UAAEM,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAS,CAAE;QAAA,UAC7C7G,OAAO,gBACN;UAAA,wBACE;YAAA,WAAKyG,WAAW,EAAE,EAAC,GAAC,EAACzG,OAAO,CAAC8G,IAAI,CAACC,KAAK;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM,eAC7C;YAAA;YAAA;YAAA;UAAA,QAAM,eACN;YAAK,SAAS,EAAC,eAAe;YAAA,UAC3BR,YAAY,CAACzD,GAAG,CAACkE,QAAQ,iBACxB,QAAC,eAAe;cAEd,UAAU,EAAEA,QAAQ,CAACxG,EAAG;cACxB,YAAY,EAAEwG,QAAQ,CAACR,IAAK;cAC5B,OAAO,EAAExG,OAAQ;cACjB,OAAO,EAAE,MAAMqG,QAAQ,CAACY,IAAI,CAAChH,OAAO,EAAG,CAAE;YAAA,GAJpC+G,QAAQ,CAACxG,EAAE;cAAA;cAAA;cAAA;YAAA,QAMnB;UAAC;YAAA;YAAA;YAAA;UAAA,QACE,eACN;YAAA;YAAA;YAAA;UAAA,QAAO,eACP;YAAQ,OAAO,EAAE,MAAM6F,QAAQ,CAACY,IAAI,CAAChH,OAAO,EAAG;YAAA,UAAC;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA,gBAChE,gBAEH;UAAA,uBACE;YAAQ,OAAO,EAAE,MAAMoG,QAAQ,CAACY,IAAI,CAACC,eAAe,CAAC;cAAEC,QAAQ,EAAE,QAAQ;cAAEC,OAAO,EAAE;gBAAEC,MAAM,EAAE;cAA2C;YAAE,CAAC,CAAE;YAAA,UAAC;UAE/I;YAAA;YAAA;YAAA;UAAA;QAAS;MACR;QAAA;QAAA;QAAA;MAAA,QAED;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,IA1DQjB,GAAG;EAAA,QACMjH,UAAU,EACTC,iBAAiB,EACZC,iBAAiB;AAAA;AAAA,MAHhC+G,GAAG;AA4DZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}