{"ast":null,"code":"var _jsxFileName = \"/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [eventsByCalendar, setEventsByCalendar] = useState({});\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const session = useSession(); // tokens, when session exists we have a user\n  const supabase = useSupabaseClient(); // talk to supabase!\n  const {\n    isLoading\n  } = useSessionContext();\n  const calendarInfo = [{\n    id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com',\n    name: 'Charleston'\n  }, {\n    id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com',\n    name: 'Greensboro'\n  }, {\n    id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com',\n    name: 'Myrtle Beach'\n  }, {\n    id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com',\n    name: 'Wilmington'\n  }];\n  useEffect(() => {\n    if (session) {\n      calendarInfo.forEach(calendar => {\n        fetchEvents(calendar.id);\n      });\n    }\n  }, [session]);\n  async function googleSignIn() {\n    const {\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert(\"Error logging in to Google provider with Supabase\");\n      console.log(error);\n    }\n  }\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n  async function createCalendarEvent(calendarId) {\n    console.log(\"Creating calendar event\");\n    const event = {\n      'summary': eventName,\n      'description': eventDescription,\n      'start': {\n        'dateTime': start.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      },\n      'end': {\n        'dateTime': end.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      }\n    };\n    await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      },\n      body: JSON.stringify(event)\n    }).then(data => data.json()).then(data => {\n      console.log(data);\n      alert(\"Event created, check your Google Calendar!\");\n      fetchEvents(calendarId); // Refresh events after creating a new one\n    });\n  }\n\n  async function fetchEvents(calendarId) {\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    const data = await response.json();\n    const events = data.items.map(event => ({\n      title: event.summary,\n      start: new Date(event.start.dateTime || event.start.date),\n      end: new Date(event.end.dateTime || event.end.date),\n      description: event.description || ''\n    }));\n    setEventsByCalendar(prevState => ({\n      ...prevState,\n      [calendarId]: events\n    }));\n  }\n  function handleDateClick(date, calendarId) {\n    var _eventsByCalendar$cal;\n    const dayEvents = (_eventsByCalendar$cal = eventsByCalendar[calendarId]) === null || _eventsByCalendar$cal === void 0 ? void 0 : _eventsByCalendar$cal.filter(event => event.start.toDateString() === date.toDateString());\n    setSelectedDate(date);\n    setStart(date);\n    setEnd(date);\n    setSelectedEvents(dayEvents || []);\n  }\n  function tileContent(_ref, calendarId) {\n    let {\n      date,\n      view\n    } = _ref;\n    if (view === 'month') {\n      var _eventsByCalendar$cal2;\n      const dayEvents = (_eventsByCalendar$cal2 = eventsByCalendar[calendarId]) === null || _eventsByCalendar$cal2 === void 0 ? void 0 : _eventsByCalendar$cal2.filter(event => event.start.toDateString() === date.toDateString());\n      return dayEvents && dayEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 50\n      }, this) : null;\n    }\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"400px\",\n        margin: \"30px auto\"\n      },\n      children: session ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Hey there \", session.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), calendarInfo.map(calendar => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: calendar.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n            onClickDay: date => handleDateClick(date, calendar.id),\n            value: selectedDate || new Date(),\n            tileContent: tile => tileContent(tile, calendar.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), selectedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Events on \", selectedDate === null || selectedDate === void 0 ? void 0 : selectedDate.toDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: selectedEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: event.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 57\n                }, this), event.description && /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: event.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 78\n                }, this), event.start.toLocaleTimeString(), \" - \", event.end.toLocaleTimeString()]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), selectedDate && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Start of your event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n              onChange: setStart,\n              value: start\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"End of your event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DateTimePicker, {\n              onChange: setEnd,\n              value: end\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Event name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setEventName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Event description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => setEventDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => createCalendarEvent(calendar.id),\n              children: [\"Create Event in \", calendar.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, calendar.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => signOut(),\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => googleSignIn(),\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FzQpW30tqD2kgLisUuCQg47E7Kc=\", false, function () {\n  return [useSession, useSupabaseClient, useSessionContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useSession","useSupabaseClient","useSessionContext","DateTimePicker","useState","useEffect","Calendar","App","start","setStart","Date","end","setEnd","eventName","setEventName","eventDescription","setEventDescription","eventsByCalendar","setEventsByCalendar","selectedDate","setSelectedDate","selectedEvents","setSelectedEvents","session","supabase","isLoading","calendarInfo","id","name","forEach","calendar","fetchEvents","googleSignIn","error","auth","signInWithOAuth","provider","options","scopes","alert","console","log","signOut","createCalendarEvent","calendarId","event","toISOString","Intl","DateTimeFormat","resolvedOptions","timeZone","fetch","method","headers","provider_token","body","JSON","stringify","then","data","json","response","events","items","map","title","summary","dateTime","date","description","prevState","handleDateClick","dayEvents","filter","toDateString","tileContent","view","length","width","margin","user","email","tile","index","toLocaleTimeString","e","target","value"],"sources":["/Users/richardmcgirt/Desktop/Warrenty2-/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useSession, useSupabaseClient, useSessionContext } from '@supabase/auth-helpers-react';\nimport DateTimePicker from 'react-datetime-picker';\nimport { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nfunction App() {\n  const [start, setStart] = useState(new Date());\n  const [end, setEnd] = useState(new Date());\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [eventsByCalendar, setEventsByCalendar] = useState({});\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n\n  const session = useSession(); // tokens, when session exists we have a user\n  const supabase = useSupabaseClient(); // talk to supabase!\n  const { isLoading } = useSessionContext();\n\n  const calendarInfo = [\n    { id: 'c_d113e252e0e5c8cfbf17a13149707a30d3c0fbeeff1baaac7a46940c2cc448ca@group.calendar.google.com', name: 'Charleston' },\n    { id: 'c_03867438b82e5dfd8d4d3b6096c8eb1c715425fa012054cc95f8dea7ef41c79b@group.calendar.google.com', name: 'Greensboro' },\n    { id: 'c_ad562073f4db2c47279af5aa40e53fc2641b12ad2497ccd925feb220a0f1abee@group.calendar.google.com', name: 'Myrtle Beach' },\n    { id: 'c_45db4e963c3363676038697855d7aacfd1075da441f9308e44714768d4a4f8de@group.calendar.google.com', name: 'Wilmington' },\n  ];\n\n  useEffect(() => {\n    if (session) {\n      calendarInfo.forEach(calendar => {\n        fetchEvents(calendar.id);\n      });\n    }\n  }, [session]);\n\n  async function googleSignIn() {\n    const { error } = await supabase.auth.signInWithOAuth({\n      provider: 'google',\n      options: {\n        scopes: 'https://www.googleapis.com/auth/calendar'\n      }\n    });\n    if (error) {\n      alert(\"Error logging in to Google provider with Supabase\");\n      console.log(error);\n    }\n  }\n\n  async function signOut() {\n    await supabase.auth.signOut();\n  }\n\n  async function createCalendarEvent(calendarId) {\n    console.log(\"Creating calendar event\");\n    const event = {\n      'summary': eventName,\n      'description': eventDescription,\n      'start': {\n        'dateTime': start.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      },\n      'end': {\n        'dateTime': end.toISOString(),\n        'timeZone': Intl.DateTimeFormat().resolvedOptions().timeZone\n      }\n    };\n    \n    await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      method: \"POST\",\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      },\n      body: JSON.stringify(event)\n    }).then((data) => data.json())\n      .then((data) => {\n        console.log(data);\n        alert(\"Event created, check your Google Calendar!\");\n        fetchEvents(calendarId); // Refresh events after creating a new one\n      });\n  }\n\n  async function fetchEvents(calendarId) {\n    const response = await fetch(`https://www.googleapis.com/calendar/v3/calendars/${calendarId}/events`, {\n      headers: {\n        'Authorization': 'Bearer ' + session.provider_token\n      }\n    });\n    \n    const data = await response.json();\n    const events = data.items.map(event => ({\n      title: event.summary,\n      start: new Date(event.start.dateTime || event.start.date),\n      end: new Date(event.end.dateTime || event.end.date),\n      description: event.description || '',\n    }));\n\n    setEventsByCalendar(prevState => ({\n      ...prevState,\n      [calendarId]: events\n    }));\n  }\n\n  function handleDateClick(date, calendarId) {\n    const dayEvents = eventsByCalendar[calendarId]?.filter(\n      event => event.start.toDateString() === date.toDateString()\n    );\n    setSelectedDate(date);\n    setStart(date);\n    setEnd(date);\n    setSelectedEvents(dayEvents || []);\n  }\n\n  function tileContent({ date, view }, calendarId) {\n    if (view === 'month') {\n      const dayEvents = eventsByCalendar[calendarId]?.filter(\n        event => event.start.toDateString() === date.toDateString()\n      );\n      return dayEvents && dayEvents.length > 0 ? <div className=\"event-dot\"></div> : null;\n    }\n  }\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"App\">\n      <div style={{ width: \"400px\", margin: \"30px auto\" }}>\n        {session ?\n          <>\n            <h2>Hey there {session.user.email}</h2>\n            <hr />\n            {calendarInfo.map(calendar => (\n              <div key={calendar.id}>\n                <h2>{calendar.name}</h2>\n                <Calendar\n                  onClickDay={(date) => handleDateClick(date, calendar.id)}\n                  value={selectedDate || new Date()}\n                  tileContent={(tile) => tileContent(tile, calendar.id)}\n                />\n                {selectedEvents.length > 0 && (\n                  <div>\n                    <h3>Events on {selectedDate?.toDateString()}</h3>\n                    <ul>\n                      {selectedEvents.map((event, index) => (\n                        <li key={index}>\n                          <strong>{event.title}</strong><br />\n                          {event.description && <em>{event.description}</em>}<br />\n                          {event.start.toLocaleTimeString()} - {event.end.toLocaleTimeString()}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                {selectedDate && (\n                  <>\n                    <p>Start of your event</p>\n                    <DateTimePicker onChange={setStart} value={start} />\n                    <p>End of your event</p>\n                    <DateTimePicker onChange={setEnd} value={end} />\n                    <p>Event name</p>\n                    <input type=\"text\" onChange={(e) => setEventName(e.target.value)} />\n                    <p>Event description</p>\n                    <input type=\"text\" onChange={(e) => setEventDescription(e.target.value)} />\n                    <hr />\n                    <button onClick={() => createCalendarEvent(calendar.id)}>Create Event in {calendar.name}</button>\n                  </>\n                )}\n              </div>\n            ))}\n            <p></p>\n            <button onClick={() => signOut()}>Sign Out</button>\n          </>\n          :\n          <>\n            <button onClick={() => googleSignIn()}>Sign In With Google</button>\n          </>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}